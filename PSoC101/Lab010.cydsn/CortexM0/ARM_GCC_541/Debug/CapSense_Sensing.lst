ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsTrimIdacsSourcing, %function
  24              	CapSense_SsTrimIdacsSourcing:
  25              	.LFB20:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 2


  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 3


  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 4


 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 5


 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 6


 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 7


 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 8


 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 9


 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 10


 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 11


 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 12


 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 13


 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 14


 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 15


 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 16


 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 17


 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 18


 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 19


1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 20


1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 21


1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 22


1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 23


1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 24


1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 25


1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 26


1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 27


1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 28


1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 29


1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 30


1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 31


1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 32


1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 33


1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 34


1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 35


1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 36


1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 37


2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 38


2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
  27              		.loc 1 2123 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
  36              		.loc 1 2127 0
  37 0002 0848     		ldr	r0, .L2
  38 0004 0368     		ldr	r3, [r0]
  39 0006 0F24     		movs	r4, #15
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 39


  40 0008 A343     		bics	r3, r4
  41 000a 1900     		movs	r1, r3
  42              	.LVL0:
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  43              		.loc 1 2128 0
  44 000c 064D     		ldr	r5, .L2+4
  45 000e 2B78     		ldrb	r3, [r5]
  46 0010 0F22     		movs	r2, #15
  47 0012 1340     		ands	r3, r2
  48 0014 0B43     		orrs	r3, r1
  49              	.LVL1:
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
  50              		.loc 1 2133 0
  51 0016 E132     		adds	r2, r2, #225
  52 0018 9343     		bics	r3, r2
  53              	.LVL2:
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  54              		.loc 1 2134 0
  55 001a 2A78     		ldrb	r2, [r5]
  56 001c A243     		bics	r2, r4
  57 001e 1343     		orrs	r3, r2
  58              	.LVL3:
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
  59              		.loc 1 2139 0
  60 0020 0360     		str	r3, [r0]
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
  61              		.loc 1 2140 0
  62              		@ sp needed
  63 0022 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0024 00FF0840 		.word	1074331392
  68 0028 62F1FF0F 		.word	268431714
  69              		.cfi_endproc
  70              	.LFE20:
  71              		.size	CapSense_SsTrimIdacsSourcing, .-CapSense_SsTrimIdacsSourcing
  72              		.section	.text.CapSense_SsTrimIdacs,"ax",%progbits
  73              		.align	2
  74              		.code	16
  75              		.thumb_func
  76              		.type	CapSense_SsTrimIdacs, %function
  77              	CapSense_SsTrimIdacs:
  78              	.LFB21:
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 40


2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  79              		.loc 1 2161 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
  87              		.loc 1 2168 0
  88 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacsSourcing
  89              	.LVL4:
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  90              		.loc 1 2172 0
  91              		@ sp needed
  92 0006 10BD     		pop	{r4, pc}
  93              		.cfi_endproc
  94              	.LFE21:
  95              		.size	CapSense_SsTrimIdacs, .-CapSense_SsTrimIdacs
  96              		.section	.text.CapSense_IsBusy,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_IsBusy
  99              		.code	16
 100              		.thumb_func
 101              		.type	CapSense_IsBusy, %function
 102              	CapSense_IsBusy:
 103              	.LFB0:
 237:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 104              		.loc 1 237 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 41


 108              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 109              		.loc 1 238 0
 110 0000 024B     		ldr	r3, .L6
 111 0002 DB68     		ldr	r3, [r3, #12]
 112 0004 8020     		movs	r0, #128
 113 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 114              		.loc 1 239 0
 115              		@ sp needed
 116 0008 7047     		bx	lr
 117              	.L7:
 118 000a C046     		.align	2
 119              	.L6:
 120 000c 00000000 		.word	CapSense_dsRam
 121              		.cfi_endproc
 122              	.LFE0:
 123              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 124              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 125              		.align	2
 126              		.global	CapSense_SetupWidget
 127              		.code	16
 128              		.thumb_func
 129              		.type	CapSense_SetupWidget, %function
 130              	CapSense_SetupWidget:
 131              	.LFB1:
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 132              		.loc 1 283 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL5:
 137 0000 10B5     		push	{r4, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 4, -8
 140              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 141              		.loc 1 286 0
 142 0002 0E4B     		ldr	r3, .L14
 143 0004 DB68     		ldr	r3, [r3, #12]
 144 0006 DB03     		lsls	r3, r3, #15
 145 0008 0DD4     		bmi	.L11
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 146              		.loc 1 296 0
 147 000a 0028     		cmp	r0, #0
 148 000c 0DD1     		bne	.L12
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 149              		.loc 1 297 0 discriminator 1
 150 000e 4309     		lsrs	r3, r0, #5
 151 0010 0433     		adds	r3, r3, #4
 152 0012 9B00     		lsls	r3, r3, #2
 153 0014 094A     		ldr	r2, .L14
 154 0016 9B58     		ldr	r3, [r3, r2]
 155 0018 1F22     		movs	r2, #31
 156 001a 0240     		ands	r2, r0
 157 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 42


 158              		.loc 1 296 0 discriminator 1
 159 001e DB07     		lsls	r3, r3, #31
 160 0020 05D4     		bmi	.L13
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 161              		.loc 1 304 0
 162 0022 0124     		movs	r4, #1
 163 0024 04E0     		b	.L9
 164              	.L11:
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 165              		.loc 1 289 0
 166 0026 1124     		movs	r4, #17
 167 0028 02E0     		b	.L9
 168              	.L12:
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 169              		.loc 1 304 0
 170 002a 0124     		movs	r4, #1
 171 002c 00E0     		b	.L9
 172              	.L13:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 173              		.loc 1 300 0
 174 002e 0024     		movs	r4, #0
 175              	.L9:
 176              	.LVL6:
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 177              		.loc 1 311 0
 178 0030 002C     		cmp	r4, #0
 179 0032 01D1     		bne	.L10
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 180              		.loc 1 324 0
 181 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 182              	.LVL7:
 183              	.L10:
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 184              		.loc 1 340 0
 185 0038 2000     		movs	r0, r4
 186              		@ sp needed
 187              	.LVL8:
 188 003a 10BD     		pop	{r4, pc}
 189              	.L15:
 190              		.align	2
 191              	.L14:
 192 003c 00000000 		.word	CapSense_dsRam
 193              		.cfi_endproc
 194              	.LFE1:
 195              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 196              		.section	.text.CapSense_Scan,"ax",%progbits
 197              		.align	2
 198              		.global	CapSense_Scan
 199              		.code	16
 200              		.thumb_func
 201              		.type	CapSense_Scan, %function
 202              	CapSense_Scan:
 203              	.LFB2:
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 204              		.loc 1 366 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 43


 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
 211              		.cfi_offset 14, -4
 212              	.LVL9:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 213              		.loc 1 369 0
 214 0002 084B     		ldr	r3, .L22
 215 0004 DB68     		ldr	r3, [r3, #12]
 216 0006 DB03     		lsls	r3, r3, #15
 217 0008 07D4     		bmi	.L19
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 218              		.loc 1 376 0
 219 000a 074B     		ldr	r3, .L22+4
 220 000c 1B78     		ldrb	r3, [r3]
 221 000e 012B     		cmp	r3, #1
 222 0010 05D1     		bne	.L21
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 223              		.loc 1 385 0
 224 0012 FFF7FEFF 		bl	CapSense_CSDScan
 225              	.LVL10:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 226              		.loc 1 367 0
 227 0016 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 228              		.loc 1 386 0
 229 0018 03E0     		b	.L17
 230              	.L19:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 231              		.loc 1 372 0
 232 001a 1120     		movs	r0, #17
 233 001c 01E0     		b	.L17
 234              	.L21:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 235              		.loc 1 394 0
 236 001e 0120     		movs	r0, #1
 237 0020 4042     		rsbs	r0, r0, #0
 238              	.L17:
 239              	.LVL11:
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 240              		.loc 1 399 0
 241              		@ sp needed
 242 0022 10BD     		pop	{r4, pc}
 243              	.L23:
 244              		.align	2
 245              	.L22:
 246 0024 00000000 		.word	CapSense_dsRam
 247 0028 00000000 		.word	.LANCHOR0
 248              		.cfi_endproc
 249              	.LFE2:
 250              		.size	CapSense_Scan, .-CapSense_Scan
 251              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 252              		.align	2
 253              		.global	CapSense_ScanAllWidgets
 254              		.code	16
 255              		.thumb_func
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 44


 256              		.type	CapSense_ScanAllWidgets, %function
 257              	CapSense_ScanAllWidgets:
 258              	.LFB3:
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 259              		.loc 1 428 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267              	.LVL12:
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 268              		.loc 1 433 0
 269 0002 0C4B     		ldr	r3, .L30
 270 0004 DB68     		ldr	r3, [r3, #12]
 271 0006 1B06     		lsls	r3, r3, #24
 272 0008 12D4     		bmi	.L29
 273 000a 0024     		movs	r4, #0
 274 000c 0120     		movs	r0, #1
 275 000e 4042     		rsbs	r0, r0, #0
 276 0010 0BE0     		b	.L26
 277              	.LVL13:
 278              	.L28:
 449:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 279              		.loc 1 449 0
 280 0012 2000     		movs	r0, r4
 281              	.LVL14:
 282 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 283              	.LVL15:
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 284              		.loc 1 451 0
 285 0018 0028     		cmp	r0, #0
 286 001a 05D1     		bne	.L27
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 287              		.loc 1 468 0
 288 001c 0022     		movs	r2, #0
 289 001e 064B     		ldr	r3, .L30+4
 290 0020 5A70     		strb	r2, [r3, #1]
 473:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 291              		.loc 1 473 0
 292 0022 FFF7FEFF 		bl	CapSense_Scan
 293              	.LVL16:
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 294              		.loc 1 475 0
 295 0026 04E0     		b	.L25
 296              	.L27:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 297              		.loc 1 446 0
 298 0028 0134     		adds	r4, r4, #1
 299              	.LVL17:
 300              	.L26:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 301              		.loc 1 444 0 discriminator 1
 302 002a 002C     		cmp	r4, #0
 303 002c F1D0     		beq	.L28
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 45


 304 002e 00E0     		b	.L25
 305              	.LVL18:
 306              	.L29:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 307              		.loc 1 436 0
 308 0030 1120     		movs	r0, #17
 309              	.LVL19:
 310              	.L25:
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 311              		.loc 1 481 0
 312              		@ sp needed
 313 0032 10BD     		pop	{r4, pc}
 314              	.L31:
 315              		.align	2
 316              	.L30:
 317 0034 00000000 		.word	CapSense_dsRam
 318 0038 00000000 		.word	.LANCHOR0
 319              		.cfi_endproc
 320              	.LFE3:
 321              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 322              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 323              		.align	2
 324              		.global	CapSense_SetupWidgetExt
 325              		.code	16
 326              		.thumb_func
 327              		.type	CapSense_SetupWidgetExt, %function
 328              	CapSense_SetupWidgetExt:
 329              	.LFB4:
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 330              		.loc 1 536 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              	.LVL20:
 335 0000 10B5     		push	{r4, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 4, -8
 338              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 339              		.loc 1 539 0
 340 0002 124B     		ldr	r3, .L39
 341 0004 DB68     		ldr	r3, [r3, #12]
 342 0006 DB03     		lsls	r3, r3, #15
 343 0008 13D4     		bmi	.L35
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 344              		.loc 1 549 0
 345 000a 0028     		cmp	r0, #0
 346 000c 13D1     		bne	.L36
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 347              		.loc 1 550 0 discriminator 1
 348 000e 4309     		lsrs	r3, r0, #5
 349 0010 0433     		adds	r3, r3, #4
 350 0012 9B00     		lsls	r3, r3, #2
 351 0014 0D4A     		ldr	r2, .L39
 352 0016 9B58     		ldr	r3, [r3, r2]
 353 0018 1F22     		movs	r2, #31
 354 001a 0240     		ands	r2, r0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 46


 355 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 356              		.loc 1 549 0 discriminator 1
 357 001e DB07     		lsls	r3, r3, #31
 358 0020 0BD5     		bpl	.L37
 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 359              		.loc 1 551 0
 360 0022 4301     		lsls	r3, r0, #5
 361 0024 0A4A     		ldr	r2, .L39+4
 362 0026 D318     		adds	r3, r2, r3
 363 0028 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 364              		.loc 1 550 0
 365 002a 8B42     		cmp	r3, r1
 366 002c 07D8     		bhi	.L38
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 367              		.loc 1 558 0
 368 002e 0124     		movs	r4, #1
 369 0030 06E0     		b	.L33
 370              	.L35:
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 371              		.loc 1 542 0
 372 0032 1124     		movs	r4, #17
 373 0034 04E0     		b	.L33
 374              	.L36:
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 375              		.loc 1 558 0
 376 0036 0124     		movs	r4, #1
 377 0038 02E0     		b	.L33
 378              	.L37:
 379 003a 0124     		movs	r4, #1
 380 003c 00E0     		b	.L33
 381              	.L38:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 382              		.loc 1 554 0
 383 003e 0024     		movs	r4, #0
 384              	.L33:
 385              	.LVL21:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 386              		.loc 1 565 0
 387 0040 002C     		cmp	r4, #0
 388 0042 01D1     		bne	.L34
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 389              		.loc 1 578 0
 390 0044 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 391              	.LVL22:
 392              	.L34:
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 393              		.loc 1 594 0
 394 0048 2000     		movs	r0, r4
 395              		@ sp needed
 396              	.LVL23:
 397 004a 10BD     		pop	{r4, pc}
 398              	.L40:
 399              		.align	2
 400              	.L39:
 401 004c 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 47


 402 0050 00000000 		.word	CapSense_dsFlash
 403              		.cfi_endproc
 404              	.LFE4:
 405              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 406              		.section	.text.CapSense_ScanExt,"ax",%progbits
 407              		.align	2
 408              		.global	CapSense_ScanExt
 409              		.code	16
 410              		.thumb_func
 411              		.type	CapSense_ScanExt, %function
 412              	CapSense_ScanExt:
 413              	.LFB5:
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 414              		.loc 1 642 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 10B5     		push	{r4, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422              	.LVL24:
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 423              		.loc 1 645 0
 424 0002 084B     		ldr	r3, .L47
 425 0004 DB68     		ldr	r3, [r3, #12]
 426 0006 DB03     		lsls	r3, r3, #15
 427 0008 07D4     		bmi	.L44
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 428              		.loc 1 652 0
 429 000a 074B     		ldr	r3, .L47+4
 430 000c 1B78     		ldrb	r3, [r3]
 431 000e 012B     		cmp	r3, #1
 432 0010 05D1     		bne	.L46
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 433              		.loc 1 661 0
 434 0012 FFF7FEFF 		bl	CapSense_CSDScanExt
 435              	.LVL25:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436              		.loc 1 643 0
 437 0016 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 438              		.loc 1 662 0
 439 0018 03E0     		b	.L42
 440              	.L44:
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441              		.loc 1 648 0
 442 001a 1120     		movs	r0, #17
 443 001c 01E0     		b	.L42
 444              	.L46:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 445              		.loc 1 670 0
 446 001e 0120     		movs	r0, #1
 447 0020 4042     		rsbs	r0, r0, #0
 448              	.L42:
 449              	.LVL26:
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 48


 450              		.loc 1 675 0
 451              		@ sp needed
 452 0022 10BD     		pop	{r4, pc}
 453              	.L48:
 454              		.align	2
 455              	.L47:
 456 0024 00000000 		.word	CapSense_dsRam
 457 0028 00000000 		.word	.LANCHOR0
 458              		.cfi_endproc
 459              	.LFE5:
 460              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 461              		.section	.text.CapSense_SetPinState,"ax",%progbits
 462              		.align	2
 463              		.global	CapSense_SetPinState
 464              		.code	16
 465              		.thumb_func
 466              		.type	CapSense_SetPinState, %function
 467              	CapSense_SetPinState:
 468              	.LFB7:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 469              		.loc 1 841 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              	.LVL27:
 474 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 475              		.cfi_def_cfa_offset 24
 476              		.cfi_offset 3, -24
 477              		.cfi_offset 4, -20
 478              		.cfi_offset 5, -16
 479              		.cfi_offset 6, -12
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 483              		.loc 1 866 0
 484 0004 4001     		lsls	r0, r0, #5
 485              	.LVL28:
 486 0006 244B     		ldr	r3, .L56
 487 0008 C458     		ldr	r4, [r0, r3]
 488 000a CB00     		lsls	r3, r1, #3
 489 000c 591A     		subs	r1, r3, r1
 490              	.LVL29:
 491 000e 8B00     		lsls	r3, r1, #2
 492 0010 E418     		adds	r4, r4, r3
 493              	.LVL30:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 494              		.loc 1 871 0
 495 0012 0025     		movs	r5, #0
 496 0014 3CE0     		b	.L50
 497              	.LVL31:
 498              	.L55:
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 499              		.loc 1 874 0
 500 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 501              	.LVL32:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 49


 502              		.loc 1 875 0
 503 001a 2168     		ldr	r1, [r4]
 504 001c 0B68     		ldr	r3, [r1]
 505 001e 277E     		ldrb	r7, [r4, #24]
 506 0020 0F22     		movs	r2, #15
 507 0022 BA40     		lsls	r2, r2, r7
 508 0024 9343     		bics	r3, r2
 509 0026 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 510              		.loc 1 876 0
 511 0028 6168     		ldr	r1, [r4, #4]
 512 002a 0B68     		ldr	r3, [r1]
 513 002c A77E     		ldrb	r7, [r4, #26]
 514 002e 0722     		movs	r2, #7
 515 0030 BA40     		lsls	r2, r2, r7
 516 0032 9343     		bics	r3, r2
 517 0034 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 518              		.loc 1 877 0
 519 0036 FFF7FEFF 		bl	CyExitCriticalSection
 520              	.LVL33:
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 521              		.loc 1 879 0
 522 003a 012E     		cmp	r6, #1
 523 003c 17D0     		beq	.L52
 524 003e 002E     		cmp	r6, #0
 525 0040 02D0     		beq	.L53
 526 0042 032E     		cmp	r6, #3
 527 0044 1FD0     		beq	.L54
 528 0046 21E0     		b	.L51
 529              	.L53:
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 530              		.loc 1 883 0
 531 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 532              	.LVL34:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 533              		.loc 1 884 0
 534 004c 6268     		ldr	r2, [r4, #4]
 535 004e 1168     		ldr	r1, [r2]
 536 0050 A77E     		ldrb	r7, [r4, #26]
 537 0052 0623     		movs	r3, #6
 538 0054 BB40     		lsls	r3, r3, r7
 539 0056 0B43     		orrs	r3, r1
 540 0058 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 541              		.loc 1 885 0
 542 005a A168     		ldr	r1, [r4, #8]
 543 005c 0B68     		ldr	r3, [r1]
 544 005e 677E     		ldrb	r7, [r4, #25]
 545 0060 0122     		movs	r2, #1
 546 0062 BA40     		lsls	r2, r2, r7
 547 0064 9343     		bics	r3, r2
 548 0066 0B60     		str	r3, [r1]
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 549              		.loc 1 886 0
 550 0068 FFF7FEFF 		bl	CyExitCriticalSection
 551              	.LVL35:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 50


 887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 552              		.loc 1 887 0
 553 006c 0EE0     		b	.L51
 554              	.L52:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 555              		.loc 1 890 0
 556 006e FFF7FEFF 		bl	CyEnterCriticalSection
 557              	.LVL36:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 558              		.loc 1 891 0
 559 0072 A168     		ldr	r1, [r4, #8]
 560 0074 0B68     		ldr	r3, [r1]
 561 0076 677E     		ldrb	r7, [r4, #25]
 562 0078 0122     		movs	r2, #1
 563 007a BA40     		lsls	r2, r2, r7
 564 007c 9343     		bics	r3, r2
 565 007e 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 566              		.loc 1 892 0
 567 0080 FFF7FEFF 		bl	CyExitCriticalSection
 568              	.LVL37:
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 569              		.loc 1 893 0
 570 0084 02E0     		b	.L51
 571              	.L54:
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 572              		.loc 1 898 0
 573 0086 2000     		movs	r0, r4
 574 0088 FFF7FEFF 		bl	CapSense_CSDConnectSns
 575              	.LVL38:
 576              	.L51:
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 577              		.loc 1 933 0 discriminator 2
 578 008c 1C34     		adds	r4, r4, #28
 579              	.LVL39:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 580              		.loc 1 871 0 discriminator 2
 581 008e 0135     		adds	r5, r5, #1
 582              	.LVL40:
 583              	.L50:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 584              		.loc 1 871 0 is_stmt 0 discriminator 1
 585 0090 002D     		cmp	r5, #0
 586 0092 C0D0     		beq	.L55
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587              		.loc 1 935 0 is_stmt 1
 588              		@ sp needed
 589              	.LVL41:
 590              	.LVL42:
 591              	.LVL43:
 592 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 593              	.L57:
 594 0096 C046     		.align	2
 595              	.L56:
 596 0098 00000000 		.word	CapSense_dsFlash
 597              		.cfi_endproc
 598              	.LFE7:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 51


 599              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 600              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 601              		.align	2
 602              		.global	CapSense_SsSetAllIOsState
 603              		.code	16
 604              		.thumb_func
 605              		.type	CapSense_SsSetAllIOsState, %function
 606              	CapSense_SsSetAllIOsState:
 607              	.LFB10:
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 608              		.loc 1 1167 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 8
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL44:
 613 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 614              		.cfi_def_cfa_offset 20
 615              		.cfi_offset 4, -20
 616              		.cfi_offset 5, -16
 617              		.cfi_offset 6, -12
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 4F46     		mov	r7, r9
 621 0004 4646     		mov	r6, r8
 622 0006 C0B4     		push	{r6, r7}
 623              		.cfi_def_cfa_offset 28
 624              		.cfi_offset 8, -28
 625              		.cfi_offset 9, -24
 626 0008 83B0     		sub	sp, sp, #12
 627              		.cfi_def_cfa_offset 40
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 628              		.loc 1 1180 0
 629 000a 0128     		cmp	r0, #1
 630 000c 09D0     		beq	.L64
 631 000e 0228     		cmp	r0, #2
 632 0010 03D0     		beq	.L61
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 633              		.loc 1 1184 0
 634 0012 0027     		movs	r7, #0
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 635              		.loc 1 1183 0
 636 0014 0623     		movs	r3, #6
 637 0016 9946     		mov	r9, r3
 638 0018 06E0     		b	.L60
 639              	.L61:
 640              	.LVL45:
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 641              		.loc 1 1192 0
 642 001a 0527     		movs	r7, #5
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 643              		.loc 1 1191 0
 644 001c 0023     		movs	r3, #0
 645 001e 9946     		mov	r9, r3
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 646              		.loc 1 1193 0
 647 0020 02E0     		b	.L60
 648              	.LVL46:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 52


 649              	.L64:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 650              		.loc 1 1188 0
 651 0022 0027     		movs	r7, #0
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 652              		.loc 1 1187 0
 653 0024 0023     		movs	r3, #0
 654 0026 9946     		mov	r9, r3
 655              	.L60:
 656              	.LVL47:
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
 657              		.loc 1 1201 0
 658 0028 164C     		ldr	r4, .L65
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 659              		.loc 1 1202 0
 660 002a 0025     		movs	r5, #0
 661 002c 23E0     		b	.L62
 662              	.LVL48:
 663              	.L63:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 664              		.loc 1 1204 0 discriminator 3
 665 002e FFF7FEFF 		bl	CyEnterCriticalSection
 666              	.LVL49:
 667 0032 0190     		str	r0, [sp, #4]
 668              	.LVL50:
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 669              		.loc 1 1206 0 discriminator 3
 670 0034 2268     		ldr	r2, [r4]
 671 0036 1368     		ldr	r3, [r2]
 672              	.LVL51:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 673              		.loc 1 1207 0 discriminator 3
 674 0038 2169     		ldr	r1, [r4, #16]
 675 003a 8B43     		bics	r3, r1
 676              	.LVL52:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677              		.loc 1 1208 0 discriminator 3
 678 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 679              		.loc 1 1210 0 discriminator 3
 680 003e 6068     		ldr	r0, [r4, #4]
 681 0040 0268     		ldr	r2, [r0]
 682              	.LVL53:
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 683              		.loc 1 1211 0 discriminator 3
 684 0042 A17E     		ldrb	r1, [r4, #26]
 685 0044 8846     		mov	r8, r1
 686 0046 0721     		movs	r1, #7
 687 0048 4646     		mov	r6, r8
 688 004a B140     		lsls	r1, r1, r6
 689 004c 8A43     		bics	r2, r1
 690              	.LVL54:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 691              		.loc 1 1212 0 discriminator 3
 692 004e 4946     		mov	r1, r9
 693 0050 B140     		lsls	r1, r1, r6
 694 0052 0A43     		orrs	r2, r1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 53


 695              	.LVL55:
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 696              		.loc 1 1213 0 discriminator 3
 697 0054 0260     		str	r2, [r0]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 698              		.loc 1 1215 0 discriminator 3
 699 0056 227E     		ldrb	r2, [r4, #24]
 700              	.LVL56:
 701 0058 3900     		movs	r1, r7
 702 005a 9140     		lsls	r1, r1, r2
 703 005c 0B43     		orrs	r3, r1
 704              	.LVL57:
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 705              		.loc 1 1216 0 discriminator 3
 706 005e 2268     		ldr	r2, [r4]
 707 0060 1360     		str	r3, [r2]
 708              	.LVL58:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 709              		.loc 1 1218 0 discriminator 3
 710 0062 A268     		ldr	r2, [r4, #8]
 711 0064 1368     		ldr	r3, [r2]
 712              	.LVL59:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 713              		.loc 1 1219 0 discriminator 3
 714 0066 6169     		ldr	r1, [r4, #20]
 715 0068 8B43     		bics	r3, r1
 716              	.LVL60:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 717              		.loc 1 1220 0 discriminator 3
 718 006a 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 719              		.loc 1 1222 0 discriminator 3
 720 006c 0198     		ldr	r0, [sp, #4]
 721 006e FFF7FEFF 		bl	CyExitCriticalSection
 722              	.LVL61:
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 723              		.loc 1 1225 0 discriminator 3
 724 0072 1C34     		adds	r4, r4, #28
 725              	.LVL62:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 726              		.loc 1 1202 0 discriminator 3
 727 0074 0135     		adds	r5, r5, #1
 728              	.LVL63:
 729              	.L62:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 730              		.loc 1 1202 0 is_stmt 0 discriminator 1
 731 0076 002D     		cmp	r5, #0
 732 0078 D9D0     		beq	.L63
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 733              		.loc 1 1238 0 is_stmt 1
 734 007a 03B0     		add	sp, sp, #12
 735              		@ sp needed
 736              	.LVL64:
 737              	.LVL65:
 738              	.LVL66:
 739              	.LVL67:
 740 007c 0CBC     		pop	{r2, r3}
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 54


 741 007e 9046     		mov	r8, r2
 742 0080 9946     		mov	r9, r3
 743 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 744              	.L66:
 745              		.align	2
 746              	.L65:
 747 0084 00000000 		.word	CapSense_ioList
 748              		.cfi_endproc
 749              	.LFE10:
 750              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 751              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 752              		.align	2
 753              		.global	CapSense_SsPostAllWidgetsScan
 754              		.code	16
 755              		.thumb_func
 756              		.type	CapSense_SsPostAllWidgetsScan, %function
 757              	CapSense_SsPostAllWidgetsScan:
 758              	.LFB11:
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 759              		.loc 1 1317 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 764              		.loc 1 1374 0
 765              		@ sp needed
 766 0000 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE11:
 769              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 770 0002 C046     		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 771              		.align	2
 772              		.global	CapSense_SsIsrInitialize
 773              		.code	16
 774              		.thumb_func
 775              		.type	CapSense_SsIsrInitialize, %function
 776              	CapSense_SsIsrInitialize:
 777              	.LFB12:
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 778              		.loc 1 1394 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              	.LVL68:
 783 0000 10B5     		push	{r4, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 4, -8
 786              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 787              		.loc 1 1395 0
 788 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 789              	.LVL69:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 790              		.loc 1 1396 0
 791              		@ sp needed
 792 0006 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 55


 793              		.cfi_endproc
 794              	.LFE12:
 795              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 796              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 797              		.align	2
 798              		.global	CapSense_SsSetModClkClockDivider
 799              		.code	16
 800              		.thumb_func
 801              		.type	CapSense_SsSetModClkClockDivider, %function
 802              	CapSense_SsSetModClkClockDivider:
 803              	.LFB13:
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 804              		.loc 1 1417 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809              	.LVL70:
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
 810              		.loc 1 1447 0
 811 0000 084B     		ldr	r3, .L70
 812 0002 1A68     		ldr	r2, [r3]
 813 0004 5200     		lsls	r2, r2, #1
 814 0006 5208     		lsrs	r2, r2, #1
 815 0008 1A60     		str	r2, [r3]
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
 816              		.loc 1 1455 0
 817 000a 1A68     		ldr	r2, [r3]
 818 000c 120C     		lsrs	r2, r2, #16
 819 000e 1204     		lsls	r2, r2, #16
 820              	.LVL71:
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
 821              		.loc 1 1456 0
 822 0010 0138     		subs	r0, r0, #1
 823              	.LVL72:
 824 0012 1043     		orrs	r0, r2
 825              	.LVL73:
1457:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 826              		.loc 1 1457 0
 827 0014 1860     		str	r0, [r3]
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
 828              		.loc 1 1460 0
 829 0016 1A68     		ldr	r2, [r3]
 830 0018 8021     		movs	r1, #128
 831 001a 0906     		lsls	r1, r1, #24
 832 001c 0A43     		orrs	r2, r1
 833 001e 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 834              		.loc 1 1464 0
 835              		@ sp needed
 836 0020 7047     		bx	lr
 837              	.L71:
 838 0022 C046     		.align	2
 839              	.L70:
 840 0024 00000240 		.word	1073872896
 841              		.cfi_endproc
 842              	.LFE13:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 56


 843              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 844              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 845              		.align	2
 846              		.global	CapSense_SsSetSnsClockDivider
 847              		.code	16
 848              		.thumb_func
 849              		.type	CapSense_SsSetSnsClockDivider, %function
 850              	CapSense_SsSetSnsClockDivider:
 851              	.LFB14:
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 852              		.loc 1 1485 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857              	.LVL74:
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
 858              		.loc 1 1528 0
 859 0000 084B     		ldr	r3, .L73
 860 0002 1A68     		ldr	r2, [r3]
 861 0004 5200     		lsls	r2, r2, #1
 862 0006 5208     		lsrs	r2, r2, #1
 863 0008 1A60     		str	r2, [r3]
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
 864              		.loc 1 1536 0
 865 000a 1A68     		ldr	r2, [r3]
 866 000c 120C     		lsrs	r2, r2, #16
 867 000e 1204     		lsls	r2, r2, #16
 868              	.LVL75:
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
 869              		.loc 1 1537 0
 870 0010 0138     		subs	r0, r0, #1
 871              	.LVL76:
 872 0012 1043     		orrs	r0, r2
 873              	.LVL77:
1538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 874              		.loc 1 1538 0
 875 0014 1860     		str	r0, [r3]
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
 876              		.loc 1 1541 0
 877 0016 1A68     		ldr	r2, [r3]
 878 0018 8021     		movs	r1, #128
 879 001a 0906     		lsls	r1, r1, #24
 880 001c 0A43     		orrs	r2, r1
 881 001e 1A60     		str	r2, [r3]
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 882              		.loc 1 1546 0
 883              		@ sp needed
 884 0020 7047     		bx	lr
 885              	.L74:
 886 0022 C046     		.align	2
 887              	.L73:
 888 0024 40000240 		.word	1073872960
 889              		.cfi_endproc
 890              	.LFE14:
 891              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 892              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 57


 893              		.align	2
 894              		.global	CapSense_SsSetClockDividers
 895              		.code	16
 896              		.thumb_func
 897              		.type	CapSense_SsSetClockDividers, %function
 898              	CapSense_SsSetClockDividers:
 899              	.LFB15:
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 900              		.loc 1 1569 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              	.LVL78:
 905 0000 10B5     		push	{r4, lr}
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 4, -8
 908              		.cfi_offset 14, -4
 909 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 910              		.loc 1 1571 0
 911 0004 0800     		movs	r0, r1
 912              	.LVL79:
 913 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 914              	.LVL80:
1574:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 915              		.loc 1 1574 0
 916 000a 2000     		movs	r0, r4
 917 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 918              	.LVL81:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 919              		.loc 1 1575 0
 920              		@ sp needed
 921              	.LVL82:
 922 0010 10BD     		pop	{r4, pc}
 923              		.cfi_endproc
 924              	.LFE15:
 925              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 926 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 927              		.align	2
 928              		.global	CapSense_CalibrateWidget
 929              		.code	16
 930              		.thumb_func
 931              		.type	CapSense_CalibrateWidget, %function
 932              	CapSense_CalibrateWidget:
 933              	.LFB16:
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 934              		.loc 1 1621 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              	.LVL83:
 939 0000 10B5     		push	{r4, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 4, -8
 942              		.cfi_offset 14, -4
 943 0002 031E     		subs	r3, r0, #0
 944              	.LVL84:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 58


1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 945              		.loc 1 1626 0
 946 0004 01D1     		bne	.L79
1622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 947              		.loc 1 1622 0
 948 0006 0020     		movs	r0, #0
 949              	.LVL85:
 950 0008 00E0     		b	.L77
 951              	.LVL86:
 952              	.L79:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 953              		.loc 1 1628 0
 954 000a 0120     		movs	r0, #1
 955              	.LVL87:
 956              	.L77:
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 957              		.loc 1 1646 0
 958 000c 0028     		cmp	r0, #0
 959 000e 03D1     		bne	.L78
1685:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960              		.loc 1 1685 0
 961 0010 5521     		movs	r1, #85
 962 0012 1800     		movs	r0, r3
 963              	.LVL88:
 964 0014 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 965              	.LVL89:
 966              	.L78:
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967              		.loc 1 1701 0
 968              		@ sp needed
 969 0018 10BD     		pop	{r4, pc}
 970              		.cfi_endproc
 971              	.LFE16:
 972              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 973 001a C046     		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 974              		.align	2
 975              		.global	CapSense_CalibrateAllWidgets
 976              		.code	16
 977              		.thumb_func
 978              		.type	CapSense_CalibrateAllWidgets, %function
 979              	CapSense_CalibrateAllWidgets:
 980              	.LFB17:
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 981              		.loc 1 1738 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985 0000 70B5     		push	{r4, r5, r6, lr}
 986              		.cfi_def_cfa_offset 16
 987              		.cfi_offset 4, -16
 988              		.cfi_offset 5, -12
 989              		.cfi_offset 6, -8
 990              		.cfi_offset 14, -4
 991              	.LVL90:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 992              		.loc 1 1742 0
 993 0002 0024     		movs	r4, #0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 59


1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 994              		.loc 1 1739 0
 995 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 996              		.loc 1 1742 0
 997 0006 04E0     		b	.L81
 998              	.LVL91:
 999              	.L82:
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1000              		.loc 1 1744 0 discriminator 3
 1001 0008 2000     		movs	r0, r4
 1002 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1003              	.LVL92:
 1004 000e 0543     		orrs	r5, r0
 1005              	.LVL93:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1006              		.loc 1 1742 0 discriminator 3
 1007 0010 0134     		adds	r4, r4, #1
 1008              	.LVL94:
 1009              	.L81:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1010              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1011 0012 002C     		cmp	r4, #0
 1012 0014 F8D0     		beq	.L82
1748:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1013              		.loc 1 1748 0 is_stmt 1
 1014 0016 2800     		movs	r0, r5
 1015              		@ sp needed
 1016              	.LVL95:
 1017              	.LVL96:
 1018 0018 70BD     		pop	{r4, r5, r6, pc}
 1019              		.cfi_endproc
 1020              	.LFE17:
 1021              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1022 001a C046     		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1023              		.align	2
 1024              		.global	CapSense_SsCSDGetColSnsClkDivider
 1025              		.code	16
 1026              		.thumb_func
 1027              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1028              	CapSense_SsCSDGetColSnsClkDivider:
 1029              	.LFB24:
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 60


2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 61


2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 62


2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 63


2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 64


2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 65


2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 66


2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 67


2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 68


2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 69


2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 70


2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1030              		.loc 1 2793 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035              	.LVL97:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1036              		.loc 1 2800 0
 1037 0000 4001     		lsls	r0, r0, #5
 1038              	.LVL98:
 1039 0002 024B     		ldr	r3, .L84
 1040 0004 1818     		adds	r0, r3, r0
 1041 0006 4368     		ldr	r3, [r0, #4]
 1042              	.LVL99:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 71


2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1043              		.loc 1 2803 0
 1044 0008 9889     		ldrh	r0, [r3, #12]
 1045              	.LVL100:
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1046              		.loc 1 2811 0
 1047              		@ sp needed
 1048 000a 7047     		bx	lr
 1049              	.L85:
 1050              		.align	2
 1051              	.L84:
 1052 000c 00000000 		.word	CapSense_dsFlash
 1053              		.cfi_endproc
 1054              	.LFE24:
 1055              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1056              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1057              		.align	2
 1058              		.global	CapSense_SsCSDCalcPrsSize
 1059              		.code	16
 1060              		.thumb_func
 1061              		.type	CapSense_SsCSDCalcPrsSize, %function
 1062              	CapSense_SsCSDCalcPrsSize:
 1063              	.LFB25:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 72


2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1064              		.loc 1 2881 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 0, uses_anonymous_args = 0
 1068              		@ link register save eliminated.
 1069              	.LVL101:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 73


2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
 1070              		.loc 1 2894 0
 1071 0000 4200     		lsls	r2, r0, #1
 1072              	.LVL102:
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1073              		.loc 1 2897 0
 1074 0002 4003     		lsls	r0, r0, #13
 1075 0004 801A     		subs	r0, r0, r2
 1076 0006 0123     		movs	r3, #1
 1077 0008 8B40     		lsls	r3, r3, r1
 1078 000a 013B     		subs	r3, r3, #1
 1079 000c 9842     		cmp	r0, r3
 1080 000e 05D9     		bls	.L88
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1081              		.loc 1 2902 0
 1082 0010 1102     		lsls	r1, r2, #8
 1083              	.LVL103:
 1084 0012 8A1A     		subs	r2, r1, r2
 1085              	.LVL104:
 1086 0014 9342     		cmp	r3, r2
 1087 0016 03D3     		bcc	.L89
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1088              		.loc 1 2905 0
 1089 0018 4020     		movs	r0, #64
 1090 001a 02E0     		b	.L87
 1091              	.LVL105:
 1092              	.L88:
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1093              		.loc 1 2900 0
 1094 001c C020     		movs	r0, #192
 1095 001e 00E0     		b	.L87
 1096              	.LVL106:
 1097              	.L89:
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1098              		.loc 1 2910 0
 1099 0020 0020     		movs	r0, #0
 1100              	.L87:
 1101              	.LVL107:
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 74


2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1102              		.loc 1 2913 0
 1103 0022 C0B2     		uxtb	r0, r0
 1104              	.LVL108:
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1105              		.loc 1 2914 0
 1106              		@ sp needed
 1107 0024 7047     		bx	lr
 1108              		.cfi_endproc
 1109              	.LFE25:
 1110              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1111 0026 C046     		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1112              		.align	2
 1113              		.code	16
 1114              		.thumb_func
 1115              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1116              	CapSense_SsSetWidgetSenseClkSrc:
 1117              	.LFB23:
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1118              		.loc 1 2458 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              	.LVL109:
 1123 0000 10B5     		push	{r4, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 4, -8
 1126              		.cfi_offset 14, -4
 1127 0002 0C00     		movs	r4, r1
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1128              		.loc 1 2470 0
 1129 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1130              	.LVL110:
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
 1131              		.loc 1 2490 0
 1132 0008 4000     		lsls	r0, r0, #1
 1133              	.LVL111:
 1134 000a 2188     		ldrh	r1, [r4]
 1135 000c FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1136              	.LVL112:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1137              		.loc 1 2499 0
 1138 0010 A073     		strb	r0, [r4, #14]
2534:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1139              		.loc 1 2534 0
 1140              		@ sp needed
 1141              	.LVL113:
 1142 0012 10BD     		pop	{r4, pc}
 1143              		.cfi_endproc
 1144              	.LFE23:
 1145              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1146              		.global	__aeabi_uidiv
 1147              		.section	.text.CapSense_SsAutoTuneWidget,"ax",%progbits
 1148              		.align	2
 1149              		.global	CapSense_SsAutoTuneWidget
 1150              		.code	16
 1151              		.thumb_func
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 75


 1152              		.type	CapSense_SsAutoTuneWidget, %function
 1153              	CapSense_SsAutoTuneWidget:
 1154              	.LFB18:
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1155              		.loc 1 1781 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 32
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              	.LVL114:
 1160 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1161              		.cfi_def_cfa_offset 20
 1162              		.cfi_offset 4, -20
 1163              		.cfi_offset 5, -16
 1164              		.cfi_offset 6, -12
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 4746     		mov	r7, r8
 1168 0004 80B4     		push	{r7}
 1169              		.cfi_def_cfa_offset 24
 1170              		.cfi_offset 8, -24
 1171 0006 88B0     		sub	sp, sp, #32
 1172              		.cfi_def_cfa_offset 56
 1173 0008 0500     		movs	r5, r0
 1174              	.LVL115:
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 1175              		.loc 1 1801 0
 1176 000a 4301     		lsls	r3, r0, #5
 1177 000c 494A     		ldr	r2, .L101
 1178 000e D318     		adds	r3, r2, r3
 1179              	.LVL116:
 1180 0010 5C68     		ldr	r4, [r3, #4]
 1181              	.LVL117:
1802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1182              		.loc 1 1802 0
 1183 0012 9F68     		ldr	r7, [r3, #8]
 1184              	.LVL118:
1823:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1185              		.loc 1 1823 0
 1186 0014 484B     		ldr	r3, .L101+4
 1187              	.LVL119:
 1188 0016 197F     		ldrb	r1, [r3, #28]
 1189 0018 4848     		ldr	r0, .L101+8
 1190              	.LVL120:
 1191 001a FFF7FEFF 		bl	__aeabi_uidiv
 1192              	.LVL121:
 1193 001e 4308     		lsrs	r3, r0, #1
 1194 0020 9846     		mov	r8, r3
 1195              	.LVL122:
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
 1196              		.loc 1 1834 0
 1197 0022 FA26     		movs	r6, #250
 1198 0024 B600     		lsls	r6, r6, #2
 1199 0026 1800     		movs	r0, r3
 1200 0028 7043     		muls	r0, r6
 1201              	.LVL123:
1835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1202              		.loc 1 1835 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 76


 1203 002a 4549     		ldr	r1, .L101+12
 1204 002c FFF7FEFF 		bl	__aeabi_uidiv
 1205              	.LVL124:
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1206              		.loc 1 1837 0
 1207 0030 B042     		cmp	r0, r6
 1208 0032 00D8     		bhi	.L92
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1209              		.loc 1 1828 0
 1210 0034 3000     		movs	r0, r6
 1211              	.LVL125:
 1212              	.L92:
1842:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1213              		.loc 1 1842 0
 1214 0036 434B     		ldr	r3, .L101+16
 1215 0038 9C46     		mov	ip, r3
 1216 003a 6044     		add	r0, r0, ip
 1217              	.LVL126:
 1218 003c FA21     		movs	r1, #250
 1219 003e 8900     		lsls	r1, r1, #2
 1220 0040 FFF7FEFF 		bl	__aeabi_uidiv
 1221              	.LVL127:
 1222 0044 0600     		movs	r6, r0
 1223              	.LVL128:
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1224              		.loc 1 1845 0
 1225 0046 C307     		lsls	r3, r0, #31
 1226 0048 00D5     		bpl	.L93
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1227              		.loc 1 1847 0
 1228 004a 0136     		adds	r6, r6, #1
 1229              	.LVL129:
 1230              	.L93:
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
 1231              		.loc 1 1851 0
 1232 004c 01AB     		add	r3, sp, #4
 1233 004e 4246     		mov	r2, r8
 1234 0050 DA82     		strh	r2, [r3, #22]
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1235              		.loc 1 1852 0
 1236 0052 FA22     		movs	r2, #250
 1237 0054 9200     		lsls	r2, r2, #2
 1238 0056 1A82     		strh	r2, [r3, #16]
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
 1239              		.loc 1 1853 0
 1240 0058 C832     		adds	r2, r2, #200
 1241 005a 5A82     		strh	r2, [r3, #18]
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
 1242              		.loc 1 1854 0
 1243 005c 228A     		ldrh	r2, [r4, #16]
 1244 005e 9A82     		strh	r2, [r3, #20]
1855:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1245              		.loc 1 1855 0
 1246 0060 2200     		movs	r2, r4
 1247 0062 1232     		adds	r2, r2, #18
 1248 0064 0492     		str	r2, [sp, #16]
1864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 77


 1249              		.loc 1 1864 0
 1250 0066 0C23     		movs	r3, #12
 1251 0068 2380     		strh	r3, [r4]
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
 1252              		.loc 1 1866 0
 1253 006a 3749     		ldr	r1, .L101+20
 1254 006c 4046     		mov	r0, r8
 1255 006e FFF7FEFF 		bl	__aeabi_uidiv
 1256              	.LVL130:
 1257 0072 A081     		strh	r0, [r4, #12]
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1258              		.loc 1 1867 0
 1259 0074 0023     		movs	r3, #0
 1260 0076 A373     		strb	r3, [r4, #14]
1875:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1261              		.loc 1 1875 0
 1262 0078 5521     		movs	r1, #85
 1263 007a 2800     		movs	r0, r5
 1264 007c FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1265              	.LVL131:
1793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1266              		.loc 1 1793 0
 1267 0080 0021     		movs	r1, #0
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
 1268              		.loc 1 1791 0
 1269 0082 0023     		movs	r3, #0
 1270 0084 9C46     		mov	ip, r3
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1271              		.loc 1 1878 0
 1272 0086 0022     		movs	r2, #0
 1273 0088 07E0     		b	.L94
 1274              	.LVL132:
 1275              	.L96:
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1276              		.loc 1 1881 0
 1277 008a 7B7A     		ldrb	r3, [r7, #9]
 1278 008c 9942     		cmp	r1, r3
 1279 008e 02D2     		bcs	.L95
 1280              	.LVL133:
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1281              		.loc 1 1887 0
 1282 0090 3988     		ldrh	r1, [r7]
 1283 0092 8C46     		mov	ip, r1
 1284              	.LVL134:
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
 1285              		.loc 1 1886 0
 1286 0094 1900     		movs	r1, r3
 1287              	.LVL135:
 1288              	.L95:
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1289              		.loc 1 1898 0 discriminator 2
 1290 0096 0A37     		adds	r7, r7, #10
 1291              	.LVL136:
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1292              		.loc 1 1878 0 discriminator 2
 1293 0098 0132     		adds	r2, r2, #1
 1294              	.LVL137:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 78


 1295              	.L94:
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1296              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1297 009a 6B01     		lsls	r3, r5, #5
 1298 009c 2548     		ldr	r0, .L101
 1299 009e C318     		adds	r3, r0, r3
 1300 00a0 DB7E     		ldrb	r3, [r3, #27]
 1301 00a2 9A42     		cmp	r2, r3
 1302 00a4 F1D3     		bcc	.L96
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
 1303              		.loc 1 1902 0 is_stmt 1
 1304 00a6 637A     		ldrb	r3, [r4, #9]
 1305 00a8 01AF     		add	r7, sp, #4
 1306              	.LVL138:
 1307 00aa BB76     		strb	r3, [r7, #26]
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
 1308              		.loc 1 1903 0
 1309 00ac F976     		strb	r1, [r7, #27]
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1310              		.loc 1 1904 0
 1311 00ae A37A     		ldrb	r3, [r4, #10]
 1312 00b0 DB00     		lsls	r3, r3, #3
 1313 00b2 264A     		ldr	r2, .L101+24
 1314              	.LVL139:
 1315 00b4 D318     		adds	r3, r2, r3
 1316 00b6 5B68     		ldr	r3, [r3, #4]
 1317 00b8 0293     		str	r3, [sp, #8]
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
 1318              		.loc 1 1905 0
 1319 00ba 0C23     		movs	r3, #12
 1320 00bc 9846     		mov	r8, r3
 1321              	.LVL140:
 1322 00be A044     		add	r8, r8, r4
 1323 00c0 4346     		mov	r3, r8
 1324 00c2 0393     		str	r3, [sp, #12]
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
 1325              		.loc 1 1906 0
 1326 00c4 FA23     		movs	r3, #250
 1327 00c6 9B00     		lsls	r3, r3, #2
 1328 00c8 6046     		mov	r0, ip
 1329 00ca 5843     		muls	r0, r3
 1330 00cc 2049     		ldr	r1, .L101+28
 1331              	.LVL141:
 1332 00ce FFF7FEFF 		bl	__aeabi_uidiv
 1333              	.LVL142:
 1334 00d2 3883     		strh	r0, [r7, #24]
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
 1335              		.loc 1 1910 0
 1336 00d4 3800     		movs	r0, r7
 1337 00d6 FFF7FEFF 		bl	SmartSense_TunePrescalers
 1338              	.LVL143:
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1339              		.loc 1 1911 0
 1340 00da 0190     		str	r0, [sp, #4]
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1341              		.loc 1 1914 0
 1342 00dc 01E0     		b	.L97
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 79


 1343              	.L98:
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1344              		.loc 1 1916 0
 1345 00de 5B00     		lsls	r3, r3, #1
 1346 00e0 A381     		strh	r3, [r4, #12]
 1347              	.L97:
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1348              		.loc 1 1914 0
 1349 00e2 A389     		ldrh	r3, [r4, #12]
 1350 00e4 9E42     		cmp	r6, r3
 1351 00e6 FAD8     		bhi	.L98
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1352              		.loc 1 1972 0
 1353 00e8 1A4B     		ldr	r3, .L101+32
 1354 00ea 9842     		cmp	r0, r3
 1355 00ec 01D8     		bhi	.L100
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1356              		.loc 1 1782 0
 1357 00ee 0026     		movs	r6, #0
 1358              	.LVL144:
 1359 00f0 00E0     		b	.L99
 1360              	.LVL145:
 1361              	.L100:
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1362              		.loc 1 1974 0
 1363 00f2 0626     		movs	r6, #6
 1364              	.LVL146:
 1365              	.L99:
1984:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1366              		.loc 1 1984 0
 1367 00f4 5521     		movs	r1, #85
 1368 00f6 2800     		movs	r0, r5
 1369              	.LVL147:
 1370 00f8 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1371              	.LVL148:
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
 1372              		.loc 1 1986 0
 1373 00fc A37A     		ldrb	r3, [r4, #10]
 1374 00fe DB00     		lsls	r3, r3, #3
 1375 0100 124A     		ldr	r2, .L101+24
 1376 0102 D318     		adds	r3, r2, r3
 1377 0104 5B68     		ldr	r3, [r3, #4]
 1378 0106 01A8     		add	r0, sp, #4
 1379 0108 4360     		str	r3, [r0, #4]
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1380              		.loc 1 1987 0
 1381 010a 637A     		ldrb	r3, [r4, #9]
 1382 010c 8376     		strb	r3, [r0, #26]
1988:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1383              		.loc 1 1988 0
 1384 010e 4346     		mov	r3, r8
 1385 0110 8360     		str	r3, [r0, #8]
2003:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1386              		.loc 1 2003 0
 1387 0112 FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1388              	.LVL149:
 1389 0116 2080     		strh	r0, [r4]
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 80


2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1390              		.loc 1 2013 0
 1391 0118 2100     		movs	r1, r4
 1392 011a 2800     		movs	r0, r5
 1393 011c FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1394              	.LVL150:
2016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1395              		.loc 1 2016 0
 1396 0120 5521     		movs	r1, #85
 1397 0122 2800     		movs	r0, r5
 1398 0124 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1399              	.LVL151:
 1400 0128 3043     		orrs	r0, r6
 1401              	.LVL152:
2023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1402              		.loc 1 2023 0
 1403 012a 08B0     		add	sp, sp, #32
 1404              		@ sp needed
 1405              	.LVL153:
 1406              	.LVL154:
 1407 012c 04BC     		pop	{r2}
 1408 012e 9046     		mov	r8, r2
 1409 0130 F0BD     		pop	{r4, r5, r6, r7, pc}
 1410              	.L102:
 1411 0132 C046     		.align	2
 1412              	.L101:
 1413 0134 00000000 		.word	CapSense_dsFlash
 1414 0138 00000000 		.word	CapSense_dsRam
 1415 013c C05D0000 		.word	24000
 1416 0140 38310000 		.word	12600
 1417 0144 E7030000 		.word	999
 1418 0148 DC050000 		.word	1500
 1419 014c 00000000 		.word	.LANCHOR1
 1420 0150 FF0F0000 		.word	4095
 1421 0154 880D0100 		.word	69000
 1422              		.cfi_endproc
 1423              	.LFE18:
 1424              		.size	CapSense_SsAutoTuneWidget, .-CapSense_SsAutoTuneWidget
 1425              		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1426              		.align	2
 1427              		.global	CapSense_SsAutoTune
 1428              		.code	16
 1429              		.thumb_func
 1430              		.type	CapSense_SsAutoTune, %function
 1431              	CapSense_SsAutoTune:
 1432              	.LFB19:
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1433              		.loc 1 2048 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 1437 0000 70B5     		push	{r4, r5, r6, lr}
 1438              		.cfi_def_cfa_offset 16
 1439              		.cfi_offset 4, -16
 1440              		.cfi_offset 5, -12
 1441              		.cfi_offset 6, -8
 1442              		.cfi_offset 14, -4
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 81


 1443              	.LVL155:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1444              		.loc 1 2053 0
 1445 0002 0024     		movs	r4, #0
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1446              		.loc 1 2049 0
 1447 0004 0025     		movs	r5, #0
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1448              		.loc 1 2053 0
 1449 0006 04E0     		b	.L104
 1450              	.LVL156:
 1451              	.L105:
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1452              		.loc 1 2058 0
 1453 0008 2000     		movs	r0, r4
 1454 000a FFF7FEFF 		bl	CapSense_SsAutoTuneWidget
 1455              	.LVL157:
 1456 000e 0543     		orrs	r5, r0
 1457              	.LVL158:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1458              		.loc 1 2053 0
 1459 0010 0134     		adds	r4, r4, #1
 1460              	.LVL159:
 1461              	.L104:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1462              		.loc 1 2053 0 is_stmt 0 discriminator 1
 1463 0012 002C     		cmp	r4, #0
 1464 0014 F8D0     		beq	.L105
2062:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1465              		.loc 1 2062 0 is_stmt 1
 1466 0016 2800     		movs	r0, r5
 1467              		@ sp needed
 1468              	.LVL160:
 1469              	.LVL161:
 1470 0018 70BD     		pop	{r4, r5, r6, pc}
 1471              		.cfi_endproc
 1472              	.LFE19:
 1473              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1474 001a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1475              		.align	2
 1476              		.global	CapSense_SsInitializeSourceSenseClk
 1477              		.code	16
 1478              		.thumb_func
 1479              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1480              	CapSense_SsInitializeSourceSenseClk:
 1481              	.LFB22:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1482              		.loc 1 2405 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486 0000 10B5     		push	{r4, lr}
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490              	.LVL162:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 82


 1491              		.loc 1 2409 0
 1492 0002 0024     		movs	r4, #0
 1493 0004 07E0     		b	.L107
 1494              	.LVL163:
 1495              	.L108:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1496              		.loc 1 2411 0
 1497 0006 6301     		lsls	r3, r4, #5
 1498 0008 044A     		ldr	r2, .L109
 1499 000a D318     		adds	r3, r2, r3
 1500 000c 5968     		ldr	r1, [r3, #4]
 1501              	.LVL164:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1502              		.loc 1 2417 0
 1503 000e 2000     		movs	r0, r4
 1504 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1505              	.LVL165:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1506              		.loc 1 2409 0
 1507 0014 0134     		adds	r4, r4, #1
 1508              	.LVL166:
 1509              	.L107:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1510              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1511 0016 002C     		cmp	r4, #0
 1512 0018 F5D0     		beq	.L108
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1513              		.loc 1 2432 0 is_stmt 1
 1514              		@ sp needed
 1515              	.LVL167:
 1516 001a 10BD     		pop	{r4, pc}
 1517              	.L110:
 1518              		.align	2
 1519              	.L109:
 1520 001c 00000000 		.word	CapSense_dsFlash
 1521              		.cfi_endproc
 1522              	.LFE22:
 1523              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1524              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1525              		.align	2
 1526              		.global	CapSense_SetInactiveElectrodeState
 1527              		.code	16
 1528              		.thumb_func
 1529              		.type	CapSense_SetInactiveElectrodeState, %function
 1530              	CapSense_SetInactiveElectrodeState:
 1531              	.LFB27:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 83


2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 84


2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 85


3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 86


3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 87


3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1532              		.loc 1 3205 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              	.LVL168:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 88


 1537 0000 10B5     		push	{r4, lr}
 1538              		.cfi_def_cfa_offset 8
 1539              		.cfi_offset 4, -8
 1540              		.cfi_offset 14, -4
 1541              	.LVL169:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1542              		.loc 1 3208 0
 1543 0002 0028     		cmp	r0, #0
 1544 0004 03D1     		bne	.L115
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1545              		.loc 1 3212 0
 1546 0006 4223     		movs	r3, #66
 1547 0008 034A     		ldr	r2, .L116
 1548 000a D154     		strb	r1, [r2, r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1549              		.loc 1 3213 0
 1550 000c 03E0     		b	.L114
 1551              	.L115:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 89


3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
 1552              		.loc 1 3256 0 discriminator 1
 1553 000e 0020     		movs	r0, #0
 1554              	.LVL170:
 1555 0010 FFF7FEFF 		bl	CyHalt
 1556              	.LVL171:
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1557              		.loc 1 3257 0 discriminator 1
 1558 0014 0120     		movs	r0, #1
 1559              	.LVL172:
 1560              	.L114:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1561              		.loc 1 3262 0
 1562              		@ sp needed
 1563 0016 10BD     		pop	{r4, pc}
 1564              	.L117:
 1565              		.align	2
 1566              	.L116:
 1567 0018 00000000 		.word	CapSense_dsRam
 1568              		.cfi_endproc
 1569              	.LFE27:
 1570              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 1571              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1572              		.align	2
 1573              		.global	CapSense_WriteBitsSafe
 1574              		.code	16
 1575              		.thumb_func
 1576              		.type	CapSense_WriteBitsSafe, %function
 1577              	CapSense_WriteBitsSafe:
 1578              	.LFB28:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 90


3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1579              		.loc 1 3290 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              	.LVL173:
 1584 0000 70B5     		push	{r4, r5, r6, lr}
 1585              		.cfi_def_cfa_offset 16
 1586              		.cfi_offset 4, -16
 1587              		.cfi_offset 5, -12
 1588              		.cfi_offset 6, -8
 1589              		.cfi_offset 14, -4
 1590 0002 0500     		movs	r5, r0
 1591 0004 0E00     		movs	r6, r1
 1592 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1593              		.loc 1 3291 0
 1594 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1595              	.LVL174:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1596              		.loc 1 3292 0
 1597 000c 2B68     		ldr	r3, [r5]
 1598 000e 5C40     		eors	r4, r3
 1599              	.LVL175:
 1600 0010 3440     		ands	r4, r6
 1601 0012 5C40     		eors	r4, r3
 1602 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1603              		.loc 1 3293 0
 1604 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1605              	.LVL176:
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1606              		.loc 1 3294 0
 1607              		@ sp needed
 1608              	.LVL177:
 1609              	.LVL178:
 1610 001a 70BD     		pop	{r4, r5, r6, pc}
 1611              		.cfi_endproc
 1612              	.LFE28:
 1613              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1614              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 1615              		.align	2
 1616              		.code	16
 1617              		.thumb_func
 1618              		.type	CapSense_SsCSDDisableMode, %function
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 91


 1619              	CapSense_SsCSDDisableMode:
 1620              	.LFB8:
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 1621              		.loc 1 954 0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 1625 0000 10B5     		push	{r4, lr}
 1626              		.cfi_def_cfa_offset 8
 1627              		.cfi_offset 4, -8
 1628              		.cfi_offset 14, -4
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1629              		.loc 1 968 0
 1630 0002 0022     		movs	r2, #0
 1631 0004 F021     		movs	r1, #240
 1632 0006 0901     		lsls	r1, r1, #4
 1633 0008 0248     		ldr	r0, .L120
 1634 000a FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1635              	.LVL179:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1636              		.loc 1 971 0
 1637 000e FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1638              	.LVL180:
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1639              		.loc 1 983 0
 1640              		@ sp needed
 1641 0012 10BD     		pop	{r4, pc}
 1642              	.L121:
 1643              		.align	2
 1644              	.L120:
 1645 0014 10000140 		.word	1073807376
 1646              		.cfi_endproc
 1647              	.LFE8:
 1648              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 1649              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1650              		.align	2
 1651              		.global	CapSense_SsSwitchSensingMode
 1652              		.code	16
 1653              		.thumb_func
 1654              		.type	CapSense_SsSwitchSensingMode, %function
 1655              	CapSense_SsSwitchSensingMode:
 1656              	.LFB9:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1657              		.loc 1 1068 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              	.LVL181:
 1662 0000 10B5     		push	{r4, lr}
 1663              		.cfi_def_cfa_offset 8
 1664              		.cfi_offset 4, -8
 1665              		.cfi_offset 14, -4
 1666 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1667              		.loc 1 1069 0
 1668 0004 0C4B     		ldr	r3, .L126
 1669 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 92


 1670 0008 8342     		cmp	r3, r0
 1671 000a 14D0     		beq	.L122
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1672              		.loc 1 1072 0
 1673 000c 012B     		cmp	r3, #1
 1674 000e 01D1     		bne	.L124
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1675              		.loc 1 1075 0
 1676 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 1677              	.LVL182:
 1678              	.L124:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1679              		.loc 1 1105 0
 1680 0014 012C     		cmp	r4, #1
 1681 0016 05D1     		bne	.L125
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 1682              		.loc 1 1109 0
 1683 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1684              	.LVL183:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1685              		.loc 1 1110 0
 1686 001c 0122     		movs	r2, #1
 1687 001e 064B     		ldr	r3, .L126
 1688 0020 1A70     		strb	r2, [r3]
 1689 0022 08E0     		b	.L122
 1690              	.L125:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1691              		.loc 1 1113 0
 1692 0024 022C     		cmp	r4, #2
 1693 0026 06D0     		beq	.L122
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1694              		.loc 1 1121 0
 1695 0028 042C     		cmp	r4, #4
 1696 002a 04D0     		beq	.L122
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1697              		.loc 1 1129 0
 1698 002c 032C     		cmp	r4, #3
 1699 002e 02D0     		beq	.L122
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1700              		.loc 1 1138 0
 1701 0030 0022     		movs	r2, #0
 1702 0032 014B     		ldr	r3, .L126
 1703 0034 1A70     		strb	r2, [r3]
 1704              	.L122:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1705              		.loc 1 1141 0
 1706              		@ sp needed
 1707 0036 10BD     		pop	{r4, pc}
 1708              	.L127:
 1709              		.align	2
 1710              	.L126:
 1711 0038 00000000 		.word	.LANCHOR0
 1712              		.cfi_endproc
 1713              	.LFE9:
 1714              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1715              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1716              		.align	2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 93


 1717              		.global	CapSense_SsInitialize
 1718              		.code	16
 1719              		.thumb_func
 1720              		.type	CapSense_SsInitialize, %function
 1721              	CapSense_SsInitialize:
 1722              	.LFB6:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1723              		.loc 1 708 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727 0000 10B5     		push	{r4, lr}
 1728              		.cfi_def_cfa_offset 8
 1729              		.cfi_offset 4, -8
 1730              		.cfi_offset 14, -4
 1731              	.LVL184:
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1732              		.loc 1 742 0
 1733 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacs
 1734              	.LVL185:
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1735              		.loc 1 747 0
 1736 0006 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1737              	.LVL186:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 1738              		.loc 1 752 0
 1739 000a 0020     		movs	r0, #0
 1740 000c FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1741              	.LVL187:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1742              		.loc 1 753 0
 1743 0010 0021     		movs	r1, #0
 1744 0012 4323     		movs	r3, #67
 1745 0014 044A     		ldr	r2, .L129
 1746 0016 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1747              		.loc 1 755 0
 1748 0018 0020     		movs	r0, #0
 1749 001a FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1750              	.LVL188:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1751              		.loc 1 758 0
 1752 001e 0120     		movs	r0, #1
 1753 0020 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1754              	.LVL189:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1755              		.loc 1 769 0
 1756 0024 0020     		movs	r0, #0
 1757              		@ sp needed
 1758 0026 10BD     		pop	{r4, pc}
 1759              	.L130:
 1760              		.align	2
 1761              	.L129:
 1762 0028 00000000 		.word	CapSense_dsRam
 1763              		.cfi_endproc
 1764              	.LFE6:
 1765              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 94


 1766              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1767              		.align	2
 1768              		.global	CapSense_DischargeExtCapacitors
 1769              		.code	16
 1770              		.thumb_func
 1771              		.type	CapSense_DischargeExtCapacitors, %function
 1772              	CapSense_DischargeExtCapacitors:
 1773              	.LFB26:
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
 1774              		.loc 1 3022 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 8
 1777              		@ frame_needed = 0, uses_anonymous_args = 0
 1778              	.LVL190:
 1779 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1780              		.cfi_def_cfa_offset 20
 1781              		.cfi_offset 4, -20
 1782              		.cfi_offset 5, -16
 1783              		.cfi_offset 6, -12
 1784              		.cfi_offset 7, -8
 1785              		.cfi_offset 14, -4
 1786 0002 5F46     		mov	r7, fp
 1787 0004 4E46     		mov	r6, r9
 1788 0006 4546     		mov	r5, r8
 1789 0008 E0B4     		push	{r5, r6, r7}
 1790              		.cfi_def_cfa_offset 32
 1791              		.cfi_offset 8, -32
 1792              		.cfi_offset 9, -28
 1793              		.cfi_offset 11, -24
 1794 000a 82B0     		sub	sp, sp, #8
 1795              		.cfi_def_cfa_offset 40
 1796 000c 0190     		str	r0, [sp, #4]
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
 1797              		.loc 1 3025 0
 1798 000e 1E4C     		ldr	r4, .L132
 1799 0010 2668     		ldr	r6, [r4]
 1800 0012 F023     		movs	r3, #240
 1801 0014 1B01     		lsls	r3, r3, #4
 1802 0016 3340     		ands	r3, r6
 1803 0018 9846     		mov	r8, r3
 1804              	.LVL191:
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
 1805              		.loc 1 3026 0
 1806 001a 1C4E     		ldr	r6, .L132+4
 1807 001c 3368     		ldr	r3, [r6]
 1808              	.LVL192:
 1809 001e 0422     		movs	r2, #4
 1810 0020 1A40     		ands	r2, r3
 1811 0022 9146     		mov	r9, r2
 1812              	.LVL193:
3027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1813              		.loc 1 3027 0
 1814 0024 1A4D     		ldr	r5, .L132+8
 1815 0026 2B68     		ldr	r3, [r5]
 1816 0028 E027     		movs	r7, #224
 1817 002a 7F00     		lsls	r7, r7, #1
 1818 002c 3B40     		ands	r3, r7
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 95


 1819 002e 9B46     		mov	fp, r3
 1820              	.LVL194:
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
 1821              		.loc 1 3052 0
 1822 0030 0022     		movs	r2, #0
 1823              	.LVL195:
 1824 0032 F021     		movs	r1, #240
 1825 0034 0901     		lsls	r1, r1, #4
 1826 0036 2000     		movs	r0, r4
 1827              	.LVL196:
 1828 0038 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1829              	.LVL197:
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
 1830              		.loc 1 3054 0
 1831 003c 0022     		movs	r2, #0
 1832 003e 0421     		movs	r1, #4
 1833 0040 3000     		movs	r0, r6
 1834 0042 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1835              	.LVL198:
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
 1836              		.loc 1 3055 0
 1837 0046 C022     		movs	r2, #192
 1838 0048 5200     		lsls	r2, r2, #1
 1839 004a 3900     		movs	r1, r7
 1840 004c 2800     		movs	r0, r5
 1841 004e FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1842              	.LVL199:
3086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1843              		.loc 1 3086 0
 1844 0052 6B46     		mov	r3, sp
 1845 0054 9888     		ldrh	r0, [r3, #4]
 1846 0056 FFF7FEFF 		bl	CyDelayUs
 1847              	.LVL200:
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
 1848              		.loc 1 3090 0
 1849 005a 5A46     		mov	r2, fp
 1850 005c 3900     		movs	r1, r7
 1851 005e 2800     		movs	r0, r5
 1852 0060 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1853              	.LVL201:
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
 1854              		.loc 1 3092 0
 1855 0064 4A46     		mov	r2, r9
 1856 0066 0421     		movs	r1, #4
 1857 0068 3000     		movs	r0, r6
 1858 006a FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1859              	.LVL202:
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
 1860              		.loc 1 3094 0
 1861 006e 4246     		mov	r2, r8
 1862 0070 F021     		movs	r1, #240
 1863 0072 0901     		lsls	r1, r1, #4
 1864 0074 2000     		movs	r0, r4
 1865 0076 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1866              	.LVL203:
3126:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
 1867              		.loc 1 3126 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 96


 1868 007a 02B0     		add	sp, sp, #8
 1869              		@ sp needed
 1870              	.LVL204:
 1871              	.LVL205:
 1872              	.LVL206:
 1873 007c 1CBC     		pop	{r2, r3, r4}
 1874 007e 9046     		mov	r8, r2
 1875 0080 9946     		mov	r9, r3
 1876 0082 A346     		mov	fp, r4
 1877 0084 F0BD     		pop	{r4, r5, r6, r7, pc}
 1878              	.L133:
 1879 0086 C046     		.align	2
 1880              	.L132:
 1881 0088 10000140 		.word	1073807376
 1882 008c 00040440 		.word	1074004992
 1883 0090 08040440 		.word	1074005000
 1884              		.cfi_endproc
 1885              	.LFE26:
 1886              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1887              		.global	CapSense_idacGainTable
 1888              		.comm	CapSense_curSnsIOPtr,4,4
 1889              		.comm	CapSense_curRamSnsPtr,4,4
 1890              		.global	CapSense_requestScanAllWidget
 1891              		.global	CapSense_sensorIndex
 1892              		.global	CapSense_widgetIndex
 1893              		.global	CapSense_scanFreqIndex
 1894              		.global	CapSense_currentSenseMethod
 1895              		.section	.rodata
 1896              		.align	2
 1897              		.set	.LANCHOR1,. + 0
 1898              		.type	CapSense_idacGainTable, %object
 1899              		.size	CapSense_idacGainTable, 16
 1900              	CapSense_idacGainTable:
 1901 0000 00000000 		.word	0
 1902 0004 804F1200 		.word	1200000
 1903 0008 00040000 		.word	1024
 1904 000c 009F2400 		.word	2400000
 1905              		.type	CapSense_scanFreqIndex, %object
 1906              		.size	CapSense_scanFreqIndex, 1
 1907              	CapSense_scanFreqIndex:
 1908 0010 00       		.space	1
 1909              		.bss
 1910              		.set	.LANCHOR0,. + 0
 1911              		.type	CapSense_currentSenseMethod, %object
 1912              		.size	CapSense_currentSenseMethod, 1
 1913              	CapSense_currentSenseMethod:
 1914 0000 00       		.space	1
 1915              		.type	CapSense_requestScanAllWidget, %object
 1916              		.size	CapSense_requestScanAllWidget, 1
 1917              	CapSense_requestScanAllWidget:
 1918 0001 00       		.space	1
 1919              		.type	CapSense_sensorIndex, %object
 1920              		.size	CapSense_sensorIndex, 1
 1921              	CapSense_sensorIndex:
 1922 0002 00       		.space	1
 1923              		.type	CapSense_widgetIndex, %object
 1924              		.size	CapSense_widgetIndex, 1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 97


 1925              	CapSense_widgetIndex:
 1926 0003 00       		.space	1
 1927              		.text
 1928              	.Letext0:
 1929              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1930              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1931              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1932              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1933              		.file 6 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1934              		.file 7 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1935              		.file 8 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1936              		.file 9 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1937              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 1938              		.file 11 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1939              		.section	.debug_info,"",%progbits
 1940              	.Ldebug_info0:
 1941 0000 34140000 		.4byte	0x1434
 1942 0004 0400     		.2byte	0x4
 1943 0006 00000000 		.4byte	.Ldebug_abbrev0
 1944 000a 04       		.byte	0x4
 1945 000b 01       		.uleb128 0x1
 1946 000c 72030000 		.4byte	.LASF227
 1947 0010 0C       		.byte	0xc
 1948 0011 5C0A0000 		.4byte	.LASF228
 1949 0015 DA000000 		.4byte	.LASF229
 1950 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1951 001d 00000000 		.4byte	0
 1952 0021 00000000 		.4byte	.Ldebug_line0
 1953 0025 02       		.uleb128 0x2
 1954 0026 01       		.byte	0x1
 1955 0027 06       		.byte	0x6
 1956 0028 F80C0000 		.4byte	.LASF0
 1957 002c 02       		.uleb128 0x2
 1958 002d 01       		.byte	0x1
 1959 002e 08       		.byte	0x8
 1960 002f A60B0000 		.4byte	.LASF1
 1961 0033 02       		.uleb128 0x2
 1962 0034 02       		.byte	0x2
 1963 0035 05       		.byte	0x5
 1964 0036 2A090000 		.4byte	.LASF2
 1965 003a 02       		.uleb128 0x2
 1966 003b 02       		.byte	0x2
 1967 003c 07       		.byte	0x7
 1968 003d 200D0000 		.4byte	.LASF3
 1969 0041 02       		.uleb128 0x2
 1970 0042 04       		.byte	0x4
 1971 0043 05       		.byte	0x5
 1972 0044 62090000 		.4byte	.LASF4
 1973 0048 03       		.uleb128 0x3
 1974 0049 CA0B0000 		.4byte	.LASF9
 1975 004d 02       		.byte	0x2
 1976 004e 41       		.byte	0x41
 1977 004f 53000000 		.4byte	0x53
 1978 0053 02       		.uleb128 0x2
 1979 0054 04       		.byte	0x4
 1980 0055 07       		.byte	0x7
 1981 0056 EE0A0000 		.4byte	.LASF5
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 98


 1982 005a 02       		.uleb128 0x2
 1983 005b 08       		.byte	0x8
 1984 005c 05       		.byte	0x5
 1985 005d 77060000 		.4byte	.LASF6
 1986 0061 02       		.uleb128 0x2
 1987 0062 08       		.byte	0x8
 1988 0063 07       		.byte	0x7
 1989 0064 CC020000 		.4byte	.LASF7
 1990 0068 04       		.uleb128 0x4
 1991 0069 04       		.byte	0x4
 1992 006a 05       		.byte	0x5
 1993 006b 696E7400 		.ascii	"int\000"
 1994 006f 02       		.uleb128 0x2
 1995 0070 04       		.byte	0x4
 1996 0071 07       		.byte	0x7
 1997 0072 AD000000 		.4byte	.LASF8
 1998 0076 03       		.uleb128 0x3
 1999 0077 3C020000 		.4byte	.LASF10
 2000 007b 03       		.byte	0x3
 2001 007c 30       		.byte	0x30
 2002 007d 48000000 		.4byte	0x48
 2003 0081 05       		.uleb128 0x5
 2004 0082 A20D0000 		.4byte	.LASF11
 2005 0086 04       		.byte	0x4
 2006 0087 FB01     		.2byte	0x1fb
 2007 0089 2C000000 		.4byte	0x2c
 2008 008d 05       		.uleb128 0x5
 2009 008e 81050000 		.4byte	.LASF12
 2010 0092 04       		.byte	0x4
 2011 0093 FC01     		.2byte	0x1fc
 2012 0095 3A000000 		.4byte	0x3a
 2013 0099 05       		.uleb128 0x5
 2014 009a BC070000 		.4byte	.LASF13
 2015 009e 04       		.byte	0x4
 2016 009f FD01     		.2byte	0x1fd
 2017 00a1 53000000 		.4byte	0x53
 2018 00a5 02       		.uleb128 0x2
 2019 00a6 04       		.byte	0x4
 2020 00a7 04       		.byte	0x4
 2021 00a8 7D020000 		.4byte	.LASF14
 2022 00ac 02       		.uleb128 0x2
 2023 00ad 08       		.byte	0x8
 2024 00ae 04       		.byte	0x4
 2025 00af A80D0000 		.4byte	.LASF15
 2026 00b3 02       		.uleb128 0x2
 2027 00b4 01       		.byte	0x1
 2028 00b5 08       		.byte	0x8
 2029 00b6 07050000 		.4byte	.LASF16
 2030 00ba 05       		.uleb128 0x5
 2031 00bb 9D0B0000 		.4byte	.LASF17
 2032 00bf 04       		.byte	0x4
 2033 00c0 9D02     		.2byte	0x29d
 2034 00c2 53000000 		.4byte	0x53
 2035 00c6 05       		.uleb128 0x5
 2036 00c7 60010000 		.4byte	.LASF18
 2037 00cb 04       		.byte	0x4
 2038 00cc A502     		.2byte	0x2a5
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 99


 2039 00ce D2000000 		.4byte	0xd2
 2040 00d2 06       		.uleb128 0x6
 2041 00d3 81000000 		.4byte	0x81
 2042 00d7 05       		.uleb128 0x5
 2043 00d8 91080000 		.4byte	.LASF19
 2044 00dc 04       		.byte	0x4
 2045 00dd A702     		.2byte	0x2a7
 2046 00df E3000000 		.4byte	0xe3
 2047 00e3 06       		.uleb128 0x6
 2048 00e4 99000000 		.4byte	0x99
 2049 00e8 05       		.uleb128 0x5
 2050 00e9 79070000 		.4byte	.LASF20
 2051 00ed 04       		.byte	0x4
 2052 00ee B702     		.2byte	0x2b7
 2053 00f0 F4000000 		.4byte	0xf4
 2054 00f4 07       		.uleb128 0x7
 2055 00f5 04       		.byte	0x4
 2056 00f6 FA000000 		.4byte	0xfa
 2057 00fa 08       		.uleb128 0x8
 2058 00fb 05       		.uleb128 0x5
 2059 00fc 220C0000 		.4byte	.LASF21
 2060 0100 05       		.byte	0x5
 2061 0101 1E01     		.2byte	0x11e
 2062 0103 8D000000 		.4byte	0x8d
 2063 0107 05       		.uleb128 0x5
 2064 0108 F1050000 		.4byte	.LASF22
 2065 010c 05       		.byte	0x5
 2066 010d 2201     		.2byte	0x122
 2067 010f 81000000 		.4byte	0x81
 2068 0113 09       		.uleb128 0x9
 2069 0114 1C       		.byte	0x1c
 2070 0115 06       		.byte	0x6
 2071 0116 31       		.byte	0x31
 2072 0117 A0010000 		.4byte	0x1a0
 2073 011b 0A       		.uleb128 0xa
 2074 011c F70B0000 		.4byte	.LASF23
 2075 0120 06       		.byte	0x6
 2076 0121 36       		.byte	0x36
 2077 0122 99000000 		.4byte	0x99
 2078 0126 00       		.byte	0
 2079 0127 0A       		.uleb128 0xa
 2080 0128 85010000 		.4byte	.LASF24
 2081 012c 06       		.byte	0x6
 2082 012d 3B       		.byte	0x3b
 2083 012e 99000000 		.4byte	0x99
 2084 0132 04       		.byte	0x4
 2085 0133 0A       		.uleb128 0xa
 2086 0134 3A080000 		.4byte	.LASF25
 2087 0138 06       		.byte	0x6
 2088 0139 40       		.byte	0x40
 2089 013a A0010000 		.4byte	0x1a0
 2090 013e 08       		.byte	0x8
 2091 013f 0A       		.uleb128 0xa
 2092 0140 73040000 		.4byte	.LASF26
 2093 0144 06       		.byte	0x6
 2094 0145 45       		.byte	0x45
 2095 0146 A0010000 		.4byte	0x1a0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 100


 2096 014a 0C       		.byte	0xc
 2097 014b 0A       		.uleb128 0xa
 2098 014c 81080000 		.4byte	.LASF27
 2099 0150 06       		.byte	0x6
 2100 0151 4A       		.byte	0x4a
 2101 0152 8D000000 		.4byte	0x8d
 2102 0156 10       		.byte	0x10
 2103 0157 0A       		.uleb128 0xa
 2104 0158 070B0000 		.4byte	.LASF28
 2105 015c 06       		.byte	0x6
 2106 015d 4F       		.byte	0x4f
 2107 015e 8D000000 		.4byte	0x8d
 2108 0162 12       		.byte	0x12
 2109 0163 0A       		.uleb128 0xa
 2110 0164 190A0000 		.4byte	.LASF29
 2111 0168 06       		.byte	0x6
 2112 0169 54       		.byte	0x54
 2113 016a 8D000000 		.4byte	0x8d
 2114 016e 14       		.byte	0x14
 2115 016f 0A       		.uleb128 0xa
 2116 0170 A9010000 		.4byte	.LASF30
 2117 0174 06       		.byte	0x6
 2118 0175 59       		.byte	0x59
 2119 0176 8D000000 		.4byte	0x8d
 2120 017a 16       		.byte	0x16
 2121 017b 0A       		.uleb128 0xa
 2122 017c 4B040000 		.4byte	.LASF31
 2123 0180 06       		.byte	0x6
 2124 0181 5E       		.byte	0x5e
 2125 0182 8D000000 		.4byte	0x8d
 2126 0186 18       		.byte	0x18
 2127 0187 0A       		.uleb128 0xa
 2128 0188 22050000 		.4byte	.LASF32
 2129 018c 06       		.byte	0x6
 2130 018d 63       		.byte	0x63
 2131 018e 81000000 		.4byte	0x81
 2132 0192 1A       		.byte	0x1a
 2133 0193 0A       		.uleb128 0xa
 2134 0194 AA080000 		.4byte	.LASF33
 2135 0198 06       		.byte	0x6
 2136 0199 68       		.byte	0x68
 2137 019a 81000000 		.4byte	0x81
 2138 019e 1B       		.byte	0x1b
 2139 019f 00       		.byte	0
 2140 01a0 07       		.uleb128 0x7
 2141 01a1 04       		.byte	0x4
 2142 01a2 8D000000 		.4byte	0x8d
 2143 01a6 03       		.uleb128 0x3
 2144 01a7 330D0000 		.4byte	.LASF34
 2145 01ab 06       		.byte	0x6
 2146 01ac 6A       		.byte	0x6a
 2147 01ad 13010000 		.4byte	0x113
 2148 01b1 09       		.uleb128 0x9
 2149 01b2 0C       		.byte	0xc
 2150 01b3 06       		.byte	0x6
 2151 01b4 75       		.byte	0x75
 2152 01b5 0E020000 		.4byte	0x20e
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 101


 2153 01b9 0A       		.uleb128 0xa
 2154 01ba BD0D0000 		.4byte	.LASF35
 2155 01be 06       		.byte	0x6
 2156 01bf 7A       		.byte	0x7a
 2157 01c0 8D000000 		.4byte	0x8d
 2158 01c4 00       		.byte	0
 2159 01c5 0A       		.uleb128 0xa
 2160 01c6 C40D0000 		.4byte	.LASF36
 2161 01ca 06       		.byte	0x6
 2162 01cb 7E       		.byte	0x7e
 2163 01cc 8D000000 		.4byte	0x8d
 2164 01d0 02       		.byte	0x2
 2165 01d1 0A       		.uleb128 0xa
 2166 01d2 CB0D0000 		.4byte	.LASF37
 2167 01d6 06       		.byte	0x6
 2168 01d7 82       		.byte	0x82
 2169 01d8 8D000000 		.4byte	0x8d
 2170 01dc 04       		.byte	0x4
 2171 01dd 0A       		.uleb128 0xa
 2172 01de D20D0000 		.4byte	.LASF38
 2173 01e2 06       		.byte	0x6
 2174 01e3 86       		.byte	0x86
 2175 01e4 8D000000 		.4byte	0x8d
 2176 01e8 06       		.byte	0x6
 2177 01e9 0A       		.uleb128 0xa
 2178 01ea D90D0000 		.4byte	.LASF39
 2179 01ee 06       		.byte	0x6
 2180 01ef 8A       		.byte	0x8a
 2181 01f0 8D000000 		.4byte	0x8d
 2182 01f4 08       		.byte	0x8
 2183 01f5 0A       		.uleb128 0xa
 2184 01f6 E00D0000 		.4byte	.LASF40
 2185 01fa 06       		.byte	0x6
 2186 01fb 8E       		.byte	0x8e
 2187 01fc 81000000 		.4byte	0x81
 2188 0200 0A       		.byte	0xa
 2189 0201 0A       		.uleb128 0xa
 2190 0202 E70D0000 		.4byte	.LASF41
 2191 0206 06       		.byte	0x6
 2192 0207 92       		.byte	0x92
 2193 0208 81000000 		.4byte	0x81
 2194 020c 0B       		.byte	0xb
 2195 020d 00       		.byte	0
 2196 020e 03       		.uleb128 0x3
 2197 020f CB040000 		.4byte	.LASF42
 2198 0213 06       		.byte	0x6
 2199 0214 93       		.byte	0x93
 2200 0215 B1010000 		.4byte	0x1b1
 2201 0219 0B       		.uleb128 0xb
 2202 021a 01       		.byte	0x1
 2203 021b 2C000000 		.4byte	0x2c
 2204 021f 07       		.byte	0x7
 2205 0220 70       		.byte	0x70
 2206 0221 44020000 		.4byte	0x244
 2207 0225 0C       		.uleb128 0xc
 2208 0226 98000000 		.4byte	.LASF43
 2209 022a 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 102


 2210 022b 0C       		.uleb128 0xc
 2211 022c 9D0A0000 		.4byte	.LASF44
 2212 0230 01       		.byte	0x1
 2213 0231 0C       		.uleb128 0xc
 2214 0232 84090000 		.4byte	.LASF45
 2215 0236 02       		.byte	0x2
 2216 0237 0C       		.uleb128 0xc
 2217 0238 580C0000 		.4byte	.LASF46
 2218 023c 03       		.byte	0x3
 2219 023d 0C       		.uleb128 0xc
 2220 023e 59080000 		.4byte	.LASF47
 2221 0242 04       		.byte	0x4
 2222 0243 00       		.byte	0
 2223 0244 03       		.uleb128 0x3
 2224 0245 2A060000 		.4byte	.LASF48
 2225 0249 07       		.byte	0x7
 2226 024a 76       		.byte	0x76
 2227 024b 19020000 		.4byte	0x219
 2228 024f 09       		.uleb128 0x9
 2229 0250 14       		.byte	0x14
 2230 0251 07       		.byte	0x7
 2231 0252 AD       		.byte	0xad
 2232 0253 F4020000 		.4byte	0x2f4
 2233 0257 0A       		.uleb128 0xa
 2234 0258 B2050000 		.4byte	.LASF49
 2235 025c 07       		.byte	0x7
 2236 025d B2       		.byte	0xb2
 2237 025e 8D000000 		.4byte	0x8d
 2238 0262 00       		.byte	0
 2239 0263 0A       		.uleb128 0xa
 2240 0264 4E0B0000 		.4byte	.LASF50
 2241 0268 07       		.byte	0x7
 2242 0269 B7       		.byte	0xb7
 2243 026a FB000000 		.4byte	0xfb
 2244 026e 02       		.byte	0x2
 2245 026f 0A       		.uleb128 0xa
 2246 0270 FF040000 		.4byte	.LASF51
 2247 0274 07       		.byte	0x7
 2248 0275 BC       		.byte	0xbc
 2249 0276 81000000 		.4byte	0x81
 2250 027a 04       		.byte	0x4
 2251 027b 0A       		.uleb128 0xa
 2252 027c 65070000 		.4byte	.LASF52
 2253 0280 07       		.byte	0x7
 2254 0281 C1       		.byte	0xc1
 2255 0282 81000000 		.4byte	0x81
 2256 0286 05       		.byte	0x5
 2257 0287 0A       		.uleb128 0xa
 2258 0288 7A040000 		.4byte	.LASF53
 2259 028c 07       		.byte	0x7
 2260 028d C7       		.byte	0xc7
 2261 028e 81000000 		.4byte	0x81
 2262 0292 06       		.byte	0x6
 2263 0293 0A       		.uleb128 0xa
 2264 0294 A6060000 		.4byte	.LASF54
 2265 0298 07       		.byte	0x7
 2266 0299 CD       		.byte	0xcd
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 103


 2267 029a 81000000 		.4byte	0x81
 2268 029e 07       		.byte	0x7
 2269 029f 0A       		.uleb128 0xa
 2270 02a0 B4040000 		.4byte	.LASF55
 2271 02a4 07       		.byte	0x7
 2272 02a5 D4       		.byte	0xd4
 2273 02a6 07010000 		.4byte	0x107
 2274 02aa 08       		.byte	0x8
 2275 02ab 0A       		.uleb128 0xa
 2276 02ac 0C0B0000 		.4byte	.LASF56
 2277 02b0 07       		.byte	0x7
 2278 02b1 DB       		.byte	0xdb
 2279 02b2 F4020000 		.4byte	0x2f4
 2280 02b6 09       		.byte	0x9
 2281 02b7 0A       		.uleb128 0xa
 2282 02b8 65020000 		.4byte	.LASF57
 2283 02bc 07       		.byte	0x7
 2284 02bd E0       		.byte	0xe0
 2285 02be 81000000 		.4byte	0x81
 2286 02c2 0A       		.byte	0xa
 2287 02c3 0A       		.uleb128 0xa
 2288 02c4 A70C0000 		.4byte	.LASF58
 2289 02c8 07       		.byte	0x7
 2290 02c9 E8       		.byte	0xe8
 2291 02ca 8D000000 		.4byte	0x8d
 2292 02ce 0C       		.byte	0xc
 2293 02cf 0A       		.uleb128 0xa
 2294 02d0 E7080000 		.4byte	.LASF59
 2295 02d4 07       		.byte	0x7
 2296 02d5 ED       		.byte	0xed
 2297 02d6 81000000 		.4byte	0x81
 2298 02da 0E       		.byte	0xe
 2299 02db 0A       		.uleb128 0xa
 2300 02dc 190A0000 		.4byte	.LASF29
 2301 02e0 07       		.byte	0x7
 2302 02e1 F3       		.byte	0xf3
 2303 02e2 8D000000 		.4byte	0x8d
 2304 02e6 10       		.byte	0x10
 2305 02e7 0A       		.uleb128 0xa
 2306 02e8 73040000 		.4byte	.LASF26
 2307 02ec 07       		.byte	0x7
 2308 02ed F8       		.byte	0xf8
 2309 02ee 8D000000 		.4byte	0x8d
 2310 02f2 12       		.byte	0x12
 2311 02f3 00       		.byte	0
 2312 02f4 0D       		.uleb128 0xd
 2313 02f5 81000000 		.4byte	0x81
 2314 02f9 04030000 		.4byte	0x304
 2315 02fd 0E       		.uleb128 0xe
 2316 02fe 04030000 		.4byte	0x304
 2317 0302 00       		.byte	0
 2318 0303 00       		.byte	0
 2319 0304 02       		.uleb128 0x2
 2320 0305 04       		.byte	0x4
 2321 0306 07       		.byte	0x7
 2322 0307 DD0A0000 		.4byte	.LASF60
 2323 030b 03       		.uleb128 0x3
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 104


 2324 030c 97070000 		.4byte	.LASF61
 2325 0310 07       		.byte	0x7
 2326 0311 F9       		.byte	0xf9
 2327 0312 4F020000 		.4byte	0x24f
 2328 0316 09       		.uleb128 0x9
 2329 0317 14       		.byte	0x14
 2330 0318 07       		.byte	0x7
 2331 0319 FE       		.byte	0xfe
 2332 031a C8030000 		.4byte	0x3c8
 2333 031e 0F       		.uleb128 0xf
 2334 031f B2050000 		.4byte	.LASF49
 2335 0323 07       		.byte	0x7
 2336 0324 0301     		.2byte	0x103
 2337 0326 8D000000 		.4byte	0x8d
 2338 032a 00       		.byte	0
 2339 032b 0F       		.uleb128 0xf
 2340 032c 4E0B0000 		.4byte	.LASF50
 2341 0330 07       		.byte	0x7
 2342 0331 0801     		.2byte	0x108
 2343 0333 FB000000 		.4byte	0xfb
 2344 0337 02       		.byte	0x2
 2345 0338 0F       		.uleb128 0xf
 2346 0339 FF040000 		.4byte	.LASF51
 2347 033d 07       		.byte	0x7
 2348 033e 0D01     		.2byte	0x10d
 2349 0340 81000000 		.4byte	0x81
 2350 0344 04       		.byte	0x4
 2351 0345 0F       		.uleb128 0xf
 2352 0346 65070000 		.4byte	.LASF52
 2353 034a 07       		.byte	0x7
 2354 034b 1201     		.2byte	0x112
 2355 034d 81000000 		.4byte	0x81
 2356 0351 05       		.byte	0x5
 2357 0352 0F       		.uleb128 0xf
 2358 0353 7A040000 		.4byte	.LASF53
 2359 0357 07       		.byte	0x7
 2360 0358 1801     		.2byte	0x118
 2361 035a 81000000 		.4byte	0x81
 2362 035e 06       		.byte	0x6
 2363 035f 0F       		.uleb128 0xf
 2364 0360 A6060000 		.4byte	.LASF54
 2365 0364 07       		.byte	0x7
 2366 0365 1E01     		.2byte	0x11e
 2367 0367 81000000 		.4byte	0x81
 2368 036b 07       		.byte	0x7
 2369 036c 0F       		.uleb128 0xf
 2370 036d B4040000 		.4byte	.LASF55
 2371 0371 07       		.byte	0x7
 2372 0372 2501     		.2byte	0x125
 2373 0374 07010000 		.4byte	0x107
 2374 0378 08       		.byte	0x8
 2375 0379 0F       		.uleb128 0xf
 2376 037a 0C0B0000 		.4byte	.LASF56
 2377 037e 07       		.byte	0x7
 2378 037f 2C01     		.2byte	0x12c
 2379 0381 F4020000 		.4byte	0x2f4
 2380 0385 09       		.byte	0x9
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 105


 2381 0386 0F       		.uleb128 0xf
 2382 0387 65020000 		.4byte	.LASF57
 2383 038b 07       		.byte	0x7
 2384 038c 3101     		.2byte	0x131
 2385 038e 81000000 		.4byte	0x81
 2386 0392 0A       		.byte	0xa
 2387 0393 0F       		.uleb128 0xf
 2388 0394 A70C0000 		.4byte	.LASF58
 2389 0398 07       		.byte	0x7
 2390 0399 3901     		.2byte	0x139
 2391 039b 8D000000 		.4byte	0x8d
 2392 039f 0C       		.byte	0xc
 2393 03a0 0F       		.uleb128 0xf
 2394 03a1 E7080000 		.4byte	.LASF59
 2395 03a5 07       		.byte	0x7
 2396 03a6 3E01     		.2byte	0x13e
 2397 03a8 81000000 		.4byte	0x81
 2398 03ac 0E       		.byte	0xe
 2399 03ad 0F       		.uleb128 0xf
 2400 03ae 190A0000 		.4byte	.LASF29
 2401 03b2 07       		.byte	0x7
 2402 03b3 4401     		.2byte	0x144
 2403 03b5 8D000000 		.4byte	0x8d
 2404 03b9 10       		.byte	0x10
 2405 03ba 0F       		.uleb128 0xf
 2406 03bb 73040000 		.4byte	.LASF26
 2407 03bf 07       		.byte	0x7
 2408 03c0 4901     		.2byte	0x149
 2409 03c2 8D000000 		.4byte	0x8d
 2410 03c6 12       		.byte	0x12
 2411 03c7 00       		.byte	0
 2412 03c8 05       		.uleb128 0x5
 2413 03c9 7F0B0000 		.4byte	.LASF62
 2414 03cd 07       		.byte	0x7
 2415 03ce 4A01     		.2byte	0x14a
 2416 03d0 16030000 		.4byte	0x316
 2417 03d4 10       		.uleb128 0x10
 2418 03d5 14       		.byte	0x14
 2419 03d6 07       		.byte	0x7
 2420 03d7 5001     		.2byte	0x150
 2421 03d9 EB030000 		.4byte	0x3eb
 2422 03dd 0F       		.uleb128 0xf
 2423 03de CC090000 		.4byte	.LASF63
 2424 03e2 07       		.byte	0x7
 2425 03e3 5501     		.2byte	0x155
 2426 03e5 C8030000 		.4byte	0x3c8
 2427 03e9 00       		.byte	0
 2428 03ea 00       		.byte	0
 2429 03eb 05       		.uleb128 0x5
 2430 03ec 0F020000 		.4byte	.LASF64
 2431 03f0 07       		.byte	0x7
 2432 03f1 5601     		.2byte	0x156
 2433 03f3 D4030000 		.4byte	0x3d4
 2434 03f7 10       		.uleb128 0x10
 2435 03f8 0A       		.byte	0xa
 2436 03f9 07       		.byte	0x7
 2437 03fa 5C01     		.2byte	0x15c
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 106


 2438 03fc 4F040000 		.4byte	0x44f
 2439 0400 11       		.uleb128 0x11
 2440 0401 72617700 		.ascii	"raw\000"
 2441 0405 07       		.byte	0x7
 2442 0406 6101     		.2byte	0x161
 2443 0408 4F040000 		.4byte	0x44f
 2444 040c 00       		.byte	0
 2445 040d 0F       		.uleb128 0xf
 2446 040e 1B0D0000 		.4byte	.LASF65
 2447 0412 07       		.byte	0x7
 2448 0413 6601     		.2byte	0x166
 2449 0415 4F040000 		.4byte	0x44f
 2450 0419 02       		.byte	0x2
 2451 041a 0F       		.uleb128 0xf
 2452 041b 570B0000 		.4byte	.LASF66
 2453 041f 07       		.byte	0x7
 2454 0420 6C01     		.2byte	0x16c
 2455 0422 F4020000 		.4byte	0x2f4
 2456 0426 04       		.byte	0x4
 2457 0427 0F       		.uleb128 0xf
 2458 0428 76090000 		.4byte	.LASF67
 2459 042c 07       		.byte	0x7
 2460 042d 7101     		.2byte	0x171
 2461 042f FB000000 		.4byte	0xfb
 2462 0433 06       		.byte	0x6
 2463 0434 0F       		.uleb128 0xf
 2464 0435 AF0D0000 		.4byte	.LASF68
 2465 0439 07       		.byte	0x7
 2466 043a 7601     		.2byte	0x176
 2467 043c 5F040000 		.4byte	0x45f
 2468 0440 08       		.byte	0x8
 2469 0441 0F       		.uleb128 0xf
 2470 0442 68060000 		.4byte	.LASF69
 2471 0446 07       		.byte	0x7
 2472 0447 7B01     		.2byte	0x17b
 2473 0449 F4020000 		.4byte	0x2f4
 2474 044d 09       		.byte	0x9
 2475 044e 00       		.byte	0
 2476 044f 0D       		.uleb128 0xd
 2477 0450 8D000000 		.4byte	0x8d
 2478 0454 5F040000 		.4byte	0x45f
 2479 0458 0E       		.uleb128 0xe
 2480 0459 04030000 		.4byte	0x304
 2481 045d 00       		.byte	0
 2482 045e 00       		.byte	0
 2483 045f 0D       		.uleb128 0xd
 2484 0460 07010000 		.4byte	0x107
 2485 0464 6F040000 		.4byte	0x46f
 2486 0468 0E       		.uleb128 0xe
 2487 0469 04030000 		.4byte	0x304
 2488 046d 00       		.byte	0
 2489 046e 00       		.byte	0
 2490 046f 05       		.uleb128 0x5
 2491 0470 19040000 		.4byte	.LASF70
 2492 0474 07       		.byte	0x7
 2493 0475 7C01     		.2byte	0x17c
 2494 0477 F7030000 		.4byte	0x3f7
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 107


 2495 047b 10       		.uleb128 0x10
 2496 047c 0A       		.byte	0xa
 2497 047d 07       		.byte	0x7
 2498 047e 8201     		.2byte	0x182
 2499 0480 92040000 		.4byte	0x492
 2500 0484 0F       		.uleb128 0xf
 2501 0485 CC090000 		.4byte	.LASF63
 2502 0489 07       		.byte	0x7
 2503 048a 8701     		.2byte	0x187
 2504 048c 92040000 		.4byte	0x492
 2505 0490 00       		.byte	0
 2506 0491 00       		.byte	0
 2507 0492 0D       		.uleb128 0xd
 2508 0493 6F040000 		.4byte	0x46f
 2509 0497 A2040000 		.4byte	0x4a2
 2510 049b 0E       		.uleb128 0xe
 2511 049c 04030000 		.4byte	0x304
 2512 04a0 00       		.byte	0
 2513 04a1 00       		.byte	0
 2514 04a2 05       		.uleb128 0x5
 2515 04a3 9E0E0000 		.4byte	.LASF71
 2516 04a7 07       		.byte	0x7
 2517 04a8 8801     		.2byte	0x188
 2518 04aa 7B040000 		.4byte	0x47b
 2519 04ae 10       		.uleb128 0x10
 2520 04af 44       		.byte	0x44
 2521 04b0 07       		.byte	0x7
 2522 04b1 8E01     		.2byte	0x18e
 2523 04b3 AF050000 		.4byte	0x5af
 2524 04b7 0F       		.uleb128 0xf
 2525 04b8 B3080000 		.4byte	.LASF72
 2526 04bc 07       		.byte	0x7
 2527 04bd 9501     		.2byte	0x195
 2528 04bf 8D000000 		.4byte	0x8d
 2529 04c3 00       		.byte	0
 2530 04c4 0F       		.uleb128 0xf
 2531 04c5 0A0E0000 		.4byte	.LASF73
 2532 04c9 07       		.byte	0x7
 2533 04ca 9A01     		.2byte	0x19a
 2534 04cc 8D000000 		.4byte	0x8d
 2535 04d0 02       		.byte	0x2
 2536 04d1 0F       		.uleb128 0xf
 2537 04d2 D2000000 		.4byte	.LASF74
 2538 04d6 07       		.byte	0x7
 2539 04d7 9F01     		.2byte	0x19f
 2540 04d9 8D000000 		.4byte	0x8d
 2541 04dd 04       		.byte	0x4
 2542 04de 0F       		.uleb128 0xf
 2543 04df 7B090000 		.4byte	.LASF75
 2544 04e3 07       		.byte	0x7
 2545 04e4 A501     		.2byte	0x1a5
 2546 04e6 8D000000 		.4byte	0x8d
 2547 04ea 06       		.byte	0x6
 2548 04eb 0F       		.uleb128 0xf
 2549 04ec BA000000 		.4byte	.LASF76
 2550 04f0 07       		.byte	0x7
 2551 04f1 AA01     		.2byte	0x1aa
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 108


 2552 04f3 8D000000 		.4byte	0x8d
 2553 04f7 08       		.byte	0x8
 2554 04f8 0F       		.uleb128 0xf
 2555 04f9 BD050000 		.4byte	.LASF77
 2556 04fd 07       		.byte	0x7
 2557 04fe AF01     		.2byte	0x1af
 2558 0500 E3000000 		.4byte	0xe3
 2559 0504 0C       		.byte	0xc
 2560 0505 0F       		.uleb128 0xf
 2561 0506 6B090000 		.4byte	.LASF78
 2562 050a 07       		.byte	0x7
 2563 050b B501     		.2byte	0x1b5
 2564 050d AF050000 		.4byte	0x5af
 2565 0511 10       		.byte	0x10
 2566 0512 0F       		.uleb128 0xf
 2567 0513 370A0000 		.4byte	.LASF79
 2568 0517 07       		.byte	0x7
 2569 0518 BC01     		.2byte	0x1bc
 2570 051a AF050000 		.4byte	0x5af
 2571 051e 14       		.byte	0x14
 2572 051f 0F       		.uleb128 0xf
 2573 0520 DD080000 		.4byte	.LASF80
 2574 0524 07       		.byte	0x7
 2575 0525 CC01     		.2byte	0x1cc
 2576 0527 F4020000 		.4byte	0x2f4
 2577 052b 18       		.byte	0x18
 2578 052c 0F       		.uleb128 0xf
 2579 052d 6E070000 		.4byte	.LASF81
 2580 0531 07       		.byte	0x7
 2581 0532 D201     		.2byte	0x1d2
 2582 0534 8D000000 		.4byte	0x8d
 2583 0538 1A       		.byte	0x1a
 2584 0539 0F       		.uleb128 0xf
 2585 053a 0F040000 		.4byte	.LASF82
 2586 053e 07       		.byte	0x7
 2587 053f D701     		.2byte	0x1d7
 2588 0541 81000000 		.4byte	0x81
 2589 0545 1C       		.byte	0x1c
 2590 0546 0F       		.uleb128 0xf
 2591 0547 C9060000 		.4byte	.LASF83
 2592 054b 07       		.byte	0x7
 2593 054c DC01     		.2byte	0x1dc
 2594 054e EB030000 		.4byte	0x3eb
 2595 0552 1E       		.byte	0x1e
 2596 0553 0F       		.uleb128 0xf
 2597 0554 C4020000 		.4byte	.LASF84
 2598 0558 07       		.byte	0x7
 2599 0559 E101     		.2byte	0x1e1
 2600 055b A2040000 		.4byte	0x4a2
 2601 055f 32       		.byte	0x32
 2602 0560 0F       		.uleb128 0xf
 2603 0561 88000000 		.4byte	.LASF85
 2604 0565 07       		.byte	0x7
 2605 0566 E601     		.2byte	0x1e6
 2606 0568 81000000 		.4byte	0x81
 2607 056c 3C       		.byte	0x3c
 2608 056d 0F       		.uleb128 0xf
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 109


 2609 056e 11030000 		.4byte	.LASF86
 2610 0572 07       		.byte	0x7
 2611 0573 EB01     		.2byte	0x1eb
 2612 0575 81000000 		.4byte	0x81
 2613 0579 3D       		.byte	0x3d
 2614 057a 0F       		.uleb128 0xf
 2615 057b 97080000 		.4byte	.LASF87
 2616 057f 07       		.byte	0x7
 2617 0580 F001     		.2byte	0x1f0
 2618 0582 8D000000 		.4byte	0x8d
 2619 0586 3E       		.byte	0x3e
 2620 0587 0F       		.uleb128 0xf
 2621 0588 41070000 		.4byte	.LASF88
 2622 058c 07       		.byte	0x7
 2623 058d F501     		.2byte	0x1f5
 2624 058f 4F040000 		.4byte	0x44f
 2625 0593 40       		.byte	0x40
 2626 0594 0F       		.uleb128 0xf
 2627 0595 17010000 		.4byte	.LASF89
 2628 0599 07       		.byte	0x7
 2629 059a FA01     		.2byte	0x1fa
 2630 059c 81000000 		.4byte	0x81
 2631 05a0 42       		.byte	0x42
 2632 05a1 0F       		.uleb128 0xf
 2633 05a2 070C0000 		.4byte	.LASF90
 2634 05a6 07       		.byte	0x7
 2635 05a7 FF01     		.2byte	0x1ff
 2636 05a9 81000000 		.4byte	0x81
 2637 05ad 43       		.byte	0x43
 2638 05ae 00       		.byte	0
 2639 05af 0D       		.uleb128 0xd
 2640 05b0 99000000 		.4byte	0x99
 2641 05b4 BF050000 		.4byte	0x5bf
 2642 05b8 0E       		.uleb128 0xe
 2643 05b9 04030000 		.4byte	0x304
 2644 05bd 00       		.byte	0
 2645 05be 00       		.byte	0
 2646 05bf 05       		.uleb128 0x5
 2647 05c0 34090000 		.4byte	.LASF91
 2648 05c4 07       		.byte	0x7
 2649 05c5 0002     		.2byte	0x200
 2650 05c7 AE040000 		.4byte	0x4ae
 2651 05cb 10       		.uleb128 0x10
 2652 05cc 1C       		.byte	0x1c
 2653 05cd 07       		.byte	0x7
 2654 05ce 0602     		.2byte	0x206
 2655 05d0 4A060000 		.4byte	0x64a
 2656 05d4 0F       		.uleb128 0xf
 2657 05d5 B3070000 		.4byte	.LASF92
 2658 05d9 07       		.byte	0x7
 2659 05da 0B02     		.2byte	0x20b
 2660 05dc 4A060000 		.4byte	0x64a
 2661 05e0 00       		.byte	0
 2662 05e1 0F       		.uleb128 0xf
 2663 05e2 71060000 		.4byte	.LASF93
 2664 05e6 07       		.byte	0x7
 2665 05e7 1002     		.2byte	0x210
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 110


 2666 05e9 4A060000 		.4byte	0x64a
 2667 05ed 04       		.byte	0x4
 2668 05ee 0F       		.uleb128 0xf
 2669 05ef 55040000 		.4byte	.LASF94
 2670 05f3 07       		.byte	0x7
 2671 05f4 1502     		.2byte	0x215
 2672 05f6 4A060000 		.4byte	0x64a
 2673 05fa 08       		.byte	0x8
 2674 05fb 0F       		.uleb128 0xf
 2675 05fc A0090000 		.4byte	.LASF95
 2676 0600 07       		.byte	0x7
 2677 0601 1A02     		.2byte	0x21a
 2678 0603 4A060000 		.4byte	0x64a
 2679 0607 0C       		.byte	0xc
 2680 0608 0F       		.uleb128 0xf
 2681 0609 9D0C0000 		.4byte	.LASF96
 2682 060d 07       		.byte	0x7
 2683 060e 1F02     		.2byte	0x21f
 2684 0610 99000000 		.4byte	0x99
 2685 0614 10       		.byte	0x10
 2686 0615 0F       		.uleb128 0xf
 2687 0616 F2070000 		.4byte	.LASF97
 2688 061a 07       		.byte	0x7
 2689 061b 2402     		.2byte	0x224
 2690 061d 99000000 		.4byte	0x99
 2691 0621 14       		.byte	0x14
 2692 0622 0F       		.uleb128 0xf
 2693 0623 76050000 		.4byte	.LASF98
 2694 0627 07       		.byte	0x7
 2695 0628 2902     		.2byte	0x229
 2696 062a 81000000 		.4byte	0x81
 2697 062e 18       		.byte	0x18
 2698 062f 0F       		.uleb128 0xf
 2699 0630 E60A0000 		.4byte	.LASF99
 2700 0634 07       		.byte	0x7
 2701 0635 2E02     		.2byte	0x22e
 2702 0637 81000000 		.4byte	0x81
 2703 063b 19       		.byte	0x19
 2704 063c 0F       		.uleb128 0xf
 2705 063d 83020000 		.4byte	.LASF100
 2706 0641 07       		.byte	0x7
 2707 0642 3302     		.2byte	0x233
 2708 0644 81000000 		.4byte	0x81
 2709 0648 1A       		.byte	0x1a
 2710 0649 00       		.byte	0
 2711 064a 07       		.uleb128 0x7
 2712 064b 04       		.byte	0x4
 2713 064c D7000000 		.4byte	0xd7
 2714 0650 05       		.uleb128 0x5
 2715 0651 F8020000 		.4byte	.LASF101
 2716 0655 07       		.byte	0x7
 2717 0656 3402     		.2byte	0x234
 2718 0658 CB050000 		.4byte	0x5cb
 2719 065c 10       		.uleb128 0x10
 2720 065d 20       		.byte	0x20
 2721 065e 07       		.byte	0x7
 2722 065f 6702     		.2byte	0x267
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 111


 2723 0661 E8060000 		.4byte	0x6e8
 2724 0665 0F       		.uleb128 0xf
 2725 0666 820D0000 		.4byte	.LASF102
 2726 066a 07       		.byte	0x7
 2727 066b 7002     		.2byte	0x270
 2728 066d E8060000 		.4byte	0x6e8
 2729 0671 00       		.byte	0
 2730 0672 0F       		.uleb128 0xf
 2731 0673 160C0000 		.4byte	.LASF103
 2732 0677 07       		.byte	0x7
 2733 0678 7702     		.2byte	0x277
 2734 067a EF060000 		.4byte	0x6ef
 2735 067e 04       		.byte	0x4
 2736 067f 0F       		.uleb128 0xf
 2737 0680 BC080000 		.4byte	.LASF104
 2738 0684 07       		.byte	0x7
 2739 0685 7D02     		.2byte	0x27d
 2740 0687 F1060000 		.4byte	0x6f1
 2741 068b 08       		.byte	0x8
 2742 068c 0F       		.uleb128 0xf
 2743 068d C3070000 		.4byte	.LASF105
 2744 0691 07       		.byte	0x7
 2745 0692 8302     		.2byte	0x283
 2746 0694 EF060000 		.4byte	0x6ef
 2747 0698 0C       		.byte	0xc
 2748 0699 0F       		.uleb128 0xf
 2749 069a 290B0000 		.4byte	.LASF106
 2750 069e 07       		.byte	0x7
 2751 069f 8A02     		.2byte	0x28a
 2752 06a1 F7060000 		.4byte	0x6f7
 2753 06a5 10       		.byte	0x10
 2754 06a6 0F       		.uleb128 0xf
 2755 06a7 EA0B0000 		.4byte	.LASF107
 2756 06ab 07       		.byte	0x7
 2757 06ac 8F02     		.2byte	0x28f
 2758 06ae 99000000 		.4byte	0x99
 2759 06b2 14       		.byte	0x14
 2760 06b3 0F       		.uleb128 0xf
 2761 06b4 BF040000 		.4byte	.LASF108
 2762 06b8 07       		.byte	0x7
 2763 06b9 9602     		.2byte	0x296
 2764 06bb 8D000000 		.4byte	0x8d
 2765 06bf 18       		.byte	0x18
 2766 06c0 0F       		.uleb128 0xf
 2767 06c1 30030000 		.4byte	.LASF109
 2768 06c5 07       		.byte	0x7
 2769 06c6 9D02     		.2byte	0x29d
 2770 06c8 81000000 		.4byte	0x81
 2771 06cc 1A       		.byte	0x1a
 2772 06cd 0F       		.uleb128 0xf
 2773 06ce 85060000 		.4byte	.LASF110
 2774 06d2 07       		.byte	0x7
 2775 06d3 A702     		.2byte	0x2a7
 2776 06d5 81000000 		.4byte	0x81
 2777 06d9 1B       		.byte	0x1b
 2778 06da 0F       		.uleb128 0xf
 2779 06db 21030000 		.4byte	.LASF111
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 112


 2780 06df 07       		.byte	0x7
 2781 06e0 AF02     		.2byte	0x2af
 2782 06e2 FD060000 		.4byte	0x6fd
 2783 06e6 1C       		.byte	0x1c
 2784 06e7 00       		.byte	0
 2785 06e8 07       		.uleb128 0x7
 2786 06e9 04       		.byte	0x4
 2787 06ea EE060000 		.4byte	0x6ee
 2788 06ee 12       		.uleb128 0x12
 2789 06ef 13       		.uleb128 0x13
 2790 06f0 04       		.byte	0x4
 2791 06f1 07       		.uleb128 0x7
 2792 06f2 04       		.byte	0x4
 2793 06f3 6F040000 		.4byte	0x46f
 2794 06f7 07       		.uleb128 0x7
 2795 06f8 04       		.byte	0x4
 2796 06f9 81000000 		.4byte	0x81
 2797 06fd 07       		.uleb128 0x7
 2798 06fe 04       		.byte	0x4
 2799 06ff 0E020000 		.4byte	0x20e
 2800 0703 05       		.uleb128 0x5
 2801 0704 93040000 		.4byte	.LASF112
 2802 0708 07       		.byte	0x7
 2803 0709 B002     		.2byte	0x2b0
 2804 070b 5C060000 		.4byte	0x65c
 2805 070f 10       		.uleb128 0x10
 2806 0710 20       		.byte	0x20
 2807 0711 07       		.byte	0x7
 2808 0712 B602     		.2byte	0x2b6
 2809 0714 26070000 		.4byte	0x726
 2810 0718 0F       		.uleb128 0xf
 2811 0719 BB0E0000 		.4byte	.LASF113
 2812 071d 07       		.byte	0x7
 2813 071e BB02     		.2byte	0x2bb
 2814 0720 26070000 		.4byte	0x726
 2815 0724 00       		.byte	0
 2816 0725 00       		.byte	0
 2817 0726 0D       		.uleb128 0xd
 2818 0727 03070000 		.4byte	0x703
 2819 072b 36070000 		.4byte	0x736
 2820 072f 0E       		.uleb128 0xe
 2821 0730 04030000 		.4byte	0x304
 2822 0734 00       		.byte	0
 2823 0735 00       		.byte	0
 2824 0736 05       		.uleb128 0x5
 2825 0737 E6060000 		.4byte	.LASF114
 2826 073b 07       		.byte	0x7
 2827 073c BC02     		.2byte	0x2bc
 2828 073e 0F070000 		.4byte	0x70f
 2829 0742 02       		.uleb128 0x2
 2830 0743 08       		.byte	0x8
 2831 0744 04       		.byte	0x4
 2832 0745 75080000 		.4byte	.LASF115
 2833 0749 0B       		.uleb128 0xb
 2834 074a 01       		.byte	0x1
 2835 074b 2C000000 		.4byte	0x2c
 2836 074f 08       		.byte	0x8
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 113


 2837 0750 43       		.byte	0x43
 2838 0751 74070000 		.4byte	0x774
 2839 0755 0C       		.uleb128 0xc
 2840 0756 D2060000 		.4byte	.LASF116
 2841 075a 00       		.byte	0
 2842 075b 0C       		.uleb128 0xc
 2843 075c DD050000 		.4byte	.LASF117
 2844 0760 01       		.byte	0x1
 2845 0761 0C       		.uleb128 0xc
 2846 0762 5A050000 		.4byte	.LASF118
 2847 0766 02       		.byte	0x2
 2848 0767 0C       		.uleb128 0xc
 2849 0768 200E0000 		.4byte	.LASF119
 2850 076c 03       		.byte	0x3
 2851 076d 0C       		.uleb128 0xc
 2852 076e 36010000 		.4byte	.LASF120
 2853 0772 04       		.byte	0x4
 2854 0773 00       		.byte	0
 2855 0774 03       		.uleb128 0x3
 2856 0775 13080000 		.4byte	.LASF121
 2857 0779 08       		.byte	0x8
 2858 077a 49       		.byte	0x49
 2859 077b 49070000 		.4byte	0x749
 2860 077f 09       		.uleb128 0x9
 2861 0780 08       		.byte	0x8
 2862 0781 08       		.byte	0x8
 2863 0782 CF       		.byte	0xcf
 2864 0783 A0070000 		.4byte	0x7a0
 2865 0787 0A       		.uleb128 0xa
 2866 0788 F0090000 		.4byte	.LASF122
 2867 078c 08       		.byte	0x8
 2868 078d D4       		.byte	0xd4
 2869 078e 99000000 		.4byte	0x99
 2870 0792 00       		.byte	0
 2871 0793 0A       		.uleb128 0xa
 2872 0794 D3070000 		.4byte	.LASF123
 2873 0798 08       		.byte	0x8
 2874 0799 D9       		.byte	0xd9
 2875 079a 99000000 		.4byte	0x99
 2876 079e 04       		.byte	0x4
 2877 079f 00       		.byte	0
 2878 07a0 03       		.uleb128 0x3
 2879 07a1 5F0B0000 		.4byte	.LASF124
 2880 07a5 08       		.byte	0x8
 2881 07a6 DA       		.byte	0xda
 2882 07a7 7F070000 		.4byte	0x77f
 2883 07ab 14       		.uleb128 0x14
 2884 07ac 95050000 		.4byte	.LASF125
 2885 07b0 01       		.byte	0x1
 2886 07b1 4A08     		.2byte	0x84a
 2887 07b3 00000000 		.4byte	.LFB20
 2888 07b7 2C000000 		.4byte	.LFE20-.LFB20
 2889 07bb 01       		.uleb128 0x1
 2890 07bc 9C       		.byte	0x9c
 2891 07bd D2070000 		.4byte	0x7d2
 2892 07c1 15       		.uleb128 0x15
 2893 07c2 B40B0000 		.4byte	.LASF127
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 114


 2894 07c6 01       		.byte	0x1
 2895 07c7 4C08     		.2byte	0x84c
 2896 07c9 99000000 		.4byte	0x99
 2897 07cd 00000000 		.4byte	.LLST0
 2898 07d1 00       		.byte	0
 2899 07d2 14       		.uleb128 0x14
 2900 07d3 390B0000 		.4byte	.LASF126
 2901 07d7 01       		.byte	0x1
 2902 07d8 7008     		.2byte	0x870
 2903 07da 00000000 		.4byte	.LFB21
 2904 07de 08000000 		.4byte	.LFE21-.LFB21
 2905 07e2 01       		.uleb128 0x1
 2906 07e3 9C       		.byte	0x9c
 2907 07e4 F2070000 		.4byte	0x7f2
 2908 07e8 16       		.uleb128 0x16
 2909 07e9 06000000 		.4byte	.LVL4
 2910 07ed AB070000 		.4byte	0x7ab
 2911 07f1 00       		.byte	0
 2912 07f2 17       		.uleb128 0x17
 2913 07f3 D7010000 		.4byte	.LASF230
 2914 07f7 01       		.byte	0x1
 2915 07f8 EC       		.byte	0xec
 2916 07f9 99000000 		.4byte	0x99
 2917 07fd 00000000 		.4byte	.LFB0
 2918 0801 10000000 		.4byte	.LFE0-.LFB0
 2919 0805 01       		.uleb128 0x1
 2920 0806 9C       		.byte	0x9c
 2921 0807 18       		.uleb128 0x18
 2922 0808 A6090000 		.4byte	.LASF129
 2923 080c 01       		.byte	0x1
 2924 080d 1A01     		.2byte	0x11a
 2925 080f BA000000 		.4byte	0xba
 2926 0813 00000000 		.4byte	.LFB1
 2927 0817 40000000 		.4byte	.LFE1-.LFB1
 2928 081b 01       		.uleb128 0x1
 2929 081c 9C       		.byte	0x9c
 2930 081d 4B080000 		.4byte	0x84b
 2931 0821 19       		.uleb128 0x19
 2932 0822 3C0E0000 		.4byte	.LASF135
 2933 0826 01       		.byte	0x1
 2934 0827 1A01     		.2byte	0x11a
 2935 0829 99000000 		.4byte	0x99
 2936 082d 1E000000 		.4byte	.LLST1
 2937 0831 15       		.uleb128 0x15
 2938 0832 130E0000 		.4byte	.LASF128
 2939 0836 01       		.byte	0x1
 2940 0837 1C01     		.2byte	0x11c
 2941 0839 BA000000 		.4byte	0xba
 2942 083d 3F000000 		.4byte	.LLST2
 2943 0841 16       		.uleb128 0x16
 2944 0842 38000000 		.4byte	.LVL7
 2945 0846 8A130000 		.4byte	0x138a
 2946 084a 00       		.byte	0
 2947 084b 18       		.uleb128 0x18
 2948 084c FC060000 		.4byte	.LASF130
 2949 0850 01       		.byte	0x1
 2950 0851 6D01     		.2byte	0x16d
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 115


 2951 0853 BA000000 		.4byte	0xba
 2952 0857 00000000 		.4byte	.LFB2
 2953 085b 2C000000 		.4byte	.LFE2-.LFB2
 2954 085f 01       		.uleb128 0x1
 2955 0860 9C       		.byte	0x9c
 2956 0861 7F080000 		.4byte	0x87f
 2957 0865 15       		.uleb128 0x15
 2958 0866 36000000 		.4byte	.LASF131
 2959 086a 01       		.byte	0x1
 2960 086b 6F01     		.2byte	0x16f
 2961 086d BA000000 		.4byte	0xba
 2962 0871 5D000000 		.4byte	.LLST3
 2963 0875 16       		.uleb128 0x16
 2964 0876 16000000 		.4byte	.LVL10
 2965 087a 96130000 		.4byte	0x1396
 2966 087e 00       		.byte	0
 2967 087f 18       		.uleb128 0x18
 2968 0880 850C0000 		.4byte	.LASF132
 2969 0884 01       		.byte	0x1
 2970 0885 AB01     		.2byte	0x1ab
 2971 0887 BA000000 		.4byte	0xba
 2972 088b 00000000 		.4byte	.LFB3
 2973 088f 3C000000 		.4byte	.LFE3-.LFB3
 2974 0893 01       		.uleb128 0x1
 2975 0894 9C       		.byte	0x9c
 2976 0895 D7080000 		.4byte	0x8d7
 2977 0899 15       		.uleb128 0x15
 2978 089a 36000000 		.4byte	.LASF131
 2979 089e 01       		.byte	0x1
 2980 089f AD01     		.2byte	0x1ad
 2981 08a1 BA000000 		.4byte	0xba
 2982 08a5 7C000000 		.4byte	.LLST4
 2983 08a9 15       		.uleb128 0x15
 2984 08aa 46080000 		.4byte	.LASF133
 2985 08ae 01       		.byte	0x1
 2986 08af AF01     		.2byte	0x1af
 2987 08b1 99000000 		.4byte	0x99
 2988 08b5 CA000000 		.4byte	.LLST5
 2989 08b9 1A       		.uleb128 0x1a
 2990 08ba 18000000 		.4byte	.LVL15
 2991 08be 07080000 		.4byte	0x807
 2992 08c2 CD080000 		.4byte	0x8cd
 2993 08c6 1B       		.uleb128 0x1b
 2994 08c7 01       		.uleb128 0x1
 2995 08c8 50       		.byte	0x50
 2996 08c9 02       		.uleb128 0x2
 2997 08ca 74       		.byte	0x74
 2998 08cb 00       		.sleb128 0
 2999 08cc 00       		.byte	0
 3000 08cd 16       		.uleb128 0x16
 3001 08ce 26000000 		.4byte	.LVL16
 3002 08d2 4B080000 		.4byte	0x84b
 3003 08d6 00       		.byte	0
 3004 08d7 18       		.uleb128 0x18
 3005 08d8 5B000000 		.4byte	.LASF134
 3006 08dc 01       		.byte	0x1
 3007 08dd 1702     		.2byte	0x217
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 116


 3008 08df BA000000 		.4byte	0xba
 3009 08e3 00000000 		.4byte	.LFB4
 3010 08e7 54000000 		.4byte	.LFE4-.LFB4
 3011 08eb 01       		.uleb128 0x1
 3012 08ec 9C       		.byte	0x9c
 3013 08ed 2B090000 		.4byte	0x92b
 3014 08f1 19       		.uleb128 0x19
 3015 08f2 3C0E0000 		.4byte	.LASF135
 3016 08f6 01       		.byte	0x1
 3017 08f7 1702     		.2byte	0x217
 3018 08f9 99000000 		.4byte	0x99
 3019 08fd DD000000 		.4byte	.LLST6
 3020 0901 19       		.uleb128 0x19
 3021 0902 2B020000 		.4byte	.LASF136
 3022 0906 01       		.byte	0x1
 3023 0907 1702     		.2byte	0x217
 3024 0909 99000000 		.4byte	0x99
 3025 090d FE000000 		.4byte	.LLST7
 3026 0911 15       		.uleb128 0x15
 3027 0912 130E0000 		.4byte	.LASF128
 3028 0916 01       		.byte	0x1
 3029 0917 1902     		.2byte	0x219
 3030 0919 BA000000 		.4byte	0xba
 3031 091d 1F010000 		.4byte	.LLST8
 3032 0921 16       		.uleb128 0x16
 3033 0922 48000000 		.4byte	.LVL22
 3034 0926 A2130000 		.4byte	0x13a2
 3035 092a 00       		.byte	0
 3036 092b 18       		.uleb128 0x18
 3037 092c 86070000 		.4byte	.LASF137
 3038 0930 01       		.byte	0x1
 3039 0931 8102     		.2byte	0x281
 3040 0933 BA000000 		.4byte	0xba
 3041 0937 00000000 		.4byte	.LFB5
 3042 093b 2C000000 		.4byte	.LFE5-.LFB5
 3043 093f 01       		.uleb128 0x1
 3044 0940 9C       		.byte	0x9c
 3045 0941 5F090000 		.4byte	0x95f
 3046 0945 15       		.uleb128 0x15
 3047 0946 36000000 		.4byte	.LASF131
 3048 094a 01       		.byte	0x1
 3049 094b 8302     		.2byte	0x283
 3050 094d BA000000 		.4byte	0xba
 3051 0951 3D010000 		.4byte	.LLST9
 3052 0955 16       		.uleb128 0x16
 3053 0956 16000000 		.4byte	.LVL25
 3054 095a AE130000 		.4byte	0x13ae
 3055 095e 00       		.byte	0
 3056 095f 1C       		.uleb128 0x1c
 3057 0960 D50B0000 		.4byte	.LASF144
 3058 0964 01       		.byte	0x1
 3059 0965 4803     		.2byte	0x348
 3060 0967 00000000 		.4byte	.LFB7
 3061 096b 9C000000 		.4byte	.LFE7-.LFB7
 3062 096f 01       		.uleb128 0x1
 3063 0970 9C       		.byte	0x9c
 3064 0971 290A0000 		.4byte	0xa29
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 117


 3065 0975 19       		.uleb128 0x19
 3066 0976 3C0E0000 		.4byte	.LASF135
 3067 097a 01       		.byte	0x1
 3068 097b 4803     		.2byte	0x348
 3069 097d 99000000 		.4byte	0x99
 3070 0981 5C010000 		.4byte	.LLST10
 3071 0985 19       		.uleb128 0x19
 3072 0986 22000000 		.4byte	.LASF138
 3073 098a 01       		.byte	0x1
 3074 098b 4803     		.2byte	0x348
 3075 098d 99000000 		.4byte	0x99
 3076 0991 7D010000 		.4byte	.LLST11
 3077 0995 19       		.uleb128 0x19
 3078 0996 750C0000 		.4byte	.LASF139
 3079 099a 01       		.byte	0x1
 3080 099b 4803     		.2byte	0x348
 3081 099d 99000000 		.4byte	0x99
 3082 09a1 9E010000 		.4byte	.LLST12
 3083 09a5 1D       		.uleb128 0x1d
 3084 09a6 AC040000 		.4byte	.LASF140
 3085 09aa 01       		.byte	0x1
 3086 09ab 4A03     		.2byte	0x34a
 3087 09ad 99000000 		.4byte	0x99
 3088 09b1 01       		.byte	0x1
 3089 09b2 15       		.uleb128 0x15
 3090 09b3 7B0C0000 		.4byte	.LASF141
 3091 09b7 01       		.byte	0x1
 3092 09b8 4B03     		.2byte	0x34b
 3093 09ba 99000000 		.4byte	0x99
 3094 09be CA010000 		.4byte	.LLST13
 3095 09c2 15       		.uleb128 0x15
 3096 09c3 51010000 		.4byte	.LASF142
 3097 09c7 01       		.byte	0x1
 3098 09c8 4C03     		.2byte	0x34c
 3099 09ca 81000000 		.4byte	0x81
 3100 09ce E9010000 		.4byte	.LLST14
 3101 09d2 15       		.uleb128 0x15
 3102 09d3 010C0000 		.4byte	.LASF143
 3103 09d7 01       		.byte	0x1
 3104 09d8 4D03     		.2byte	0x34d
 3105 09da 290A0000 		.4byte	0xa29
 3106 09de 12020000 		.4byte	.LLST15
 3107 09e2 16       		.uleb128 0x16
 3108 09e3 1A000000 		.4byte	.LVL32
 3109 09e7 BA130000 		.4byte	0x13ba
 3110 09eb 16       		.uleb128 0x16
 3111 09ec 3A000000 		.4byte	.LVL33
 3112 09f0 C5130000 		.4byte	0x13c5
 3113 09f4 16       		.uleb128 0x16
 3114 09f5 4C000000 		.4byte	.LVL34
 3115 09f9 BA130000 		.4byte	0x13ba
 3116 09fd 16       		.uleb128 0x16
 3117 09fe 6C000000 		.4byte	.LVL35
 3118 0a02 C5130000 		.4byte	0x13c5
 3119 0a06 16       		.uleb128 0x16
 3120 0a07 72000000 		.4byte	.LVL36
 3121 0a0b BA130000 		.4byte	0x13ba
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 118


 3122 0a0f 16       		.uleb128 0x16
 3123 0a10 84000000 		.4byte	.LVL37
 3124 0a14 C5130000 		.4byte	0x13c5
 3125 0a18 1E       		.uleb128 0x1e
 3126 0a19 8C000000 		.4byte	.LVL38
 3127 0a1d D0130000 		.4byte	0x13d0
 3128 0a21 1B       		.uleb128 0x1b
 3129 0a22 01       		.uleb128 0x1
 3130 0a23 50       		.byte	0x50
 3131 0a24 02       		.uleb128 0x2
 3132 0a25 74       		.byte	0x74
 3133 0a26 00       		.sleb128 0
 3134 0a27 00       		.byte	0
 3135 0a28 00       		.byte	0
 3136 0a29 07       		.uleb128 0x7
 3137 0a2a 04       		.byte	0x4
 3138 0a2b 2F0A0000 		.4byte	0xa2f
 3139 0a2f 1F       		.uleb128 0x1f
 3140 0a30 50060000 		.4byte	0x650
 3141 0a34 1C       		.uleb128 0x1c
 3142 0a35 48090000 		.4byte	.LASF145
 3143 0a39 01       		.byte	0x1
 3144 0a3a 8E04     		.2byte	0x48e
 3145 0a3c 00000000 		.4byte	.LFB10
 3146 0a40 88000000 		.4byte	.LFE10-.LFB10
 3147 0a44 01       		.uleb128 0x1
 3148 0a45 9C       		.byte	0x9c
 3149 0a46 E60A0000 		.4byte	0xae6
 3150 0a4a 19       		.uleb128 0x19
 3151 0a4b 750C0000 		.4byte	.LASF139
 3152 0a4f 01       		.byte	0x1
 3153 0a50 8E04     		.2byte	0x48e
 3154 0a52 99000000 		.4byte	0x99
 3155 0a56 25020000 		.4byte	.LLST16
 3156 0a5a 15       		.uleb128 0x15
 3157 0a5b 51010000 		.4byte	.LASF142
 3158 0a5f 01       		.byte	0x1
 3159 0a60 9004     		.2byte	0x490
 3160 0a62 81000000 		.4byte	0x81
 3161 0a66 46020000 		.4byte	.LLST17
 3162 0a6a 15       		.uleb128 0x15
 3163 0a6b 73020000 		.4byte	.LASF146
 3164 0a6f 01       		.byte	0x1
 3165 0a70 9204     		.2byte	0x492
 3166 0a72 99000000 		.4byte	0x99
 3167 0a76 5A020000 		.4byte	.LLST18
 3168 0a7a 15       		.uleb128 0x15
 3169 0a7b 67040000 		.4byte	.LASF147
 3170 0a7f 01       		.byte	0x1
 3171 0a80 9404     		.2byte	0x494
 3172 0a82 99000000 		.4byte	0x99
 3173 0a86 79020000 		.4byte	.LLST19
 3174 0a8a 15       		.uleb128 0x15
 3175 0a8b 63030000 		.4byte	.LASF148
 3176 0a8f 01       		.byte	0x1
 3177 0a90 9504     		.2byte	0x495
 3178 0a92 99000000 		.4byte	0x99
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 119


 3179 0a96 98020000 		.4byte	.LLST20
 3180 0a9a 15       		.uleb128 0x15
 3181 0a9b 4A050000 		.4byte	.LASF149
 3182 0a9f 01       		.byte	0x1
 3183 0aa0 9704     		.2byte	0x497
 3184 0aa2 99000000 		.4byte	0x99
 3185 0aa6 B7020000 		.4byte	.LLST21
 3186 0aaa 15       		.uleb128 0x15
 3187 0aab 21070000 		.4byte	.LASF150
 3188 0aaf 01       		.byte	0x1
 3189 0ab0 9804     		.2byte	0x498
 3190 0ab2 99000000 		.4byte	0x99
 3191 0ab6 E1020000 		.4byte	.LLST22
 3192 0aba 15       		.uleb128 0x15
 3193 0abb BB020000 		.4byte	.LASF151
 3194 0abf 01       		.byte	0x1
 3195 0ac0 9A04     		.2byte	0x49a
 3196 0ac2 290A0000 		.4byte	0xa29
 3197 0ac6 F4020000 		.4byte	.LLST23
 3198 0aca 16       		.uleb128 0x16
 3199 0acb 32000000 		.4byte	.LVL49
 3200 0acf BA130000 		.4byte	0x13ba
 3201 0ad3 1E       		.uleb128 0x1e
 3202 0ad4 72000000 		.4byte	.LVL61
 3203 0ad8 C5130000 		.4byte	0x13c5
 3204 0adc 1B       		.uleb128 0x1b
 3205 0add 01       		.uleb128 0x1
 3206 0ade 50       		.byte	0x50
 3207 0adf 04       		.uleb128 0x4
 3208 0ae0 91       		.byte	0x91
 3209 0ae1 5C       		.sleb128 -36
 3210 0ae2 94       		.byte	0x94
 3211 0ae3 01       		.byte	0x1
 3212 0ae4 00       		.byte	0
 3213 0ae5 00       		.byte	0
 3214 0ae6 20       		.uleb128 0x20
 3215 0ae7 640D0000 		.4byte	.LASF231
 3216 0aeb 01       		.byte	0x1
 3217 0aec 2405     		.2byte	0x524
 3218 0aee 00000000 		.4byte	.LFB11
 3219 0af2 02000000 		.4byte	.LFE11-.LFB11
 3220 0af6 01       		.uleb128 0x1
 3221 0af7 9C       		.byte	0x9c
 3222 0af8 1C       		.uleb128 0x1c
 3223 0af9 11090000 		.4byte	.LASF152
 3224 0afd 01       		.byte	0x1
 3225 0afe 7105     		.2byte	0x571
 3226 0b00 00000000 		.4byte	.LFB12
 3227 0b04 08000000 		.4byte	.LFE12-.LFB12
 3228 0b08 01       		.uleb128 0x1
 3229 0b09 9C       		.byte	0x9c
 3230 0b0a 300B0000 		.4byte	0xb30
 3231 0b0e 19       		.uleb128 0x19
 3232 0b0f B1060000 		.4byte	.LASF153
 3233 0b13 01       		.byte	0x1
 3234 0b14 7105     		.2byte	0x571
 3235 0b16 E8000000 		.4byte	0xe8
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 120


 3236 0b1a 07030000 		.4byte	.LLST24
 3237 0b1e 1E       		.uleb128 0x1e
 3238 0b1f 06000000 		.4byte	.LVL69
 3239 0b23 DC130000 		.4byte	0x13dc
 3240 0b27 1B       		.uleb128 0x1b
 3241 0b28 01       		.uleb128 0x1
 3242 0b29 50       		.byte	0x50
 3243 0b2a 03       		.uleb128 0x3
 3244 0b2b F3       		.byte	0xf3
 3245 0b2c 01       		.uleb128 0x1
 3246 0b2d 50       		.byte	0x50
 3247 0b2e 00       		.byte	0
 3248 0b2f 00       		.byte	0
 3249 0b30 1C       		.uleb128 0x1c
 3250 0b31 E7010000 		.4byte	.LASF154
 3251 0b35 01       		.byte	0x1
 3252 0b36 8805     		.2byte	0x588
 3253 0b38 00000000 		.4byte	.LFB13
 3254 0b3c 28000000 		.4byte	.LFE13-.LFB13
 3255 0b40 01       		.uleb128 0x1
 3256 0b41 9C       		.byte	0x9c
 3257 0b42 670B0000 		.4byte	0xb67
 3258 0b46 19       		.uleb128 0x19
 3259 0b47 60040000 		.4byte	.LASF155
 3260 0b4b 01       		.byte	0x1
 3261 0b4c 8805     		.2byte	0x588
 3262 0b4e 99000000 		.4byte	0x99
 3263 0b52 28030000 		.4byte	.LLST25
 3264 0b56 15       		.uleb128 0x15
 3265 0b57 8F0D0000 		.4byte	.LASF156
 3266 0b5b 01       		.byte	0x1
 3267 0b5c A405     		.2byte	0x5a4
 3268 0b5e 99000000 		.4byte	0x99
 3269 0b62 56030000 		.4byte	.LLST26
 3270 0b66 00       		.byte	0
 3271 0b67 1C       		.uleb128 0x1c
 3272 0b68 0C060000 		.4byte	.LASF157
 3273 0b6c 01       		.byte	0x1
 3274 0b6d CC05     		.2byte	0x5cc
 3275 0b6f 00000000 		.4byte	.LFB14
 3276 0b73 28000000 		.4byte	.LFE14-.LFB14
 3277 0b77 01       		.uleb128 0x1
 3278 0b78 9C       		.byte	0x9c
 3279 0b79 9E0B0000 		.4byte	0xb9e
 3280 0b7d 19       		.uleb128 0x19
 3281 0b7e A70C0000 		.4byte	.LASF58
 3282 0b82 01       		.byte	0x1
 3283 0b83 CC05     		.2byte	0x5cc
 3284 0b85 99000000 		.4byte	0x99
 3285 0b89 74030000 		.4byte	.LLST27
 3286 0b8d 15       		.uleb128 0x15
 3287 0b8e 8F0D0000 		.4byte	.LASF156
 3288 0b92 01       		.byte	0x1
 3289 0b93 F505     		.2byte	0x5f5
 3290 0b95 99000000 		.4byte	0x99
 3291 0b99 A2030000 		.4byte	.LLST28
 3292 0b9d 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 121


 3293 0b9e 1C       		.uleb128 0x1c
 3294 0b9f F7070000 		.4byte	.LASF158
 3295 0ba3 01       		.byte	0x1
 3296 0ba4 2006     		.2byte	0x620
 3297 0ba6 00000000 		.4byte	.LFB15
 3298 0baa 12000000 		.4byte	.LFE15-.LFB15
 3299 0bae 01       		.uleb128 0x1
 3300 0baf 9C       		.byte	0x9c
 3301 0bb0 FA0B0000 		.4byte	0xbfa
 3302 0bb4 19       		.uleb128 0x19
 3303 0bb5 A70C0000 		.4byte	.LASF58
 3304 0bb9 01       		.byte	0x1
 3305 0bba 2006     		.2byte	0x620
 3306 0bbc 99000000 		.4byte	0x99
 3307 0bc0 C0030000 		.4byte	.LLST29
 3308 0bc4 19       		.uleb128 0x19
 3309 0bc5 60040000 		.4byte	.LASF155
 3310 0bc9 01       		.byte	0x1
 3311 0bca 2006     		.2byte	0x620
 3312 0bcc 99000000 		.4byte	0x99
 3313 0bd0 EC030000 		.4byte	.LLST30
 3314 0bd4 1A       		.uleb128 0x1a
 3315 0bd5 0A000000 		.4byte	.LVL80
 3316 0bd9 300B0000 		.4byte	0xb30
 3317 0bdd E90B0000 		.4byte	0xbe9
 3318 0be1 1B       		.uleb128 0x1b
 3319 0be2 01       		.uleb128 0x1
 3320 0be3 50       		.byte	0x50
 3321 0be4 03       		.uleb128 0x3
 3322 0be5 F3       		.byte	0xf3
 3323 0be6 01       		.uleb128 0x1
 3324 0be7 51       		.byte	0x51
 3325 0be8 00       		.byte	0
 3326 0be9 1E       		.uleb128 0x1e
 3327 0bea 10000000 		.4byte	.LVL81
 3328 0bee 670B0000 		.4byte	0xb67
 3329 0bf2 1B       		.uleb128 0x1b
 3330 0bf3 01       		.uleb128 0x1
 3331 0bf4 50       		.byte	0x50
 3332 0bf5 02       		.uleb128 0x2
 3333 0bf6 74       		.byte	0x74
 3334 0bf7 00       		.sleb128 0
 3335 0bf8 00       		.byte	0
 3336 0bf9 00       		.byte	0
 3337 0bfa 18       		.uleb128 0x18
 3338 0bfb C4050000 		.4byte	.LASF159
 3339 0bff 01       		.byte	0x1
 3340 0c00 5406     		.2byte	0x654
 3341 0c02 BA000000 		.4byte	0xba
 3342 0c06 00000000 		.4byte	.LFB16
 3343 0c0a 1A000000 		.4byte	.LFE16-.LFB16
 3344 0c0e 01       		.uleb128 0x1
 3345 0c0f 9C       		.byte	0x9c
 3346 0c10 4C0C0000 		.4byte	0xc4c
 3347 0c14 19       		.uleb128 0x19
 3348 0c15 3C0E0000 		.4byte	.LASF135
 3349 0c19 01       		.byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 122


 3350 0c1a 5406     		.2byte	0x654
 3351 0c1c 99000000 		.4byte	0x99
 3352 0c20 0D040000 		.4byte	.LLST31
 3353 0c24 15       		.uleb128 0x15
 3354 0c25 B9060000 		.4byte	.LASF160
 3355 0c29 01       		.byte	0x1
 3356 0c2a 5606     		.2byte	0x656
 3357 0c2c BA000000 		.4byte	0xba
 3358 0c30 4F040000 		.4byte	.LLST32
 3359 0c34 1E       		.uleb128 0x1e
 3360 0c35 18000000 		.4byte	.LVL89
 3361 0c39 E7130000 		.4byte	0x13e7
 3362 0c3d 1B       		.uleb128 0x1b
 3363 0c3e 01       		.uleb128 0x1
 3364 0c3f 50       		.byte	0x50
 3365 0c40 03       		.uleb128 0x3
 3366 0c41 F3       		.byte	0xf3
 3367 0c42 01       		.uleb128 0x1
 3368 0c43 50       		.byte	0x50
 3369 0c44 1B       		.uleb128 0x1b
 3370 0c45 01       		.uleb128 0x1
 3371 0c46 51       		.byte	0x51
 3372 0c47 02       		.uleb128 0x2
 3373 0c48 08       		.byte	0x8
 3374 0c49 55       		.byte	0x55
 3375 0c4a 00       		.byte	0
 3376 0c4b 00       		.byte	0
 3377 0c4c 18       		.uleb128 0x18
 3378 0c4d BA010000 		.4byte	.LASF161
 3379 0c51 01       		.byte	0x1
 3380 0c52 C906     		.2byte	0x6c9
 3381 0c54 BA000000 		.4byte	0xba
 3382 0c58 00000000 		.4byte	.LFB17
 3383 0c5c 1A000000 		.4byte	.LFE17-.LFB17
 3384 0c60 01       		.uleb128 0x1
 3385 0c61 9C       		.byte	0x9c
 3386 0c62 970C0000 		.4byte	0xc97
 3387 0c66 15       		.uleb128 0x15
 3388 0c67 B9060000 		.4byte	.LASF160
 3389 0c6b 01       		.byte	0x1
 3390 0c6c CB06     		.2byte	0x6cb
 3391 0c6e BA000000 		.4byte	0xba
 3392 0c72 79040000 		.4byte	.LLST33
 3393 0c76 15       		.uleb128 0x15
 3394 0c77 46080000 		.4byte	.LASF133
 3395 0c7b 01       		.byte	0x1
 3396 0c7c CC06     		.2byte	0x6cc
 3397 0c7e 99000000 		.4byte	0x99
 3398 0c82 A3040000 		.4byte	.LLST34
 3399 0c86 1E       		.uleb128 0x1e
 3400 0c87 0E000000 		.4byte	.LVL92
 3401 0c8b FA0B0000 		.4byte	0xbfa
 3402 0c8f 1B       		.uleb128 0x1b
 3403 0c90 01       		.uleb128 0x1
 3404 0c91 50       		.byte	0x50
 3405 0c92 02       		.uleb128 0x2
 3406 0c93 74       		.byte	0x74
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 123


 3407 0c94 00       		.sleb128 0
 3408 0c95 00       		.byte	0
 3409 0c96 00       		.byte	0
 3410 0c97 18       		.uleb128 0x18
 3411 0c98 00000000 		.4byte	.LASF162
 3412 0c9c 01       		.byte	0x1
 3413 0c9d E80A     		.2byte	0xae8
 3414 0c9f 99000000 		.4byte	0x99
 3415 0ca3 00000000 		.4byte	.LFB24
 3416 0ca7 10000000 		.4byte	.LFE24-.LFB24
 3417 0cab 01       		.uleb128 0x1
 3418 0cac 9C       		.byte	0x9c
 3419 0cad DE0C0000 		.4byte	0xcde
 3420 0cb1 19       		.uleb128 0x19
 3421 0cb2 3C0E0000 		.4byte	.LASF135
 3422 0cb6 01       		.byte	0x1
 3423 0cb7 E80A     		.2byte	0xae8
 3424 0cb9 99000000 		.4byte	0x99
 3425 0cbd C2040000 		.4byte	.LLST35
 3426 0cc1 21       		.uleb128 0x21
 3427 0cc2 000B0000 		.4byte	.LASF163
 3428 0cc6 01       		.byte	0x1
 3429 0cc7 EA0A     		.2byte	0xaea
 3430 0cc9 99000000 		.4byte	0x99
 3431 0ccd 01       		.uleb128 0x1
 3432 0cce 50       		.byte	0x50
 3433 0ccf 21       		.uleb128 0x21
 3434 0cd0 34020000 		.4byte	.LASF164
 3435 0cd4 01       		.byte	0x1
 3436 0cd5 EE0A     		.2byte	0xaee
 3437 0cd7 DE0C0000 		.4byte	0xcde
 3438 0cdb 01       		.uleb128 0x1
 3439 0cdc 53       		.byte	0x53
 3440 0cdd 00       		.byte	0
 3441 0cde 07       		.uleb128 0x7
 3442 0cdf 04       		.byte	0x4
 3443 0ce0 0B030000 		.4byte	0x30b
 3444 0ce4 18       		.uleb128 0x18
 3445 0ce5 31040000 		.4byte	.LASF165
 3446 0ce9 01       		.byte	0x1
 3447 0cea 400B     		.2byte	0xb40
 3448 0cec 81000000 		.4byte	0x81
 3449 0cf0 00000000 		.4byte	.LFB25
 3450 0cf4 26000000 		.4byte	.LFE25-.LFB25
 3451 0cf8 01       		.uleb128 0x1
 3452 0cf9 9C       		.byte	0x9c
 3453 0cfa 3C0D0000 		.4byte	0xd3c
 3454 0cfe 19       		.uleb128 0x19
 3455 0cff EE0D0000 		.4byte	.LASF166
 3456 0d03 01       		.byte	0x1
 3457 0d04 400B     		.2byte	0xb40
 3458 0d06 99000000 		.4byte	0x99
 3459 0d0a E3040000 		.4byte	.LLST36
 3460 0d0e 19       		.uleb128 0x19
 3461 0d0f B2050000 		.4byte	.LASF49
 3462 0d13 01       		.byte	0x1
 3463 0d14 400B     		.2byte	0xb40
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 124


 3464 0d16 99000000 		.4byte	0x99
 3465 0d1a 2C050000 		.4byte	.LLST37
 3466 0d1e 15       		.uleb128 0x15
 3467 0d1f D50A0000 		.4byte	.LASF167
 3468 0d23 01       		.byte	0x1
 3469 0d24 420B     		.2byte	0xb42
 3470 0d26 99000000 		.4byte	0x99
 3471 0d2a 66050000 		.4byte	.LLST38
 3472 0d2e 1D       		.uleb128 0x1d
 3473 0d2f FC0D0000 		.4byte	.LASF168
 3474 0d33 01       		.byte	0x1
 3475 0d34 430B     		.2byte	0xb43
 3476 0d36 99000000 		.4byte	0x99
 3477 0d3a 01       		.byte	0x1
 3478 0d3b 00       		.byte	0
 3479 0d3c 14       		.uleb128 0x14
 3480 0d3d 45020000 		.4byte	.LASF169
 3481 0d41 01       		.byte	0x1
 3482 0d42 9909     		.2byte	0x999
 3483 0d44 00000000 		.4byte	.LFB23
 3484 0d48 14000000 		.4byte	.LFE23-.LFB23
 3485 0d4c 01       		.uleb128 0x1
 3486 0d4d 9C       		.byte	0x9c
 3487 0d4e BC0D0000 		.4byte	0xdbc
 3488 0d52 19       		.uleb128 0x19
 3489 0d53 46080000 		.4byte	.LASF133
 3490 0d57 01       		.byte	0x1
 3491 0d58 9909     		.2byte	0x999
 3492 0d5a 99000000 		.4byte	0x99
 3493 0d5e 79050000 		.4byte	.LLST39
 3494 0d62 19       		.uleb128 0x19
 3495 0d63 34020000 		.4byte	.LASF164
 3496 0d67 01       		.byte	0x1
 3497 0d68 9909     		.2byte	0x999
 3498 0d6a DE0C0000 		.4byte	0xcde
 3499 0d6e 9A050000 		.4byte	.LLST40
 3500 0d72 21       		.uleb128 0x21
 3501 0d73 39030000 		.4byte	.LASF170
 3502 0d77 01       		.byte	0x1
 3503 0d78 9B09     		.2byte	0x99b
 3504 0d7a 81000000 		.4byte	0x81
 3505 0d7e 01       		.uleb128 0x1
 3506 0d7f 50       		.byte	0x50
 3507 0d80 1D       		.uleb128 0x1d
 3508 0d81 6C010000 		.4byte	.LASF171
 3509 0d85 01       		.byte	0x1
 3510 0d86 9C09     		.2byte	0x99c
 3511 0d88 81000000 		.4byte	0x81
 3512 0d8c 00       		.byte	0
 3513 0d8d 15       		.uleb128 0x15
 3514 0d8e EE0D0000 		.4byte	.LASF166
 3515 0d92 01       		.byte	0x1
 3516 0d93 A209     		.2byte	0x9a2
 3517 0d95 99000000 		.4byte	0x99
 3518 0d99 C6050000 		.4byte	.LLST41
 3519 0d9d 1A       		.uleb128 0x1a
 3520 0d9e 08000000 		.4byte	.LVL110
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 125


 3521 0da2 970C0000 		.4byte	0xc97
 3522 0da6 B20D0000 		.4byte	0xdb2
 3523 0daa 1B       		.uleb128 0x1b
 3524 0dab 01       		.uleb128 0x1
 3525 0dac 50       		.byte	0x50
 3526 0dad 03       		.uleb128 0x3
 3527 0dae F3       		.byte	0xf3
 3528 0daf 01       		.uleb128 0x1
 3529 0db0 50       		.byte	0x50
 3530 0db1 00       		.byte	0
 3531 0db2 16       		.uleb128 0x16
 3532 0db3 10000000 		.4byte	.LVL112
 3533 0db7 E40C0000 		.4byte	0xce4
 3534 0dbb 00       		.byte	0
 3535 0dbc 22       		.uleb128 0x22
 3536 0dbd 89020000 		.4byte	.LASF172
 3537 0dc1 01       		.byte	0x1
 3538 0dc2 F406     		.2byte	0x6f4
 3539 0dc4 BA000000 		.4byte	0xba
 3540 0dc8 00000000 		.4byte	.LFB18
 3541 0dcc 58010000 		.4byte	.LFE18-.LFB18
 3542 0dd0 01       		.uleb128 0x1
 3543 0dd1 9C       		.byte	0x9c
 3544 0dd2 320F0000 		.4byte	0xf32
 3545 0dd6 19       		.uleb128 0x19
 3546 0dd7 3C0E0000 		.4byte	.LASF135
 3547 0ddb 01       		.byte	0x1
 3548 0ddc F406     		.2byte	0x6f4
 3549 0dde 99000000 		.4byte	0x99
 3550 0de2 D9050000 		.4byte	.LLST42
 3551 0de6 15       		.uleb128 0x15
 3552 0de7 00040000 		.4byte	.LASF173
 3553 0deb 01       		.byte	0x1
 3554 0dec F606     		.2byte	0x6f6
 3555 0dee BA000000 		.4byte	0xba
 3556 0df2 05060000 		.4byte	.LLST43
 3557 0df6 15       		.uleb128 0x15
 3558 0df7 50080000 		.4byte	.LASF174
 3559 0dfb 01       		.byte	0x1
 3560 0dfc F806     		.2byte	0x6f8
 3561 0dfe 99000000 		.4byte	0x99
 3562 0e02 2F060000 		.4byte	.LLST44
 3563 0e06 15       		.uleb128 0x15
 3564 0e07 C6000000 		.4byte	.LASF175
 3565 0e0b 01       		.byte	0x1
 3566 0e0c F906     		.2byte	0x6f9
 3567 0e0e 99000000 		.4byte	0x99
 3568 0e12 4E060000 		.4byte	.LLST45
 3569 0e16 15       		.uleb128 0x15
 3570 0e17 3A0C0000 		.4byte	.LASF176
 3571 0e1b 01       		.byte	0x1
 3572 0e1c FA06     		.2byte	0x6fa
 3573 0e1e 99000000 		.4byte	0x99
 3574 0e22 6C060000 		.4byte	.LLST46
 3575 0e26 15       		.uleb128 0x15
 3576 0e27 F8090000 		.4byte	.LASF177
 3577 0e2b 01       		.byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 126


 3578 0e2c FB06     		.2byte	0x6fb
 3579 0e2e 99000000 		.4byte	0x99
 3580 0e32 BC060000 		.4byte	.LLST47
 3581 0e36 21       		.uleb128 0x21
 3582 0e37 F0040000 		.4byte	.LASF178
 3583 0e3b 01       		.byte	0x1
 3584 0e3c FD06     		.2byte	0x6fd
 3585 0e3e A6010000 		.4byte	0x1a6
 3586 0e42 02       		.uleb128 0x2
 3587 0e43 91       		.byte	0x91
 3588 0e44 4C       		.sleb128 -52
 3589 0e45 15       		.uleb128 0x15
 3590 0e46 9B0D0000 		.4byte	.LASF179
 3591 0e4a 01       		.byte	0x1
 3592 0e4b FF06     		.2byte	0x6ff
 3593 0e4d 99000000 		.4byte	0x99
 3594 0e51 EA060000 		.4byte	.LLST48
 3595 0e55 15       		.uleb128 0x15
 3596 0e56 30000000 		.4byte	.LASF180
 3597 0e5a 01       		.byte	0x1
 3598 0e5b 0007     		.2byte	0x700
 3599 0e5d 99000000 		.4byte	0x99
 3600 0e61 1F070000 		.4byte	.LLST49
 3601 0e65 15       		.uleb128 0x15
 3602 0e66 BE0B0000 		.4byte	.LASF181
 3603 0e6a 01       		.byte	0x1
 3604 0e6b 0107     		.2byte	0x701
 3605 0e6d 99000000 		.4byte	0x99
 3606 0e71 4A070000 		.4byte	.LLST50
 3607 0e75 15       		.uleb128 0x15
 3608 0e76 76010000 		.4byte	.LASF182
 3609 0e7a 01       		.byte	0x1
 3610 0e7b 0807     		.2byte	0x708
 3611 0e7d 320F0000 		.4byte	0xf32
 3612 0e81 7F070000 		.4byte	.LLST51
 3613 0e85 15       		.uleb128 0x15
 3614 0e86 22010000 		.4byte	.LASF183
 3615 0e8a 01       		.byte	0x1
 3616 0e8b 0907     		.2byte	0x709
 3617 0e8d DE0C0000 		.4byte	0xcde
 3618 0e91 92070000 		.4byte	.LLST52
 3619 0e95 15       		.uleb128 0x15
 3620 0e96 88050000 		.4byte	.LASF184
 3621 0e9a 01       		.byte	0x1
 3622 0e9b 0A07     		.2byte	0x70a
 3623 0e9d F1060000 		.4byte	0x6f1
 3624 0ea1 A5070000 		.4byte	.LLST53
 3625 0ea5 1A       		.uleb128 0x1a
 3626 0ea6 80000000 		.4byte	.LVL131
 3627 0eaa E7130000 		.4byte	0x13e7
 3628 0eae BF0E0000 		.4byte	0xebf
 3629 0eb2 1B       		.uleb128 0x1b
 3630 0eb3 01       		.uleb128 0x1
 3631 0eb4 50       		.byte	0x50
 3632 0eb5 02       		.uleb128 0x2
 3633 0eb6 75       		.byte	0x75
 3634 0eb7 00       		.sleb128 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 127


 3635 0eb8 1B       		.uleb128 0x1b
 3636 0eb9 01       		.uleb128 0x1
 3637 0eba 51       		.byte	0x51
 3638 0ebb 02       		.uleb128 0x2
 3639 0ebc 08       		.byte	0x8
 3640 0ebd 55       		.byte	0x55
 3641 0ebe 00       		.byte	0
 3642 0ebf 1A       		.uleb128 0x1a
 3643 0ec0 DA000000 		.4byte	.LVL143
 3644 0ec4 F3130000 		.4byte	0x13f3
 3645 0ec8 D30E0000 		.4byte	0xed3
 3646 0ecc 1B       		.uleb128 0x1b
 3647 0ecd 01       		.uleb128 0x1
 3648 0ece 50       		.byte	0x50
 3649 0ecf 02       		.uleb128 0x2
 3650 0ed0 77       		.byte	0x77
 3651 0ed1 00       		.sleb128 0
 3652 0ed2 00       		.byte	0
 3653 0ed3 1A       		.uleb128 0x1a
 3654 0ed4 FC000000 		.4byte	.LVL148
 3655 0ed8 E7130000 		.4byte	0x13e7
 3656 0edc ED0E0000 		.4byte	0xeed
 3657 0ee0 1B       		.uleb128 0x1b
 3658 0ee1 01       		.uleb128 0x1
 3659 0ee2 50       		.byte	0x50
 3660 0ee3 02       		.uleb128 0x2
 3661 0ee4 75       		.byte	0x75
 3662 0ee5 00       		.sleb128 0
 3663 0ee6 1B       		.uleb128 0x1b
 3664 0ee7 01       		.uleb128 0x1
 3665 0ee8 51       		.byte	0x51
 3666 0ee9 02       		.uleb128 0x2
 3667 0eea 08       		.byte	0x8
 3668 0eeb 55       		.byte	0x55
 3669 0eec 00       		.byte	0
 3670 0eed 1A       		.uleb128 0x1a
 3671 0eee 16010000 		.4byte	.LVL149
 3672 0ef2 FE130000 		.4byte	0x13fe
 3673 0ef6 010F0000 		.4byte	0xf01
 3674 0efa 1B       		.uleb128 0x1b
 3675 0efb 01       		.uleb128 0x1
 3676 0efc 50       		.byte	0x50
 3677 0efd 02       		.uleb128 0x2
 3678 0efe 77       		.byte	0x77
 3679 0eff 00       		.sleb128 0
 3680 0f00 00       		.byte	0
 3681 0f01 1A       		.uleb128 0x1a
 3682 0f02 20010000 		.4byte	.LVL150
 3683 0f06 3C0D0000 		.4byte	0xd3c
 3684 0f0a 1B0F0000 		.4byte	0xf1b
 3685 0f0e 1B       		.uleb128 0x1b
 3686 0f0f 01       		.uleb128 0x1
 3687 0f10 50       		.byte	0x50
 3688 0f11 02       		.uleb128 0x2
 3689 0f12 75       		.byte	0x75
 3690 0f13 00       		.sleb128 0
 3691 0f14 1B       		.uleb128 0x1b
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 128


 3692 0f15 01       		.uleb128 0x1
 3693 0f16 51       		.byte	0x51
 3694 0f17 02       		.uleb128 0x2
 3695 0f18 74       		.byte	0x74
 3696 0f19 00       		.sleb128 0
 3697 0f1a 00       		.byte	0
 3698 0f1b 1E       		.uleb128 0x1e
 3699 0f1c 28010000 		.4byte	.LVL151
 3700 0f20 E7130000 		.4byte	0x13e7
 3701 0f24 1B       		.uleb128 0x1b
 3702 0f25 01       		.uleb128 0x1
 3703 0f26 50       		.byte	0x50
 3704 0f27 02       		.uleb128 0x2
 3705 0f28 75       		.byte	0x75
 3706 0f29 00       		.sleb128 0
 3707 0f2a 1B       		.uleb128 0x1b
 3708 0f2b 01       		.uleb128 0x1
 3709 0f2c 51       		.byte	0x51
 3710 0f2d 02       		.uleb128 0x2
 3711 0f2e 08       		.byte	0x8
 3712 0f2f 55       		.byte	0x55
 3713 0f30 00       		.byte	0
 3714 0f31 00       		.byte	0
 3715 0f32 07       		.uleb128 0x7
 3716 0f33 04       		.byte	0x4
 3717 0f34 380F0000 		.4byte	0xf38
 3718 0f38 1F       		.uleb128 0x1f
 3719 0f39 03070000 		.4byte	0x703
 3720 0f3d 18       		.uleb128 0x18
 3721 0f3e 51070000 		.4byte	.LASF185
 3722 0f42 01       		.byte	0x1
 3723 0f43 FF07     		.2byte	0x7ff
 3724 0f45 BA000000 		.4byte	0xba
 3725 0f49 00000000 		.4byte	.LFB19
 3726 0f4d 1A000000 		.4byte	.LFE19-.LFB19
 3727 0f51 01       		.uleb128 0x1
 3728 0f52 9C       		.byte	0x9c
 3729 0f53 880F0000 		.4byte	0xf88
 3730 0f57 15       		.uleb128 0x15
 3731 0f58 00040000 		.4byte	.LASF173
 3732 0f5c 01       		.byte	0x1
 3733 0f5d 0108     		.2byte	0x801
 3734 0f5f BA000000 		.4byte	0xba
 3735 0f63 B8070000 		.4byte	.LLST54
 3736 0f67 15       		.uleb128 0x15
 3737 0f68 46080000 		.4byte	.LASF133
 3738 0f6c 01       		.byte	0x1
 3739 0f6d 0208     		.2byte	0x802
 3740 0f6f 99000000 		.4byte	0x99
 3741 0f73 E2070000 		.4byte	.LLST55
 3742 0f77 1E       		.uleb128 0x1e
 3743 0f78 0E000000 		.4byte	.LVL157
 3744 0f7c BC0D0000 		.4byte	0xdbc
 3745 0f80 1B       		.uleb128 0x1b
 3746 0f81 01       		.uleb128 0x1
 3747 0f82 50       		.byte	0x50
 3748 0f83 02       		.uleb128 0x2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 129


 3749 0f84 74       		.byte	0x74
 3750 0f85 00       		.sleb128 0
 3751 0f86 00       		.byte	0
 3752 0f87 00       		.byte	0
 3753 0f88 1C       		.uleb128 0x1c
 3754 0f89 630E0000 		.4byte	.LASF186
 3755 0f8d 01       		.byte	0x1
 3756 0f8e 6409     		.2byte	0x964
 3757 0f90 00000000 		.4byte	.LFB22
 3758 0f94 20000000 		.4byte	.LFE22-.LFB22
 3759 0f98 01       		.uleb128 0x1
 3760 0f99 9C       		.byte	0x9c
 3761 0f9a CF0F0000 		.4byte	0xfcf
 3762 0f9e 15       		.uleb128 0x15
 3763 0f9f 46080000 		.4byte	.LASF133
 3764 0fa3 01       		.byte	0x1
 3765 0fa4 6609     		.2byte	0x966
 3766 0fa6 99000000 		.4byte	0x99
 3767 0faa 01080000 		.4byte	.LLST56
 3768 0fae 15       		.uleb128 0x15
 3769 0faf 34020000 		.4byte	.LASF164
 3770 0fb3 01       		.byte	0x1
 3771 0fb4 6709     		.2byte	0x967
 3772 0fb6 DE0C0000 		.4byte	0xcde
 3773 0fba 20080000 		.4byte	.LLST57
 3774 0fbe 1E       		.uleb128 0x1e
 3775 0fbf 14000000 		.4byte	.LVL165
 3776 0fc3 3C0D0000 		.4byte	0xd3c
 3777 0fc7 1B       		.uleb128 0x1b
 3778 0fc8 01       		.uleb128 0x1
 3779 0fc9 50       		.byte	0x50
 3780 0fca 02       		.uleb128 0x2
 3781 0fcb 74       		.byte	0x74
 3782 0fcc 00       		.sleb128 0
 3783 0fcd 00       		.byte	0
 3784 0fce 00       		.byte	0
 3785 0fcf 18       		.uleb128 0x18
 3786 0fd0 45060000 		.4byte	.LASF187
 3787 0fd4 01       		.byte	0x1
 3788 0fd5 840C     		.2byte	0xc84
 3789 0fd7 76000000 		.4byte	0x76
 3790 0fdb 00000000 		.4byte	.LFB27
 3791 0fdf 1C000000 		.4byte	.LFE27-.LFB27
 3792 0fe3 01       		.uleb128 0x1
 3793 0fe4 9C       		.byte	0x9c
 3794 0fe5 29100000 		.4byte	0x1029
 3795 0fe9 19       		.uleb128 0x19
 3796 0fea 5B040000 		.4byte	.LASF188
 3797 0fee 01       		.byte	0x1
 3798 0fef 840C     		.2byte	0xc84
 3799 0ff1 74070000 		.4byte	0x774
 3800 0ff5 33080000 		.4byte	.LLST58
 3801 0ff9 19       		.uleb128 0x19
 3802 0ffa 750C0000 		.4byte	.LASF139
 3803 0ffe 01       		.byte	0x1
 3804 0fff 840C     		.2byte	0xc84
 3805 1001 76000000 		.4byte	0x76
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 130


 3806 1005 54080000 		.4byte	.LLST59
 3807 1009 15       		.uleb128 0x15
 3808 100a 000B0000 		.4byte	.LASF163
 3809 100e 01       		.byte	0x1
 3810 100f 860C     		.2byte	0xc86
 3811 1011 76000000 		.4byte	0x76
 3812 1015 75080000 		.4byte	.LLST60
 3813 1019 1E       		.uleb128 0x1e
 3814 101a 14000000 		.4byte	.LVL171
 3815 101e 09140000 		.4byte	0x1409
 3816 1022 1B       		.uleb128 0x1b
 3817 1023 01       		.uleb128 0x1
 3818 1024 50       		.byte	0x50
 3819 1025 01       		.uleb128 0x1
 3820 1026 30       		.byte	0x30
 3821 1027 00       		.byte	0
 3822 1028 00       		.byte	0
 3823 1029 1C       		.uleb128 0x1c
 3824 102a 0A070000 		.4byte	.LASF189
 3825 102e 01       		.byte	0x1
 3826 102f D90C     		.2byte	0xcd9
 3827 1031 00000000 		.4byte	.LFB28
 3828 1035 1C000000 		.4byte	.LFE28-.LFB28
 3829 1039 01       		.uleb128 0x1
 3830 103a 9C       		.byte	0x9c
 3831 103b 92100000 		.4byte	0x1092
 3832 103f 19       		.uleb128 0x19
 3833 1040 08020000 		.4byte	.LASF190
 3834 1044 01       		.byte	0x1
 3835 1045 D90C     		.2byte	0xcd9
 3836 1047 4A060000 		.4byte	0x64a
 3837 104b A0080000 		.4byte	.LLST61
 3838 104f 19       		.uleb128 0x19
 3839 1050 F2070000 		.4byte	.LASF97
 3840 1054 01       		.byte	0x1
 3841 1055 D90C     		.2byte	0xcd9
 3842 1057 99000000 		.4byte	0x99
 3843 105b CC080000 		.4byte	.LLST62
 3844 105f 19       		.uleb128 0x19
 3845 1060 5D030000 		.4byte	.LASF191
 3846 1064 01       		.byte	0x1
 3847 1065 D90C     		.2byte	0xcd9
 3848 1067 99000000 		.4byte	0x99
 3849 106b F8080000 		.4byte	.LLST63
 3850 106f 15       		.uleb128 0x15
 3851 1070 51010000 		.4byte	.LASF142
 3852 1074 01       		.byte	0x1
 3853 1075 DB0C     		.2byte	0xcdb
 3854 1077 81000000 		.4byte	0x81
 3855 107b 24090000 		.4byte	.LLST64
 3856 107f 16       		.uleb128 0x16
 3857 1080 0C000000 		.4byte	.LVL174
 3858 1084 BA130000 		.4byte	0x13ba
 3859 1088 16       		.uleb128 0x16
 3860 1089 1A000000 		.4byte	.LVL176
 3861 108d C5130000 		.4byte	0x13c5
 3862 1091 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 131


 3863 1092 14       		.uleb128 0x14
 3864 1093 41000000 		.4byte	.LASF192
 3865 1097 01       		.byte	0x1
 3866 1098 B903     		.2byte	0x3b9
 3867 109a 00000000 		.4byte	.LFB8
 3868 109e 18000000 		.4byte	.LFE8-.LFB8
 3869 10a2 01       		.uleb128 0x1
 3870 10a3 9C       		.byte	0x9c
 3871 10a4 D5100000 		.4byte	0x10d5
 3872 10a8 1A       		.uleb128 0x1a
 3873 10a9 0E000000 		.4byte	.LVL179
 3874 10ad 29100000 		.4byte	0x1029
 3875 10b1 CB100000 		.4byte	0x10cb
 3876 10b5 1B       		.uleb128 0x1b
 3877 10b6 01       		.uleb128 0x1
 3878 10b7 50       		.byte	0x50
 3879 10b8 05       		.uleb128 0x5
 3880 10b9 0C       		.byte	0xc
 3881 10ba 10000140 		.4byte	0x40010010
 3882 10be 1B       		.uleb128 0x1b
 3883 10bf 01       		.uleb128 0x1
 3884 10c0 51       		.byte	0x51
 3885 10c1 03       		.uleb128 0x3
 3886 10c2 0A       		.byte	0xa
 3887 10c3 000F     		.2byte	0xf00
 3888 10c5 1B       		.uleb128 0x1b
 3889 10c6 01       		.uleb128 0x1
 3890 10c7 52       		.byte	0x52
 3891 10c8 01       		.uleb128 0x1
 3892 10c9 30       		.byte	0x30
 3893 10ca 00       		.byte	0
 3894 10cb 16       		.uleb128 0x16
 3895 10cc 12000000 		.4byte	.LVL180
 3896 10d0 14140000 		.4byte	0x1414
 3897 10d4 00       		.byte	0
 3898 10d5 1C       		.uleb128 0x1c
 3899 10d6 AE0C0000 		.4byte	.LASF193
 3900 10da 01       		.byte	0x1
 3901 10db 2B04     		.2byte	0x42b
 3902 10dd 00000000 		.4byte	.LFB9
 3903 10e1 3C000000 		.4byte	.LFE9-.LFB9
 3904 10e5 01       		.uleb128 0x1
 3905 10e6 9C       		.byte	0x9c
 3906 10e7 0E110000 		.4byte	0x110e
 3907 10eb 19       		.uleb128 0x19
 3908 10ec 5B040000 		.4byte	.LASF188
 3909 10f0 01       		.byte	0x1
 3910 10f1 2B04     		.2byte	0x42b
 3911 10f3 44020000 		.4byte	0x244
 3912 10f7 37090000 		.4byte	.LLST65
 3913 10fb 16       		.uleb128 0x16
 3914 10fc 14000000 		.4byte	.LVL182
 3915 1100 92100000 		.4byte	0x1092
 3916 1104 16       		.uleb128 0x16
 3917 1105 1C000000 		.4byte	.LVL183
 3918 1109 20140000 		.4byte	0x1420
 3919 110d 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 132


 3920 110e 18       		.uleb128 0x18
 3921 110f C7080000 		.4byte	.LASF194
 3922 1113 01       		.byte	0x1
 3923 1114 C302     		.2byte	0x2c3
 3924 1116 BA000000 		.4byte	0xba
 3925 111a 00000000 		.4byte	.LFB6
 3926 111e 2C000000 		.4byte	.LFE6-.LFB6
 3927 1122 01       		.uleb128 0x1
 3928 1123 9C       		.byte	0x9c
 3929 1124 7D110000 		.4byte	0x117d
 3930 1128 1D       		.uleb128 0x1d
 3931 1129 490D0000 		.4byte	.LASF195
 3932 112d 01       		.byte	0x1
 3933 112e C502     		.2byte	0x2c5
 3934 1130 BA000000 		.4byte	0xba
 3935 1134 00       		.byte	0
 3936 1135 16       		.uleb128 0x16
 3937 1136 06000000 		.4byte	.LVL185
 3938 113a D2070000 		.4byte	0x7d2
 3939 113e 16       		.uleb128 0x16
 3940 113f 0A000000 		.4byte	.LVL186
 3941 1143 880F0000 		.4byte	0xf88
 3942 1147 1A       		.uleb128 0x1a
 3943 1148 10000000 		.4byte	.LVL187
 3944 114c 340A0000 		.4byte	0xa34
 3945 1150 5A110000 		.4byte	0x115a
 3946 1154 1B       		.uleb128 0x1b
 3947 1155 01       		.uleb128 0x1
 3948 1156 50       		.byte	0x50
 3949 1157 01       		.uleb128 0x1
 3950 1158 30       		.byte	0x30
 3951 1159 00       		.byte	0
 3952 115a 1A       		.uleb128 0x1a
 3953 115b 1E000000 		.4byte	.LVL188
 3954 115f D5100000 		.4byte	0x10d5
 3955 1163 6D110000 		.4byte	0x116d
 3956 1167 1B       		.uleb128 0x1b
 3957 1168 01       		.uleb128 0x1
 3958 1169 50       		.byte	0x50
 3959 116a 01       		.uleb128 0x1
 3960 116b 30       		.byte	0x30
 3961 116c 00       		.byte	0
 3962 116d 1E       		.uleb128 0x1e
 3963 116e 24000000 		.4byte	.LVL189
 3964 1172 D5100000 		.4byte	0x10d5
 3965 1176 1B       		.uleb128 0x1b
 3966 1177 01       		.uleb128 0x1
 3967 1178 50       		.byte	0x50
 3968 1179 01       		.uleb128 0x1
 3969 117a 31       		.byte	0x31
 3970 117b 00       		.byte	0
 3971 117c 00       		.byte	0
 3972 117d 1C       		.uleb128 0x1c
 3973 117e 2A050000 		.4byte	.LASF196
 3974 1182 01       		.byte	0x1
 3975 1183 CD0B     		.2byte	0xbcd
 3976 1185 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 133


 3977 1189 94000000 		.4byte	.LFE26-.LFB26
 3978 118d 01       		.uleb128 0x1
 3979 118e 9C       		.byte	0x9c
 3980 118f A5120000 		.4byte	0x12a5
 3981 1193 19       		.uleb128 0x19
 3982 1194 85040000 		.4byte	.LASF197
 3983 1198 01       		.byte	0x1
 3984 1199 CD0B     		.2byte	0xbcd
 3985 119b 99000000 		.4byte	0x99
 3986 119f 58090000 		.4byte	.LLST66
 3987 11a3 15       		.uleb128 0x15
 3988 11a4 C2090000 		.4byte	.LASF198
 3989 11a8 01       		.byte	0x1
 3990 11a9 D10B     		.2byte	0xbd1
 3991 11ab 99000000 		.4byte	0x99
 3992 11af 77090000 		.4byte	.LLST67
 3993 11b3 15       		.uleb128 0x15
 3994 11b4 BB090000 		.4byte	.LASF199
 3995 11b8 01       		.byte	0x1
 3996 11b9 D20B     		.2byte	0xbd2
 3997 11bb 99000000 		.4byte	0x99
 3998 11bf 95090000 		.4byte	.LLST68
 3999 11c3 15       		.uleb128 0x15
 4000 11c4 65010000 		.4byte	.LASF200
 4001 11c8 01       		.byte	0x1
 4002 11c9 D30B     		.2byte	0xbd3
 4003 11cb 99000000 		.4byte	0x99
 4004 11cf B3090000 		.4byte	.LLST69
 4005 11d3 1A       		.uleb128 0x1a
 4006 11d4 3C000000 		.4byte	.LVL197
 4007 11d8 29100000 		.4byte	0x1029
 4008 11dc F3110000 		.4byte	0x11f3
 4009 11e0 1B       		.uleb128 0x1b
 4010 11e1 01       		.uleb128 0x1
 4011 11e2 50       		.byte	0x50
 4012 11e3 02       		.uleb128 0x2
 4013 11e4 74       		.byte	0x74
 4014 11e5 00       		.sleb128 0
 4015 11e6 1B       		.uleb128 0x1b
 4016 11e7 01       		.uleb128 0x1
 4017 11e8 51       		.byte	0x51
 4018 11e9 03       		.uleb128 0x3
 4019 11ea 0A       		.byte	0xa
 4020 11eb 000F     		.2byte	0xf00
 4021 11ed 1B       		.uleb128 0x1b
 4022 11ee 01       		.uleb128 0x1
 4023 11ef 52       		.byte	0x52
 4024 11f0 01       		.uleb128 0x1
 4025 11f1 30       		.byte	0x30
 4026 11f2 00       		.byte	0
 4027 11f3 1A       		.uleb128 0x1a
 4028 11f4 46000000 		.4byte	.LVL198
 4029 11f8 29100000 		.4byte	0x1029
 4030 11fc 11120000 		.4byte	0x1211
 4031 1200 1B       		.uleb128 0x1b
 4032 1201 01       		.uleb128 0x1
 4033 1202 50       		.byte	0x50
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 134


 4034 1203 02       		.uleb128 0x2
 4035 1204 76       		.byte	0x76
 4036 1205 00       		.sleb128 0
 4037 1206 1B       		.uleb128 0x1b
 4038 1207 01       		.uleb128 0x1
 4039 1208 51       		.byte	0x51
 4040 1209 01       		.uleb128 0x1
 4041 120a 34       		.byte	0x34
 4042 120b 1B       		.uleb128 0x1b
 4043 120c 01       		.uleb128 0x1
 4044 120d 52       		.byte	0x52
 4045 120e 01       		.uleb128 0x1
 4046 120f 30       		.byte	0x30
 4047 1210 00       		.byte	0
 4048 1211 1A       		.uleb128 0x1a
 4049 1212 52000000 		.4byte	.LVL199
 4050 1216 29100000 		.4byte	0x1029
 4051 121a 32120000 		.4byte	0x1232
 4052 121e 1B       		.uleb128 0x1b
 4053 121f 01       		.uleb128 0x1
 4054 1220 50       		.byte	0x50
 4055 1221 02       		.uleb128 0x2
 4056 1222 75       		.byte	0x75
 4057 1223 00       		.sleb128 0
 4058 1224 1B       		.uleb128 0x1b
 4059 1225 01       		.uleb128 0x1
 4060 1226 51       		.byte	0x51
 4061 1227 02       		.uleb128 0x2
 4062 1228 77       		.byte	0x77
 4063 1229 00       		.sleb128 0
 4064 122a 1B       		.uleb128 0x1b
 4065 122b 01       		.uleb128 0x1
 4066 122c 52       		.byte	0x52
 4067 122d 03       		.uleb128 0x3
 4068 122e 0A       		.byte	0xa
 4069 122f 8001     		.2byte	0x180
 4070 1231 00       		.byte	0
 4071 1232 1A       		.uleb128 0x1a
 4072 1233 5A000000 		.4byte	.LVL200
 4073 1237 2C140000 		.4byte	0x142c
 4074 123b 48120000 		.4byte	0x1248
 4075 123f 1B       		.uleb128 0x1b
 4076 1240 01       		.uleb128 0x1
 4077 1241 50       		.byte	0x50
 4078 1242 04       		.uleb128 0x4
 4079 1243 7D       		.byte	0x7d
 4080 1244 04       		.sleb128 4
 4081 1245 94       		.byte	0x94
 4082 1246 02       		.byte	0x2
 4083 1247 00       		.byte	0
 4084 1248 1A       		.uleb128 0x1a
 4085 1249 64000000 		.4byte	.LVL201
 4086 124d 29100000 		.4byte	0x1029
 4087 1251 68120000 		.4byte	0x1268
 4088 1255 1B       		.uleb128 0x1b
 4089 1256 01       		.uleb128 0x1
 4090 1257 50       		.byte	0x50
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 135


 4091 1258 02       		.uleb128 0x2
 4092 1259 75       		.byte	0x75
 4093 125a 00       		.sleb128 0
 4094 125b 1B       		.uleb128 0x1b
 4095 125c 01       		.uleb128 0x1
 4096 125d 51       		.byte	0x51
 4097 125e 02       		.uleb128 0x2
 4098 125f 77       		.byte	0x77
 4099 1260 00       		.sleb128 0
 4100 1261 1B       		.uleb128 0x1b
 4101 1262 01       		.uleb128 0x1
 4102 1263 52       		.byte	0x52
 4103 1264 02       		.uleb128 0x2
 4104 1265 7B       		.byte	0x7b
 4105 1266 00       		.sleb128 0
 4106 1267 00       		.byte	0
 4107 1268 1A       		.uleb128 0x1a
 4108 1269 6E000000 		.4byte	.LVL202
 4109 126d 29100000 		.4byte	0x1029
 4110 1271 87120000 		.4byte	0x1287
 4111 1275 1B       		.uleb128 0x1b
 4112 1276 01       		.uleb128 0x1
 4113 1277 50       		.byte	0x50
 4114 1278 02       		.uleb128 0x2
 4115 1279 76       		.byte	0x76
 4116 127a 00       		.sleb128 0
 4117 127b 1B       		.uleb128 0x1b
 4118 127c 01       		.uleb128 0x1
 4119 127d 51       		.byte	0x51
 4120 127e 01       		.uleb128 0x1
 4121 127f 34       		.byte	0x34
 4122 1280 1B       		.uleb128 0x1b
 4123 1281 01       		.uleb128 0x1
 4124 1282 52       		.byte	0x52
 4125 1283 02       		.uleb128 0x2
 4126 1284 79       		.byte	0x79
 4127 1285 00       		.sleb128 0
 4128 1286 00       		.byte	0
 4129 1287 1E       		.uleb128 0x1e
 4130 1288 7A000000 		.4byte	.LVL203
 4131 128c 29100000 		.4byte	0x1029
 4132 1290 1B       		.uleb128 0x1b
 4133 1291 01       		.uleb128 0x1
 4134 1292 50       		.byte	0x50
 4135 1293 02       		.uleb128 0x2
 4136 1294 74       		.byte	0x74
 4137 1295 00       		.sleb128 0
 4138 1296 1B       		.uleb128 0x1b
 4139 1297 01       		.uleb128 0x1
 4140 1298 51       		.byte	0x51
 4141 1299 03       		.uleb128 0x3
 4142 129a 0A       		.byte	0xa
 4143 129b 000F     		.2byte	0xf00
 4144 129d 1B       		.uleb128 0x1b
 4145 129e 01       		.uleb128 0x1
 4146 129f 52       		.byte	0x52
 4147 12a0 02       		.uleb128 0x2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 136


 4148 12a1 78       		.byte	0x78
 4149 12a2 00       		.sleb128 0
 4150 12a3 00       		.byte	0
 4151 12a4 00       		.byte	0
 4152 12a5 23       		.uleb128 0x23
 4153 12a6 32070000 		.4byte	.LASF201
 4154 12aa 07       		.byte	0x7
 4155 12ab 5004     		.2byte	0x450
 4156 12ad BF050000 		.4byte	0x5bf
 4157 12b1 23       		.uleb128 0x23
 4158 12b2 080A0000 		.4byte	.LASF202
 4159 12b6 07       		.byte	0x7
 4160 12b7 5104     		.2byte	0x451
 4161 12b9 BD120000 		.4byte	0x12bd
 4162 12bd 1F       		.uleb128 0x1f
 4163 12be 36070000 		.4byte	0x736
 4164 12c2 0D       		.uleb128 0xd
 4165 12c3 2F0A0000 		.4byte	0xa2f
 4166 12c7 D2120000 		.4byte	0x12d2
 4167 12cb 0E       		.uleb128 0xe
 4168 12cc 04030000 		.4byte	0x304
 4169 12d0 00       		.byte	0
 4170 12d1 00       		.byte	0
 4171 12d2 23       		.uleb128 0x23
 4172 12d3 540D0000 		.4byte	.LASF203
 4173 12d7 07       		.byte	0x7
 4174 12d8 5204     		.2byte	0x452
 4175 12da DE120000 		.4byte	0x12de
 4176 12de 1F       		.uleb128 0x1f
 4177 12df C2120000 		.4byte	0x12c2
 4178 12e3 24       		.uleb128 0x24
 4179 12e4 73000000 		.4byte	.LASF204
 4180 12e8 01       		.byte	0x1
 4181 12e9 BC       		.byte	0xbc
 4182 12ea D2000000 		.4byte	0xd2
 4183 12ee 05       		.uleb128 0x5
 4184 12ef 03       		.byte	0x3
 4185 12f0 00000000 		.4byte	CapSense_widgetIndex
 4186 12f4 24       		.uleb128 0x24
 4187 12f5 E3020000 		.4byte	.LASF205
 4188 12f9 01       		.byte	0x1
 4189 12fa BD       		.byte	0xbd
 4190 12fb D2000000 		.4byte	0xd2
 4191 12ff 05       		.uleb128 0x5
 4192 1300 03       		.byte	0x3
 4193 1301 00000000 		.4byte	CapSense_sensorIndex
 4194 1305 24       		.uleb128 0x24
 4195 1306 450E0000 		.4byte	.LASF206
 4196 130a 01       		.byte	0x1
 4197 130b BE       		.byte	0xbe
 4198 130c 81000000 		.4byte	0x81
 4199 1310 05       		.uleb128 0x5
 4200 1311 03       		.byte	0x3
 4201 1312 00000000 		.4byte	CapSense_requestScanAllWidget
 4202 1316 24       		.uleb128 0x24
 4203 1317 E20C0000 		.4byte	.LASF207
 4204 131b 01       		.byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 137


 4205 131c C1       		.byte	0xc1
 4206 131d F1060000 		.4byte	0x6f1
 4207 1321 05       		.uleb128 0x5
 4208 1322 03       		.byte	0x3
 4209 1323 00000000 		.4byte	CapSense_curRamSnsPtr
 4210 1327 24       		.uleb128 0x24
 4211 1328 B90A0000 		.4byte	.LASF208
 4212 132c 01       		.byte	0x1
 4213 132d AF       		.byte	0xaf
 4214 132e 44020000 		.4byte	0x244
 4215 1332 05       		.uleb128 0x5
 4216 1333 03       		.byte	0x3
 4217 1334 00000000 		.4byte	CapSense_currentSenseMethod
 4218 1338 24       		.uleb128 0x24
 4219 1339 040D0000 		.4byte	.LASF209
 4220 133d 01       		.byte	0x1
 4221 133e B8       		.byte	0xb8
 4222 133f 49130000 		.4byte	0x1349
 4223 1343 05       		.uleb128 0x5
 4224 1344 03       		.byte	0x3
 4225 1345 00000000 		.4byte	CapSense_scanFreqIndex
 4226 1349 1F       		.uleb128 0x1f
 4227 134a 81000000 		.4byte	0x81
 4228 134e 24       		.uleb128 0x24
 4229 134f DD070000 		.4byte	.LASF210
 4230 1353 01       		.byte	0x1
 4231 1354 D0       		.byte	0xd0
 4232 1355 290A0000 		.4byte	0xa29
 4233 1359 05       		.uleb128 0x5
 4234 135a 03       		.byte	0x3
 4235 135b 00000000 		.4byte	CapSense_curSnsIOPtr
 4236 135f 0D       		.uleb128 0xd
 4237 1360 6F130000 		.4byte	0x136f
 4238 1364 6F130000 		.4byte	0x136f
 4239 1368 0E       		.uleb128 0xe
 4240 1369 04030000 		.4byte	0x304
 4241 136d 01       		.byte	0x1
 4242 136e 00       		.byte	0
 4243 136f 1F       		.uleb128 0x1f
 4244 1370 A0070000 		.4byte	0x7a0
 4245 1374 24       		.uleb128 0x24
 4246 1375 870E0000 		.4byte	.LASF211
 4247 1379 01       		.byte	0x1
 4248 137a D2       		.byte	0xd2
 4249 137b 85130000 		.4byte	0x1385
 4250 137f 05       		.uleb128 0x5
 4251 1380 03       		.byte	0x3
 4252 1381 00000000 		.4byte	CapSense_idacGainTable
 4253 1385 1F       		.uleb128 0x1f
 4254 1386 5F130000 		.4byte	0x135f
 4255 138a 25       		.uleb128 0x25
 4256 138b A3020000 		.4byte	.LASF212
 4257 138f A3020000 		.4byte	.LASF212
 4258 1393 09       		.byte	0x9
 4259 1394 8801     		.2byte	0x188
 4260 1396 25       		.uleb128 0x25
 4261 1397 470C0000 		.4byte	.LASF213
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 138


 4262 139b 470C0000 		.4byte	.LASF213
 4263 139f 09       		.byte	0x9
 4264 13a0 8A01     		.2byte	0x18a
 4265 13a2 25       		.uleb128 0x25
 4266 13a3 42030000 		.4byte	.LASF214
 4267 13a7 42030000 		.4byte	.LASF214
 4268 13ab 09       		.byte	0x9
 4269 13ac 8901     		.2byte	0x189
 4270 13ae 25       		.uleb128 0x25
 4271 13af 230A0000 		.4byte	.LASF215
 4272 13b3 230A0000 		.4byte	.LASF215
 4273 13b7 09       		.byte	0x9
 4274 13b8 8B01     		.2byte	0x18b
 4275 13ba 26       		.uleb128 0x26
 4276 13bb CB0C0000 		.4byte	.LASF216
 4277 13bf CB0C0000 		.4byte	.LASF216
 4278 13c3 0A       		.byte	0xa
 4279 13c4 F8       		.byte	0xf8
 4280 13c5 26       		.uleb128 0x26
 4281 13c6 0C050000 		.4byte	.LASF217
 4282 13ca 0C050000 		.4byte	.LASF217
 4283 13ce 0A       		.byte	0xa
 4284 13cf F9       		.byte	0xf9
 4285 13d0 25       		.uleb128 0x25
 4286 13d1 860A0000 		.4byte	.LASF218
 4287 13d5 860A0000 		.4byte	.LASF218
 4288 13d9 09       		.byte	0x9
 4289 13da 9101     		.2byte	0x191
 4290 13dc 26       		.uleb128 0x26
 4291 13dd 140B0000 		.4byte	.LASF219
 4292 13e1 140B0000 		.4byte	.LASF219
 4293 13e5 0B       		.byte	0xb
 4294 13e6 18       		.byte	0x18
 4295 13e7 25       		.uleb128 0x25
 4296 13e8 D4090000 		.4byte	.LASF220
 4297 13ec D4090000 		.4byte	.LASF220
 4298 13f0 09       		.byte	0x9
 4299 13f1 8E01     		.2byte	0x18e
 4300 13f3 26       		.uleb128 0x26
 4301 13f4 420A0000 		.4byte	.LASF221
 4302 13f8 420A0000 		.4byte	.LASF221
 4303 13fc 06       		.byte	0x6
 4304 13fd B7       		.byte	0xb7
 4305 13fe 26       		.uleb128 0x26
 4306 13ff 8E010000 		.4byte	.LASF222
 4307 1403 8E010000 		.4byte	.LASF222
 4308 1407 06       		.byte	0x6
 4309 1408 B8       		.byte	0xb8
 4310 1409 26       		.uleb128 0x26
 4311 140a 2F010000 		.4byte	.LASF223
 4312 140e 2F010000 		.4byte	.LASF223
 4313 1412 0A       		.byte	0xa
 4314 1413 FA       		.byte	0xfa
 4315 1414 25       		.uleb128 0x25
 4316 1415 F4080000 		.4byte	.LASF224
 4317 1419 F4080000 		.4byte	.LASF224
 4318 141d 09       		.byte	0x9
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 139


 4319 141e A501     		.2byte	0x1a5
 4320 1420 25       		.uleb128 0x25
 4321 1421 8D060000 		.4byte	.LASF225
 4322 1425 8D060000 		.4byte	.LASF225
 4323 1429 09       		.byte	0x9
 4324 142a A101     		.2byte	0x1a1
 4325 142c 26       		.uleb128 0x26
 4326 142d 30080000 		.4byte	.LASF226
 4327 1431 30080000 		.4byte	.LASF226
 4328 1435 0A       		.byte	0xa
 4329 1436 ED       		.byte	0xed
 4330 1437 00       		.byte	0
 4331              		.section	.debug_abbrev,"",%progbits
 4332              	.Ldebug_abbrev0:
 4333 0000 01       		.uleb128 0x1
 4334 0001 11       		.uleb128 0x11
 4335 0002 01       		.byte	0x1
 4336 0003 25       		.uleb128 0x25
 4337 0004 0E       		.uleb128 0xe
 4338 0005 13       		.uleb128 0x13
 4339 0006 0B       		.uleb128 0xb
 4340 0007 03       		.uleb128 0x3
 4341 0008 0E       		.uleb128 0xe
 4342 0009 1B       		.uleb128 0x1b
 4343 000a 0E       		.uleb128 0xe
 4344 000b 55       		.uleb128 0x55
 4345 000c 17       		.uleb128 0x17
 4346 000d 11       		.uleb128 0x11
 4347 000e 01       		.uleb128 0x1
 4348 000f 10       		.uleb128 0x10
 4349 0010 17       		.uleb128 0x17
 4350 0011 00       		.byte	0
 4351 0012 00       		.byte	0
 4352 0013 02       		.uleb128 0x2
 4353 0014 24       		.uleb128 0x24
 4354 0015 00       		.byte	0
 4355 0016 0B       		.uleb128 0xb
 4356 0017 0B       		.uleb128 0xb
 4357 0018 3E       		.uleb128 0x3e
 4358 0019 0B       		.uleb128 0xb
 4359 001a 03       		.uleb128 0x3
 4360 001b 0E       		.uleb128 0xe
 4361 001c 00       		.byte	0
 4362 001d 00       		.byte	0
 4363 001e 03       		.uleb128 0x3
 4364 001f 16       		.uleb128 0x16
 4365 0020 00       		.byte	0
 4366 0021 03       		.uleb128 0x3
 4367 0022 0E       		.uleb128 0xe
 4368 0023 3A       		.uleb128 0x3a
 4369 0024 0B       		.uleb128 0xb
 4370 0025 3B       		.uleb128 0x3b
 4371 0026 0B       		.uleb128 0xb
 4372 0027 49       		.uleb128 0x49
 4373 0028 13       		.uleb128 0x13
 4374 0029 00       		.byte	0
 4375 002a 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 140


 4376 002b 04       		.uleb128 0x4
 4377 002c 24       		.uleb128 0x24
 4378 002d 00       		.byte	0
 4379 002e 0B       		.uleb128 0xb
 4380 002f 0B       		.uleb128 0xb
 4381 0030 3E       		.uleb128 0x3e
 4382 0031 0B       		.uleb128 0xb
 4383 0032 03       		.uleb128 0x3
 4384 0033 08       		.uleb128 0x8
 4385 0034 00       		.byte	0
 4386 0035 00       		.byte	0
 4387 0036 05       		.uleb128 0x5
 4388 0037 16       		.uleb128 0x16
 4389 0038 00       		.byte	0
 4390 0039 03       		.uleb128 0x3
 4391 003a 0E       		.uleb128 0xe
 4392 003b 3A       		.uleb128 0x3a
 4393 003c 0B       		.uleb128 0xb
 4394 003d 3B       		.uleb128 0x3b
 4395 003e 05       		.uleb128 0x5
 4396 003f 49       		.uleb128 0x49
 4397 0040 13       		.uleb128 0x13
 4398 0041 00       		.byte	0
 4399 0042 00       		.byte	0
 4400 0043 06       		.uleb128 0x6
 4401 0044 35       		.uleb128 0x35
 4402 0045 00       		.byte	0
 4403 0046 49       		.uleb128 0x49
 4404 0047 13       		.uleb128 0x13
 4405 0048 00       		.byte	0
 4406 0049 00       		.byte	0
 4407 004a 07       		.uleb128 0x7
 4408 004b 0F       		.uleb128 0xf
 4409 004c 00       		.byte	0
 4410 004d 0B       		.uleb128 0xb
 4411 004e 0B       		.uleb128 0xb
 4412 004f 49       		.uleb128 0x49
 4413 0050 13       		.uleb128 0x13
 4414 0051 00       		.byte	0
 4415 0052 00       		.byte	0
 4416 0053 08       		.uleb128 0x8
 4417 0054 15       		.uleb128 0x15
 4418 0055 00       		.byte	0
 4419 0056 27       		.uleb128 0x27
 4420 0057 19       		.uleb128 0x19
 4421 0058 00       		.byte	0
 4422 0059 00       		.byte	0
 4423 005a 09       		.uleb128 0x9
 4424 005b 13       		.uleb128 0x13
 4425 005c 01       		.byte	0x1
 4426 005d 0B       		.uleb128 0xb
 4427 005e 0B       		.uleb128 0xb
 4428 005f 3A       		.uleb128 0x3a
 4429 0060 0B       		.uleb128 0xb
 4430 0061 3B       		.uleb128 0x3b
 4431 0062 0B       		.uleb128 0xb
 4432 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 141


 4433 0064 13       		.uleb128 0x13
 4434 0065 00       		.byte	0
 4435 0066 00       		.byte	0
 4436 0067 0A       		.uleb128 0xa
 4437 0068 0D       		.uleb128 0xd
 4438 0069 00       		.byte	0
 4439 006a 03       		.uleb128 0x3
 4440 006b 0E       		.uleb128 0xe
 4441 006c 3A       		.uleb128 0x3a
 4442 006d 0B       		.uleb128 0xb
 4443 006e 3B       		.uleb128 0x3b
 4444 006f 0B       		.uleb128 0xb
 4445 0070 49       		.uleb128 0x49
 4446 0071 13       		.uleb128 0x13
 4447 0072 38       		.uleb128 0x38
 4448 0073 0B       		.uleb128 0xb
 4449 0074 00       		.byte	0
 4450 0075 00       		.byte	0
 4451 0076 0B       		.uleb128 0xb
 4452 0077 04       		.uleb128 0x4
 4453 0078 01       		.byte	0x1
 4454 0079 0B       		.uleb128 0xb
 4455 007a 0B       		.uleb128 0xb
 4456 007b 49       		.uleb128 0x49
 4457 007c 13       		.uleb128 0x13
 4458 007d 3A       		.uleb128 0x3a
 4459 007e 0B       		.uleb128 0xb
 4460 007f 3B       		.uleb128 0x3b
 4461 0080 0B       		.uleb128 0xb
 4462 0081 01       		.uleb128 0x1
 4463 0082 13       		.uleb128 0x13
 4464 0083 00       		.byte	0
 4465 0084 00       		.byte	0
 4466 0085 0C       		.uleb128 0xc
 4467 0086 28       		.uleb128 0x28
 4468 0087 00       		.byte	0
 4469 0088 03       		.uleb128 0x3
 4470 0089 0E       		.uleb128 0xe
 4471 008a 1C       		.uleb128 0x1c
 4472 008b 0B       		.uleb128 0xb
 4473 008c 00       		.byte	0
 4474 008d 00       		.byte	0
 4475 008e 0D       		.uleb128 0xd
 4476 008f 01       		.uleb128 0x1
 4477 0090 01       		.byte	0x1
 4478 0091 49       		.uleb128 0x49
 4479 0092 13       		.uleb128 0x13
 4480 0093 01       		.uleb128 0x1
 4481 0094 13       		.uleb128 0x13
 4482 0095 00       		.byte	0
 4483 0096 00       		.byte	0
 4484 0097 0E       		.uleb128 0xe
 4485 0098 21       		.uleb128 0x21
 4486 0099 00       		.byte	0
 4487 009a 49       		.uleb128 0x49
 4488 009b 13       		.uleb128 0x13
 4489 009c 2F       		.uleb128 0x2f
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 142


 4490 009d 0B       		.uleb128 0xb
 4491 009e 00       		.byte	0
 4492 009f 00       		.byte	0
 4493 00a0 0F       		.uleb128 0xf
 4494 00a1 0D       		.uleb128 0xd
 4495 00a2 00       		.byte	0
 4496 00a3 03       		.uleb128 0x3
 4497 00a4 0E       		.uleb128 0xe
 4498 00a5 3A       		.uleb128 0x3a
 4499 00a6 0B       		.uleb128 0xb
 4500 00a7 3B       		.uleb128 0x3b
 4501 00a8 05       		.uleb128 0x5
 4502 00a9 49       		.uleb128 0x49
 4503 00aa 13       		.uleb128 0x13
 4504 00ab 38       		.uleb128 0x38
 4505 00ac 0B       		.uleb128 0xb
 4506 00ad 00       		.byte	0
 4507 00ae 00       		.byte	0
 4508 00af 10       		.uleb128 0x10
 4509 00b0 13       		.uleb128 0x13
 4510 00b1 01       		.byte	0x1
 4511 00b2 0B       		.uleb128 0xb
 4512 00b3 0B       		.uleb128 0xb
 4513 00b4 3A       		.uleb128 0x3a
 4514 00b5 0B       		.uleb128 0xb
 4515 00b6 3B       		.uleb128 0x3b
 4516 00b7 05       		.uleb128 0x5
 4517 00b8 01       		.uleb128 0x1
 4518 00b9 13       		.uleb128 0x13
 4519 00ba 00       		.byte	0
 4520 00bb 00       		.byte	0
 4521 00bc 11       		.uleb128 0x11
 4522 00bd 0D       		.uleb128 0xd
 4523 00be 00       		.byte	0
 4524 00bf 03       		.uleb128 0x3
 4525 00c0 08       		.uleb128 0x8
 4526 00c1 3A       		.uleb128 0x3a
 4527 00c2 0B       		.uleb128 0xb
 4528 00c3 3B       		.uleb128 0x3b
 4529 00c4 05       		.uleb128 0x5
 4530 00c5 49       		.uleb128 0x49
 4531 00c6 13       		.uleb128 0x13
 4532 00c7 38       		.uleb128 0x38
 4533 00c8 0B       		.uleb128 0xb
 4534 00c9 00       		.byte	0
 4535 00ca 00       		.byte	0
 4536 00cb 12       		.uleb128 0x12
 4537 00cc 26       		.uleb128 0x26
 4538 00cd 00       		.byte	0
 4539 00ce 00       		.byte	0
 4540 00cf 00       		.byte	0
 4541 00d0 13       		.uleb128 0x13
 4542 00d1 0F       		.uleb128 0xf
 4543 00d2 00       		.byte	0
 4544 00d3 0B       		.uleb128 0xb
 4545 00d4 0B       		.uleb128 0xb
 4546 00d5 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 143


 4547 00d6 00       		.byte	0
 4548 00d7 14       		.uleb128 0x14
 4549 00d8 2E       		.uleb128 0x2e
 4550 00d9 01       		.byte	0x1
 4551 00da 03       		.uleb128 0x3
 4552 00db 0E       		.uleb128 0xe
 4553 00dc 3A       		.uleb128 0x3a
 4554 00dd 0B       		.uleb128 0xb
 4555 00de 3B       		.uleb128 0x3b
 4556 00df 05       		.uleb128 0x5
 4557 00e0 27       		.uleb128 0x27
 4558 00e1 19       		.uleb128 0x19
 4559 00e2 11       		.uleb128 0x11
 4560 00e3 01       		.uleb128 0x1
 4561 00e4 12       		.uleb128 0x12
 4562 00e5 06       		.uleb128 0x6
 4563 00e6 40       		.uleb128 0x40
 4564 00e7 18       		.uleb128 0x18
 4565 00e8 9742     		.uleb128 0x2117
 4566 00ea 19       		.uleb128 0x19
 4567 00eb 01       		.uleb128 0x1
 4568 00ec 13       		.uleb128 0x13
 4569 00ed 00       		.byte	0
 4570 00ee 00       		.byte	0
 4571 00ef 15       		.uleb128 0x15
 4572 00f0 34       		.uleb128 0x34
 4573 00f1 00       		.byte	0
 4574 00f2 03       		.uleb128 0x3
 4575 00f3 0E       		.uleb128 0xe
 4576 00f4 3A       		.uleb128 0x3a
 4577 00f5 0B       		.uleb128 0xb
 4578 00f6 3B       		.uleb128 0x3b
 4579 00f7 05       		.uleb128 0x5
 4580 00f8 49       		.uleb128 0x49
 4581 00f9 13       		.uleb128 0x13
 4582 00fa 02       		.uleb128 0x2
 4583 00fb 17       		.uleb128 0x17
 4584 00fc 00       		.byte	0
 4585 00fd 00       		.byte	0
 4586 00fe 16       		.uleb128 0x16
 4587 00ff 898201   		.uleb128 0x4109
 4588 0102 00       		.byte	0
 4589 0103 11       		.uleb128 0x11
 4590 0104 01       		.uleb128 0x1
 4591 0105 31       		.uleb128 0x31
 4592 0106 13       		.uleb128 0x13
 4593 0107 00       		.byte	0
 4594 0108 00       		.byte	0
 4595 0109 17       		.uleb128 0x17
 4596 010a 2E       		.uleb128 0x2e
 4597 010b 00       		.byte	0
 4598 010c 3F       		.uleb128 0x3f
 4599 010d 19       		.uleb128 0x19
 4600 010e 03       		.uleb128 0x3
 4601 010f 0E       		.uleb128 0xe
 4602 0110 3A       		.uleb128 0x3a
 4603 0111 0B       		.uleb128 0xb
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 144


 4604 0112 3B       		.uleb128 0x3b
 4605 0113 0B       		.uleb128 0xb
 4606 0114 27       		.uleb128 0x27
 4607 0115 19       		.uleb128 0x19
 4608 0116 49       		.uleb128 0x49
 4609 0117 13       		.uleb128 0x13
 4610 0118 11       		.uleb128 0x11
 4611 0119 01       		.uleb128 0x1
 4612 011a 12       		.uleb128 0x12
 4613 011b 06       		.uleb128 0x6
 4614 011c 40       		.uleb128 0x40
 4615 011d 18       		.uleb128 0x18
 4616 011e 9742     		.uleb128 0x2117
 4617 0120 19       		.uleb128 0x19
 4618 0121 00       		.byte	0
 4619 0122 00       		.byte	0
 4620 0123 18       		.uleb128 0x18
 4621 0124 2E       		.uleb128 0x2e
 4622 0125 01       		.byte	0x1
 4623 0126 3F       		.uleb128 0x3f
 4624 0127 19       		.uleb128 0x19
 4625 0128 03       		.uleb128 0x3
 4626 0129 0E       		.uleb128 0xe
 4627 012a 3A       		.uleb128 0x3a
 4628 012b 0B       		.uleb128 0xb
 4629 012c 3B       		.uleb128 0x3b
 4630 012d 05       		.uleb128 0x5
 4631 012e 27       		.uleb128 0x27
 4632 012f 19       		.uleb128 0x19
 4633 0130 49       		.uleb128 0x49
 4634 0131 13       		.uleb128 0x13
 4635 0132 11       		.uleb128 0x11
 4636 0133 01       		.uleb128 0x1
 4637 0134 12       		.uleb128 0x12
 4638 0135 06       		.uleb128 0x6
 4639 0136 40       		.uleb128 0x40
 4640 0137 18       		.uleb128 0x18
 4641 0138 9742     		.uleb128 0x2117
 4642 013a 19       		.uleb128 0x19
 4643 013b 01       		.uleb128 0x1
 4644 013c 13       		.uleb128 0x13
 4645 013d 00       		.byte	0
 4646 013e 00       		.byte	0
 4647 013f 19       		.uleb128 0x19
 4648 0140 05       		.uleb128 0x5
 4649 0141 00       		.byte	0
 4650 0142 03       		.uleb128 0x3
 4651 0143 0E       		.uleb128 0xe
 4652 0144 3A       		.uleb128 0x3a
 4653 0145 0B       		.uleb128 0xb
 4654 0146 3B       		.uleb128 0x3b
 4655 0147 05       		.uleb128 0x5
 4656 0148 49       		.uleb128 0x49
 4657 0149 13       		.uleb128 0x13
 4658 014a 02       		.uleb128 0x2
 4659 014b 17       		.uleb128 0x17
 4660 014c 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 145


 4661 014d 00       		.byte	0
 4662 014e 1A       		.uleb128 0x1a
 4663 014f 898201   		.uleb128 0x4109
 4664 0152 01       		.byte	0x1
 4665 0153 11       		.uleb128 0x11
 4666 0154 01       		.uleb128 0x1
 4667 0155 31       		.uleb128 0x31
 4668 0156 13       		.uleb128 0x13
 4669 0157 01       		.uleb128 0x1
 4670 0158 13       		.uleb128 0x13
 4671 0159 00       		.byte	0
 4672 015a 00       		.byte	0
 4673 015b 1B       		.uleb128 0x1b
 4674 015c 8A8201   		.uleb128 0x410a
 4675 015f 00       		.byte	0
 4676 0160 02       		.uleb128 0x2
 4677 0161 18       		.uleb128 0x18
 4678 0162 9142     		.uleb128 0x2111
 4679 0164 18       		.uleb128 0x18
 4680 0165 00       		.byte	0
 4681 0166 00       		.byte	0
 4682 0167 1C       		.uleb128 0x1c
 4683 0168 2E       		.uleb128 0x2e
 4684 0169 01       		.byte	0x1
 4685 016a 3F       		.uleb128 0x3f
 4686 016b 19       		.uleb128 0x19
 4687 016c 03       		.uleb128 0x3
 4688 016d 0E       		.uleb128 0xe
 4689 016e 3A       		.uleb128 0x3a
 4690 016f 0B       		.uleb128 0xb
 4691 0170 3B       		.uleb128 0x3b
 4692 0171 05       		.uleb128 0x5
 4693 0172 27       		.uleb128 0x27
 4694 0173 19       		.uleb128 0x19
 4695 0174 11       		.uleb128 0x11
 4696 0175 01       		.uleb128 0x1
 4697 0176 12       		.uleb128 0x12
 4698 0177 06       		.uleb128 0x6
 4699 0178 40       		.uleb128 0x40
 4700 0179 18       		.uleb128 0x18
 4701 017a 9742     		.uleb128 0x2117
 4702 017c 19       		.uleb128 0x19
 4703 017d 01       		.uleb128 0x1
 4704 017e 13       		.uleb128 0x13
 4705 017f 00       		.byte	0
 4706 0180 00       		.byte	0
 4707 0181 1D       		.uleb128 0x1d
 4708 0182 34       		.uleb128 0x34
 4709 0183 00       		.byte	0
 4710 0184 03       		.uleb128 0x3
 4711 0185 0E       		.uleb128 0xe
 4712 0186 3A       		.uleb128 0x3a
 4713 0187 0B       		.uleb128 0xb
 4714 0188 3B       		.uleb128 0x3b
 4715 0189 05       		.uleb128 0x5
 4716 018a 49       		.uleb128 0x49
 4717 018b 13       		.uleb128 0x13
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 146


 4718 018c 1C       		.uleb128 0x1c
 4719 018d 0B       		.uleb128 0xb
 4720 018e 00       		.byte	0
 4721 018f 00       		.byte	0
 4722 0190 1E       		.uleb128 0x1e
 4723 0191 898201   		.uleb128 0x4109
 4724 0194 01       		.byte	0x1
 4725 0195 11       		.uleb128 0x11
 4726 0196 01       		.uleb128 0x1
 4727 0197 31       		.uleb128 0x31
 4728 0198 13       		.uleb128 0x13
 4729 0199 00       		.byte	0
 4730 019a 00       		.byte	0
 4731 019b 1F       		.uleb128 0x1f
 4732 019c 26       		.uleb128 0x26
 4733 019d 00       		.byte	0
 4734 019e 49       		.uleb128 0x49
 4735 019f 13       		.uleb128 0x13
 4736 01a0 00       		.byte	0
 4737 01a1 00       		.byte	0
 4738 01a2 20       		.uleb128 0x20
 4739 01a3 2E       		.uleb128 0x2e
 4740 01a4 00       		.byte	0
 4741 01a5 3F       		.uleb128 0x3f
 4742 01a6 19       		.uleb128 0x19
 4743 01a7 03       		.uleb128 0x3
 4744 01a8 0E       		.uleb128 0xe
 4745 01a9 3A       		.uleb128 0x3a
 4746 01aa 0B       		.uleb128 0xb
 4747 01ab 3B       		.uleb128 0x3b
 4748 01ac 05       		.uleb128 0x5
 4749 01ad 27       		.uleb128 0x27
 4750 01ae 19       		.uleb128 0x19
 4751 01af 11       		.uleb128 0x11
 4752 01b0 01       		.uleb128 0x1
 4753 01b1 12       		.uleb128 0x12
 4754 01b2 06       		.uleb128 0x6
 4755 01b3 40       		.uleb128 0x40
 4756 01b4 18       		.uleb128 0x18
 4757 01b5 9742     		.uleb128 0x2117
 4758 01b7 19       		.uleb128 0x19
 4759 01b8 00       		.byte	0
 4760 01b9 00       		.byte	0
 4761 01ba 21       		.uleb128 0x21
 4762 01bb 34       		.uleb128 0x34
 4763 01bc 00       		.byte	0
 4764 01bd 03       		.uleb128 0x3
 4765 01be 0E       		.uleb128 0xe
 4766 01bf 3A       		.uleb128 0x3a
 4767 01c0 0B       		.uleb128 0xb
 4768 01c1 3B       		.uleb128 0x3b
 4769 01c2 05       		.uleb128 0x5
 4770 01c3 49       		.uleb128 0x49
 4771 01c4 13       		.uleb128 0x13
 4772 01c5 02       		.uleb128 0x2
 4773 01c6 18       		.uleb128 0x18
 4774 01c7 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 147


 4775 01c8 00       		.byte	0
 4776 01c9 22       		.uleb128 0x22
 4777 01ca 2E       		.uleb128 0x2e
 4778 01cb 01       		.byte	0x1
 4779 01cc 3F       		.uleb128 0x3f
 4780 01cd 19       		.uleb128 0x19
 4781 01ce 03       		.uleb128 0x3
 4782 01cf 0E       		.uleb128 0xe
 4783 01d0 3A       		.uleb128 0x3a
 4784 01d1 0B       		.uleb128 0xb
 4785 01d2 3B       		.uleb128 0x3b
 4786 01d3 05       		.uleb128 0x5
 4787 01d4 27       		.uleb128 0x27
 4788 01d5 19       		.uleb128 0x19
 4789 01d6 49       		.uleb128 0x49
 4790 01d7 13       		.uleb128 0x13
 4791 01d8 11       		.uleb128 0x11
 4792 01d9 01       		.uleb128 0x1
 4793 01da 12       		.uleb128 0x12
 4794 01db 06       		.uleb128 0x6
 4795 01dc 40       		.uleb128 0x40
 4796 01dd 18       		.uleb128 0x18
 4797 01de 9642     		.uleb128 0x2116
 4798 01e0 19       		.uleb128 0x19
 4799 01e1 01       		.uleb128 0x1
 4800 01e2 13       		.uleb128 0x13
 4801 01e3 00       		.byte	0
 4802 01e4 00       		.byte	0
 4803 01e5 23       		.uleb128 0x23
 4804 01e6 34       		.uleb128 0x34
 4805 01e7 00       		.byte	0
 4806 01e8 03       		.uleb128 0x3
 4807 01e9 0E       		.uleb128 0xe
 4808 01ea 3A       		.uleb128 0x3a
 4809 01eb 0B       		.uleb128 0xb
 4810 01ec 3B       		.uleb128 0x3b
 4811 01ed 05       		.uleb128 0x5
 4812 01ee 49       		.uleb128 0x49
 4813 01ef 13       		.uleb128 0x13
 4814 01f0 3F       		.uleb128 0x3f
 4815 01f1 19       		.uleb128 0x19
 4816 01f2 3C       		.uleb128 0x3c
 4817 01f3 19       		.uleb128 0x19
 4818 01f4 00       		.byte	0
 4819 01f5 00       		.byte	0
 4820 01f6 24       		.uleb128 0x24
 4821 01f7 34       		.uleb128 0x34
 4822 01f8 00       		.byte	0
 4823 01f9 03       		.uleb128 0x3
 4824 01fa 0E       		.uleb128 0xe
 4825 01fb 3A       		.uleb128 0x3a
 4826 01fc 0B       		.uleb128 0xb
 4827 01fd 3B       		.uleb128 0x3b
 4828 01fe 0B       		.uleb128 0xb
 4829 01ff 49       		.uleb128 0x49
 4830 0200 13       		.uleb128 0x13
 4831 0201 3F       		.uleb128 0x3f
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 148


 4832 0202 19       		.uleb128 0x19
 4833 0203 02       		.uleb128 0x2
 4834 0204 18       		.uleb128 0x18
 4835 0205 00       		.byte	0
 4836 0206 00       		.byte	0
 4837 0207 25       		.uleb128 0x25
 4838 0208 2E       		.uleb128 0x2e
 4839 0209 00       		.byte	0
 4840 020a 3F       		.uleb128 0x3f
 4841 020b 19       		.uleb128 0x19
 4842 020c 3C       		.uleb128 0x3c
 4843 020d 19       		.uleb128 0x19
 4844 020e 6E       		.uleb128 0x6e
 4845 020f 0E       		.uleb128 0xe
 4846 0210 03       		.uleb128 0x3
 4847 0211 0E       		.uleb128 0xe
 4848 0212 3A       		.uleb128 0x3a
 4849 0213 0B       		.uleb128 0xb
 4850 0214 3B       		.uleb128 0x3b
 4851 0215 05       		.uleb128 0x5
 4852 0216 00       		.byte	0
 4853 0217 00       		.byte	0
 4854 0218 26       		.uleb128 0x26
 4855 0219 2E       		.uleb128 0x2e
 4856 021a 00       		.byte	0
 4857 021b 3F       		.uleb128 0x3f
 4858 021c 19       		.uleb128 0x19
 4859 021d 3C       		.uleb128 0x3c
 4860 021e 19       		.uleb128 0x19
 4861 021f 6E       		.uleb128 0x6e
 4862 0220 0E       		.uleb128 0xe
 4863 0221 03       		.uleb128 0x3
 4864 0222 0E       		.uleb128 0xe
 4865 0223 3A       		.uleb128 0x3a
 4866 0224 0B       		.uleb128 0xb
 4867 0225 3B       		.uleb128 0x3b
 4868 0226 0B       		.uleb128 0xb
 4869 0227 00       		.byte	0
 4870 0228 00       		.byte	0
 4871 0229 00       		.byte	0
 4872              		.section	.debug_loc,"",%progbits
 4873              	.Ldebug_loc0:
 4874              	.LLST0:
 4875 0000 0C000000 		.4byte	.LVL0
 4876 0004 16000000 		.4byte	.LVL1
 4877 0008 0100     		.2byte	0x1
 4878 000a 51       		.byte	0x51
 4879 000b 16000000 		.4byte	.LVL1
 4880 000f 2C000000 		.4byte	.LFE20
 4881 0013 0100     		.2byte	0x1
 4882 0015 53       		.byte	0x53
 4883 0016 00000000 		.4byte	0
 4884 001a 00000000 		.4byte	0
 4885              	.LLST1:
 4886 001e 00000000 		.4byte	.LVL5
 4887 0022 37000000 		.4byte	.LVL7-1
 4888 0026 0100     		.2byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 149


 4889 0028 50       		.byte	0x50
 4890 0029 37000000 		.4byte	.LVL7-1
 4891 002d 40000000 		.4byte	.LFE1
 4892 0031 0400     		.2byte	0x4
 4893 0033 F3       		.byte	0xf3
 4894 0034 01       		.uleb128 0x1
 4895 0035 50       		.byte	0x50
 4896 0036 9F       		.byte	0x9f
 4897 0037 00000000 		.4byte	0
 4898 003b 00000000 		.4byte	0
 4899              	.LLST2:
 4900 003f 30000000 		.4byte	.LVL6
 4901 0043 3A000000 		.4byte	.LVL8
 4902 0047 0100     		.2byte	0x1
 4903 0049 54       		.byte	0x54
 4904 004a 3A000000 		.4byte	.LVL8
 4905 004e 40000000 		.4byte	.LFE1
 4906 0052 0100     		.2byte	0x1
 4907 0054 50       		.byte	0x50
 4908 0055 00000000 		.4byte	0
 4909 0059 00000000 		.4byte	0
 4910              	.LLST3:
 4911 005d 02000000 		.4byte	.LVL9
 4912 0061 22000000 		.4byte	.LVL11
 4913 0065 0200     		.2byte	0x2
 4914 0067 30       		.byte	0x30
 4915 0068 9F       		.byte	0x9f
 4916 0069 22000000 		.4byte	.LVL11
 4917 006d 2C000000 		.4byte	.LFE2
 4918 0071 0100     		.2byte	0x1
 4919 0073 50       		.byte	0x50
 4920 0074 00000000 		.4byte	0
 4921 0078 00000000 		.4byte	0
 4922              	.LLST4:
 4923 007c 02000000 		.4byte	.LVL12
 4924 0080 12000000 		.4byte	.LVL13
 4925 0084 0300     		.2byte	0x3
 4926 0086 09       		.byte	0x9
 4927 0087 FF       		.byte	0xff
 4928 0088 9F       		.byte	0x9f
 4929 0089 12000000 		.4byte	.LVL13
 4930 008d 14000000 		.4byte	.LVL14
 4931 0091 0100     		.2byte	0x1
 4932 0093 50       		.byte	0x50
 4933 0094 18000000 		.4byte	.LVL15
 4934 0098 25000000 		.4byte	.LVL16-1
 4935 009c 0100     		.2byte	0x1
 4936 009e 50       		.byte	0x50
 4937 009f 26000000 		.4byte	.LVL16
 4938 00a3 30000000 		.4byte	.LVL18
 4939 00a7 0100     		.2byte	0x1
 4940 00a9 50       		.byte	0x50
 4941 00aa 30000000 		.4byte	.LVL18
 4942 00ae 32000000 		.4byte	.LVL19
 4943 00b2 0300     		.2byte	0x3
 4944 00b4 09       		.byte	0x9
 4945 00b5 FF       		.byte	0xff
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 150


 4946 00b6 9F       		.byte	0x9f
 4947 00b7 32000000 		.4byte	.LVL19
 4948 00bb 3C000000 		.4byte	.LFE3
 4949 00bf 0100     		.2byte	0x1
 4950 00c1 50       		.byte	0x50
 4951 00c2 00000000 		.4byte	0
 4952 00c6 00000000 		.4byte	0
 4953              	.LLST5:
 4954 00ca 12000000 		.4byte	.LVL13
 4955 00ce 30000000 		.4byte	.LVL18
 4956 00d2 0100     		.2byte	0x1
 4957 00d4 54       		.byte	0x54
 4958 00d5 00000000 		.4byte	0
 4959 00d9 00000000 		.4byte	0
 4960              	.LLST6:
 4961 00dd 00000000 		.4byte	.LVL20
 4962 00e1 47000000 		.4byte	.LVL22-1
 4963 00e5 0100     		.2byte	0x1
 4964 00e7 50       		.byte	0x50
 4965 00e8 47000000 		.4byte	.LVL22-1
 4966 00ec 54000000 		.4byte	.LFE4
 4967 00f0 0400     		.2byte	0x4
 4968 00f2 F3       		.byte	0xf3
 4969 00f3 01       		.uleb128 0x1
 4970 00f4 50       		.byte	0x50
 4971 00f5 9F       		.byte	0x9f
 4972 00f6 00000000 		.4byte	0
 4973 00fa 00000000 		.4byte	0
 4974              	.LLST7:
 4975 00fe 00000000 		.4byte	.LVL20
 4976 0102 47000000 		.4byte	.LVL22-1
 4977 0106 0100     		.2byte	0x1
 4978 0108 51       		.byte	0x51
 4979 0109 47000000 		.4byte	.LVL22-1
 4980 010d 54000000 		.4byte	.LFE4
 4981 0111 0400     		.2byte	0x4
 4982 0113 F3       		.byte	0xf3
 4983 0114 01       		.uleb128 0x1
 4984 0115 51       		.byte	0x51
 4985 0116 9F       		.byte	0x9f
 4986 0117 00000000 		.4byte	0
 4987 011b 00000000 		.4byte	0
 4988              	.LLST8:
 4989 011f 40000000 		.4byte	.LVL21
 4990 0123 4A000000 		.4byte	.LVL23
 4991 0127 0100     		.2byte	0x1
 4992 0129 54       		.byte	0x54
 4993 012a 4A000000 		.4byte	.LVL23
 4994 012e 54000000 		.4byte	.LFE4
 4995 0132 0100     		.2byte	0x1
 4996 0134 50       		.byte	0x50
 4997 0135 00000000 		.4byte	0
 4998 0139 00000000 		.4byte	0
 4999              	.LLST9:
 5000 013d 02000000 		.4byte	.LVL24
 5001 0141 22000000 		.4byte	.LVL26
 5002 0145 0200     		.2byte	0x2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 151


 5003 0147 30       		.byte	0x30
 5004 0148 9F       		.byte	0x9f
 5005 0149 22000000 		.4byte	.LVL26
 5006 014d 2C000000 		.4byte	.LFE5
 5007 0151 0100     		.2byte	0x1
 5008 0153 50       		.byte	0x50
 5009 0154 00000000 		.4byte	0
 5010 0158 00000000 		.4byte	0
 5011              	.LLST10:
 5012 015c 00000000 		.4byte	.LVL27
 5013 0160 06000000 		.4byte	.LVL28
 5014 0164 0100     		.2byte	0x1
 5015 0166 50       		.byte	0x50
 5016 0167 06000000 		.4byte	.LVL28
 5017 016b 9C000000 		.4byte	.LFE7
 5018 016f 0400     		.2byte	0x4
 5019 0171 F3       		.byte	0xf3
 5020 0172 01       		.uleb128 0x1
 5021 0173 50       		.byte	0x50
 5022 0174 9F       		.byte	0x9f
 5023 0175 00000000 		.4byte	0
 5024 0179 00000000 		.4byte	0
 5025              	.LLST11:
 5026 017d 00000000 		.4byte	.LVL27
 5027 0181 0E000000 		.4byte	.LVL29
 5028 0185 0100     		.2byte	0x1
 5029 0187 51       		.byte	0x51
 5030 0188 0E000000 		.4byte	.LVL29
 5031 018c 9C000000 		.4byte	.LFE7
 5032 0190 0400     		.2byte	0x4
 5033 0192 F3       		.byte	0xf3
 5034 0193 01       		.uleb128 0x1
 5035 0194 51       		.byte	0x51
 5036 0195 9F       		.byte	0x9f
 5037 0196 00000000 		.4byte	0
 5038 019a 00000000 		.4byte	0
 5039              	.LLST12:
 5040 019e 00000000 		.4byte	.LVL27
 5041 01a2 16000000 		.4byte	.LVL31
 5042 01a6 0100     		.2byte	0x1
 5043 01a8 52       		.byte	0x52
 5044 01a9 16000000 		.4byte	.LVL31
 5045 01ad 94000000 		.4byte	.LVL43
 5046 01b1 0100     		.2byte	0x1
 5047 01b3 56       		.byte	0x56
 5048 01b4 94000000 		.4byte	.LVL43
 5049 01b8 9C000000 		.4byte	.LFE7
 5050 01bc 0400     		.2byte	0x4
 5051 01be F3       		.byte	0xf3
 5052 01bf 01       		.uleb128 0x1
 5053 01c0 52       		.byte	0x52
 5054 01c1 9F       		.byte	0x9f
 5055 01c2 00000000 		.4byte	0
 5056 01c6 00000000 		.4byte	0
 5057              	.LLST13:
 5058 01ca 12000000 		.4byte	.LVL30
 5059 01ce 16000000 		.4byte	.LVL31
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 152


 5060 01d2 0200     		.2byte	0x2
 5061 01d4 30       		.byte	0x30
 5062 01d5 9F       		.byte	0x9f
 5063 01d6 16000000 		.4byte	.LVL31
 5064 01da 94000000 		.4byte	.LVL42
 5065 01de 0100     		.2byte	0x1
 5066 01e0 55       		.byte	0x55
 5067 01e1 00000000 		.4byte	0
 5068 01e5 00000000 		.4byte	0
 5069              	.LLST14:
 5070 01e9 1A000000 		.4byte	.LVL32
 5071 01ed 39000000 		.4byte	.LVL33-1
 5072 01f1 0100     		.2byte	0x1
 5073 01f3 50       		.byte	0x50
 5074 01f4 4C000000 		.4byte	.LVL34
 5075 01f8 6B000000 		.4byte	.LVL35-1
 5076 01fc 0100     		.2byte	0x1
 5077 01fe 50       		.byte	0x50
 5078 01ff 72000000 		.4byte	.LVL36
 5079 0203 83000000 		.4byte	.LVL37-1
 5080 0207 0100     		.2byte	0x1
 5081 0209 50       		.byte	0x50
 5082 020a 00000000 		.4byte	0
 5083 020e 00000000 		.4byte	0
 5084              	.LLST15:
 5085 0212 12000000 		.4byte	.LVL30
 5086 0216 94000000 		.4byte	.LVL41
 5087 021a 0100     		.2byte	0x1
 5088 021c 54       		.byte	0x54
 5089 021d 00000000 		.4byte	0
 5090 0221 00000000 		.4byte	0
 5091              	.LLST16:
 5092 0225 00000000 		.4byte	.LVL44
 5093 0229 2E000000 		.4byte	.LVL48
 5094 022d 0100     		.2byte	0x1
 5095 022f 50       		.byte	0x50
 5096 0230 2E000000 		.4byte	.LVL48
 5097 0234 88000000 		.4byte	.LFE10
 5098 0238 0400     		.2byte	0x4
 5099 023a F3       		.byte	0xf3
 5100 023b 01       		.uleb128 0x1
 5101 023c 50       		.byte	0x50
 5102 023d 9F       		.byte	0x9f
 5103 023e 00000000 		.4byte	0
 5104 0242 00000000 		.4byte	0
 5105              	.LLST17:
 5106 0246 34000000 		.4byte	.LVL50
 5107 024a 76000000 		.4byte	.LVL63
 5108 024e 0200     		.2byte	0x2
 5109 0250 91       		.byte	0x91
 5110 0251 5C       		.sleb128 -36
 5111 0252 00000000 		.4byte	0
 5112 0256 00000000 		.4byte	0
 5113              	.LLST18:
 5114 025a 28000000 		.4byte	.LVL47
 5115 025e 2E000000 		.4byte	.LVL48
 5116 0262 0200     		.2byte	0x2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 153


 5117 0264 30       		.byte	0x30
 5118 0265 9F       		.byte	0x9f
 5119 0266 2E000000 		.4byte	.LVL48
 5120 026a 7C000000 		.4byte	.LVL65
 5121 026e 0100     		.2byte	0x1
 5122 0270 55       		.byte	0x55
 5123 0271 00000000 		.4byte	0
 5124 0275 00000000 		.4byte	0
 5125              	.LLST19:
 5126 0279 1A000000 		.4byte	.LVL45
 5127 027d 22000000 		.4byte	.LVL46
 5128 0281 0200     		.2byte	0x2
 5129 0283 30       		.byte	0x30
 5130 0284 9F       		.byte	0x9f
 5131 0285 28000000 		.4byte	.LVL47
 5132 0289 7C000000 		.4byte	.LVL67
 5133 028d 0100     		.2byte	0x1
 5134 028f 59       		.byte	0x59
 5135 0290 00000000 		.4byte	0
 5136 0294 00000000 		.4byte	0
 5137              	.LLST20:
 5138 0298 1A000000 		.4byte	.LVL45
 5139 029c 22000000 		.4byte	.LVL46
 5140 02a0 0200     		.2byte	0x2
 5141 02a2 35       		.byte	0x35
 5142 02a3 9F       		.byte	0x9f
 5143 02a4 28000000 		.4byte	.LVL47
 5144 02a8 7C000000 		.4byte	.LVL66
 5145 02ac 0100     		.2byte	0x1
 5146 02ae 57       		.byte	0x57
 5147 02af 00000000 		.4byte	0
 5148 02b3 00000000 		.4byte	0
 5149              	.LLST21:
 5150 02b7 42000000 		.4byte	.LVL53
 5151 02bb 58000000 		.4byte	.LVL56
 5152 02bf 0100     		.2byte	0x1
 5153 02c1 52       		.byte	0x52
 5154 02c2 58000000 		.4byte	.LVL56
 5155 02c6 62000000 		.4byte	.LVL58
 5156 02ca 0200     		.2byte	0x2
 5157 02cc 70       		.byte	0x70
 5158 02cd 00       		.sleb128 0
 5159 02ce 66000000 		.4byte	.LVL59
 5160 02d2 71000000 		.4byte	.LVL61-1
 5161 02d6 0100     		.2byte	0x1
 5162 02d8 53       		.byte	0x53
 5163 02d9 00000000 		.4byte	0
 5164 02dd 00000000 		.4byte	0
 5165              	.LLST22:
 5166 02e1 38000000 		.4byte	.LVL51
 5167 02e5 66000000 		.4byte	.LVL59
 5168 02e9 0100     		.2byte	0x1
 5169 02eb 53       		.byte	0x53
 5170 02ec 00000000 		.4byte	0
 5171 02f0 00000000 		.4byte	0
 5172              	.LLST23:
 5173 02f4 2E000000 		.4byte	.LVL48
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 154


 5174 02f8 7C000000 		.4byte	.LVL64
 5175 02fc 0100     		.2byte	0x1
 5176 02fe 54       		.byte	0x54
 5177 02ff 00000000 		.4byte	0
 5178 0303 00000000 		.4byte	0
 5179              	.LLST24:
 5180 0307 00000000 		.4byte	.LVL68
 5181 030b 05000000 		.4byte	.LVL69-1
 5182 030f 0100     		.2byte	0x1
 5183 0311 50       		.byte	0x50
 5184 0312 05000000 		.4byte	.LVL69-1
 5185 0316 08000000 		.4byte	.LFE12
 5186 031a 0400     		.2byte	0x4
 5187 031c F3       		.byte	0xf3
 5188 031d 01       		.uleb128 0x1
 5189 031e 50       		.byte	0x50
 5190 031f 9F       		.byte	0x9f
 5191 0320 00000000 		.4byte	0
 5192 0324 00000000 		.4byte	0
 5193              	.LLST25:
 5194 0328 00000000 		.4byte	.LVL70
 5195 032c 12000000 		.4byte	.LVL72
 5196 0330 0100     		.2byte	0x1
 5197 0332 50       		.byte	0x50
 5198 0333 12000000 		.4byte	.LVL72
 5199 0337 14000000 		.4byte	.LVL73
 5200 033b 0300     		.2byte	0x3
 5201 033d 70       		.byte	0x70
 5202 033e 01       		.sleb128 1
 5203 033f 9F       		.byte	0x9f
 5204 0340 14000000 		.4byte	.LVL73
 5205 0344 28000000 		.4byte	.LFE13
 5206 0348 0400     		.2byte	0x4
 5207 034a F3       		.byte	0xf3
 5208 034b 01       		.uleb128 0x1
 5209 034c 50       		.byte	0x50
 5210 034d 9F       		.byte	0x9f
 5211 034e 00000000 		.4byte	0
 5212 0352 00000000 		.4byte	0
 5213              	.LLST26:
 5214 0356 10000000 		.4byte	.LVL71
 5215 035a 14000000 		.4byte	.LVL73
 5216 035e 0100     		.2byte	0x1
 5217 0360 52       		.byte	0x52
 5218 0361 14000000 		.4byte	.LVL73
 5219 0365 28000000 		.4byte	.LFE13
 5220 0369 0100     		.2byte	0x1
 5221 036b 50       		.byte	0x50
 5222 036c 00000000 		.4byte	0
 5223 0370 00000000 		.4byte	0
 5224              	.LLST27:
 5225 0374 00000000 		.4byte	.LVL74
 5226 0378 12000000 		.4byte	.LVL76
 5227 037c 0100     		.2byte	0x1
 5228 037e 50       		.byte	0x50
 5229 037f 12000000 		.4byte	.LVL76
 5230 0383 14000000 		.4byte	.LVL77
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 155


 5231 0387 0300     		.2byte	0x3
 5232 0389 70       		.byte	0x70
 5233 038a 01       		.sleb128 1
 5234 038b 9F       		.byte	0x9f
 5235 038c 14000000 		.4byte	.LVL77
 5236 0390 28000000 		.4byte	.LFE14
 5237 0394 0400     		.2byte	0x4
 5238 0396 F3       		.byte	0xf3
 5239 0397 01       		.uleb128 0x1
 5240 0398 50       		.byte	0x50
 5241 0399 9F       		.byte	0x9f
 5242 039a 00000000 		.4byte	0
 5243 039e 00000000 		.4byte	0
 5244              	.LLST28:
 5245 03a2 10000000 		.4byte	.LVL75
 5246 03a6 14000000 		.4byte	.LVL77
 5247 03aa 0100     		.2byte	0x1
 5248 03ac 52       		.byte	0x52
 5249 03ad 14000000 		.4byte	.LVL77
 5250 03b1 28000000 		.4byte	.LFE14
 5251 03b5 0100     		.2byte	0x1
 5252 03b7 50       		.byte	0x50
 5253 03b8 00000000 		.4byte	0
 5254 03bc 00000000 		.4byte	0
 5255              	.LLST29:
 5256 03c0 00000000 		.4byte	.LVL78
 5257 03c4 06000000 		.4byte	.LVL79
 5258 03c8 0100     		.2byte	0x1
 5259 03ca 50       		.byte	0x50
 5260 03cb 06000000 		.4byte	.LVL79
 5261 03cf 10000000 		.4byte	.LVL82
 5262 03d3 0100     		.2byte	0x1
 5263 03d5 54       		.byte	0x54
 5264 03d6 10000000 		.4byte	.LVL82
 5265 03da 12000000 		.4byte	.LFE15
 5266 03de 0400     		.2byte	0x4
 5267 03e0 F3       		.byte	0xf3
 5268 03e1 01       		.uleb128 0x1
 5269 03e2 50       		.byte	0x50
 5270 03e3 9F       		.byte	0x9f
 5271 03e4 00000000 		.4byte	0
 5272 03e8 00000000 		.4byte	0
 5273              	.LLST30:
 5274 03ec 00000000 		.4byte	.LVL78
 5275 03f0 09000000 		.4byte	.LVL80-1
 5276 03f4 0100     		.2byte	0x1
 5277 03f6 51       		.byte	0x51
 5278 03f7 09000000 		.4byte	.LVL80-1
 5279 03fb 12000000 		.4byte	.LFE15
 5280 03ff 0400     		.2byte	0x4
 5281 0401 F3       		.byte	0xf3
 5282 0402 01       		.uleb128 0x1
 5283 0403 51       		.byte	0x51
 5284 0404 9F       		.byte	0x9f
 5285 0405 00000000 		.4byte	0
 5286 0409 00000000 		.4byte	0
 5287              	.LLST31:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 156


 5288 040d 00000000 		.4byte	.LVL83
 5289 0411 08000000 		.4byte	.LVL85
 5290 0415 0100     		.2byte	0x1
 5291 0417 50       		.byte	0x50
 5292 0418 08000000 		.4byte	.LVL85
 5293 041c 0A000000 		.4byte	.LVL86
 5294 0420 0100     		.2byte	0x1
 5295 0422 53       		.byte	0x53
 5296 0423 0A000000 		.4byte	.LVL86
 5297 0427 0C000000 		.4byte	.LVL87
 5298 042b 0100     		.2byte	0x1
 5299 042d 50       		.byte	0x50
 5300 042e 0C000000 		.4byte	.LVL87
 5301 0432 17000000 		.4byte	.LVL89-1
 5302 0436 0100     		.2byte	0x1
 5303 0438 53       		.byte	0x53
 5304 0439 17000000 		.4byte	.LVL89-1
 5305 043d 1A000000 		.4byte	.LFE16
 5306 0441 0400     		.2byte	0x4
 5307 0443 F3       		.byte	0xf3
 5308 0444 01       		.uleb128 0x1
 5309 0445 50       		.byte	0x50
 5310 0446 9F       		.byte	0x9f
 5311 0447 00000000 		.4byte	0
 5312 044b 00000000 		.4byte	0
 5313              	.LLST32:
 5314 044f 04000000 		.4byte	.LVL84
 5315 0453 0C000000 		.4byte	.LVL87
 5316 0457 0200     		.2byte	0x2
 5317 0459 30       		.byte	0x30
 5318 045a 9F       		.byte	0x9f
 5319 045b 0C000000 		.4byte	.LVL87
 5320 045f 14000000 		.4byte	.LVL88
 5321 0463 0100     		.2byte	0x1
 5322 0465 50       		.byte	0x50
 5323 0466 18000000 		.4byte	.LVL89
 5324 046a 1A000000 		.4byte	.LFE16
 5325 046e 0100     		.2byte	0x1
 5326 0470 50       		.byte	0x50
 5327 0471 00000000 		.4byte	0
 5328 0475 00000000 		.4byte	0
 5329              	.LLST33:
 5330 0479 02000000 		.4byte	.LVL90
 5331 047d 08000000 		.4byte	.LVL91
 5332 0481 0200     		.2byte	0x2
 5333 0483 30       		.byte	0x30
 5334 0484 9F       		.byte	0x9f
 5335 0485 08000000 		.4byte	.LVL91
 5336 0489 18000000 		.4byte	.LVL96
 5337 048d 0100     		.2byte	0x1
 5338 048f 55       		.byte	0x55
 5339 0490 18000000 		.4byte	.LVL96
 5340 0494 1A000000 		.4byte	.LFE17
 5341 0498 0100     		.2byte	0x1
 5342 049a 50       		.byte	0x50
 5343 049b 00000000 		.4byte	0
 5344 049f 00000000 		.4byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 157


 5345              	.LLST34:
 5346 04a3 02000000 		.4byte	.LVL90
 5347 04a7 08000000 		.4byte	.LVL91
 5348 04ab 0200     		.2byte	0x2
 5349 04ad 30       		.byte	0x30
 5350 04ae 9F       		.byte	0x9f
 5351 04af 08000000 		.4byte	.LVL91
 5352 04b3 18000000 		.4byte	.LVL95
 5353 04b7 0100     		.2byte	0x1
 5354 04b9 54       		.byte	0x54
 5355 04ba 00000000 		.4byte	0
 5356 04be 00000000 		.4byte	0
 5357              	.LLST35:
 5358 04c2 00000000 		.4byte	.LVL97
 5359 04c6 02000000 		.4byte	.LVL98
 5360 04ca 0100     		.2byte	0x1
 5361 04cc 50       		.byte	0x50
 5362 04cd 02000000 		.4byte	.LVL98
 5363 04d1 10000000 		.4byte	.LFE24
 5364 04d5 0400     		.2byte	0x4
 5365 04d7 F3       		.byte	0xf3
 5366 04d8 01       		.uleb128 0x1
 5367 04d9 50       		.byte	0x50
 5368 04da 9F       		.byte	0x9f
 5369 04db 00000000 		.4byte	0
 5370 04df 00000000 		.4byte	0
 5371              	.LLST36:
 5372 04e3 00000000 		.4byte	.LVL101
 5373 04e7 02000000 		.4byte	.LVL102
 5374 04eb 0100     		.2byte	0x1
 5375 04ed 50       		.byte	0x50
 5376 04ee 02000000 		.4byte	.LVL102
 5377 04f2 14000000 		.4byte	.LVL104
 5378 04f6 0100     		.2byte	0x1
 5379 04f8 52       		.byte	0x52
 5380 04f9 14000000 		.4byte	.LVL104
 5381 04fd 1C000000 		.4byte	.LVL105
 5382 0501 0600     		.2byte	0x6
 5383 0503 F3       		.byte	0xf3
 5384 0504 01       		.uleb128 0x1
 5385 0505 50       		.byte	0x50
 5386 0506 31       		.byte	0x31
 5387 0507 24       		.byte	0x24
 5388 0508 9F       		.byte	0x9f
 5389 0509 1C000000 		.4byte	.LVL105
 5390 050d 20000000 		.4byte	.LVL106
 5391 0511 0100     		.2byte	0x1
 5392 0513 52       		.byte	0x52
 5393 0514 20000000 		.4byte	.LVL106
 5394 0518 26000000 		.4byte	.LFE25
 5395 051c 0600     		.2byte	0x6
 5396 051e F3       		.byte	0xf3
 5397 051f 01       		.uleb128 0x1
 5398 0520 50       		.byte	0x50
 5399 0521 31       		.byte	0x31
 5400 0522 24       		.byte	0x24
 5401 0523 9F       		.byte	0x9f
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 158


 5402 0524 00000000 		.4byte	0
 5403 0528 00000000 		.4byte	0
 5404              	.LLST37:
 5405 052c 00000000 		.4byte	.LVL101
 5406 0530 12000000 		.4byte	.LVL103
 5407 0534 0100     		.2byte	0x1
 5408 0536 51       		.byte	0x51
 5409 0537 12000000 		.4byte	.LVL103
 5410 053b 1C000000 		.4byte	.LVL105
 5411 053f 0400     		.2byte	0x4
 5412 0541 F3       		.byte	0xf3
 5413 0542 01       		.uleb128 0x1
 5414 0543 51       		.byte	0x51
 5415 0544 9F       		.byte	0x9f
 5416 0545 1C000000 		.4byte	.LVL105
 5417 0549 20000000 		.4byte	.LVL106
 5418 054d 0100     		.2byte	0x1
 5419 054f 51       		.byte	0x51
 5420 0550 20000000 		.4byte	.LVL106
 5421 0554 26000000 		.4byte	.LFE25
 5422 0558 0400     		.2byte	0x4
 5423 055a F3       		.byte	0xf3
 5424 055b 01       		.uleb128 0x1
 5425 055c 51       		.byte	0x51
 5426 055d 9F       		.byte	0x9f
 5427 055e 00000000 		.4byte	0
 5428 0562 00000000 		.4byte	0
 5429              	.LLST38:
 5430 0566 22000000 		.4byte	.LVL107
 5431 056a 24000000 		.4byte	.LVL108
 5432 056e 0100     		.2byte	0x1
 5433 0570 50       		.byte	0x50
 5434 0571 00000000 		.4byte	0
 5435 0575 00000000 		.4byte	0
 5436              	.LLST39:
 5437 0579 00000000 		.4byte	.LVL109
 5438 057d 07000000 		.4byte	.LVL110-1
 5439 0581 0100     		.2byte	0x1
 5440 0583 50       		.byte	0x50
 5441 0584 07000000 		.4byte	.LVL110-1
 5442 0588 14000000 		.4byte	.LFE23
 5443 058c 0400     		.2byte	0x4
 5444 058e F3       		.byte	0xf3
 5445 058f 01       		.uleb128 0x1
 5446 0590 50       		.byte	0x50
 5447 0591 9F       		.byte	0x9f
 5448 0592 00000000 		.4byte	0
 5449 0596 00000000 		.4byte	0
 5450              	.LLST40:
 5451 059a 00000000 		.4byte	.LVL109
 5452 059e 07000000 		.4byte	.LVL110-1
 5453 05a2 0100     		.2byte	0x1
 5454 05a4 51       		.byte	0x51
 5455 05a5 07000000 		.4byte	.LVL110-1
 5456 05a9 12000000 		.4byte	.LVL113
 5457 05ad 0100     		.2byte	0x1
 5458 05af 54       		.byte	0x54
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 159


 5459 05b0 12000000 		.4byte	.LVL113
 5460 05b4 14000000 		.4byte	.LFE23
 5461 05b8 0400     		.2byte	0x4
 5462 05ba F3       		.byte	0xf3
 5463 05bb 01       		.uleb128 0x1
 5464 05bc 51       		.byte	0x51
 5465 05bd 9F       		.byte	0x9f
 5466 05be 00000000 		.4byte	0
 5467 05c2 00000000 		.4byte	0
 5468              	.LLST41:
 5469 05c6 08000000 		.4byte	.LVL110
 5470 05ca 0A000000 		.4byte	.LVL111
 5471 05ce 0100     		.2byte	0x1
 5472 05d0 50       		.byte	0x50
 5473 05d1 00000000 		.4byte	0
 5474 05d5 00000000 		.4byte	0
 5475              	.LLST42:
 5476 05d9 00000000 		.4byte	.LVL114
 5477 05dd 1A000000 		.4byte	.LVL120
 5478 05e1 0100     		.2byte	0x1
 5479 05e3 50       		.byte	0x50
 5480 05e4 1A000000 		.4byte	.LVL120
 5481 05e8 2C010000 		.4byte	.LVL154
 5482 05ec 0100     		.2byte	0x1
 5483 05ee 55       		.byte	0x55
 5484 05ef 2C010000 		.4byte	.LVL154
 5485 05f3 58010000 		.4byte	.LFE18
 5486 05f7 0400     		.2byte	0x4
 5487 05f9 F3       		.byte	0xf3
 5488 05fa 01       		.uleb128 0x1
 5489 05fb 50       		.byte	0x50
 5490 05fc 9F       		.byte	0x9f
 5491 05fd 00000000 		.4byte	0
 5492 0601 00000000 		.4byte	0
 5493              	.LLST43:
 5494 0605 0A000000 		.4byte	.LVL115
 5495 0609 F4000000 		.4byte	.LVL146
 5496 060d 0200     		.2byte	0x2
 5497 060f 30       		.byte	0x30
 5498 0610 9F       		.byte	0x9f
 5499 0611 F4000000 		.4byte	.LVL146
 5500 0615 2A010000 		.4byte	.LVL152
 5501 0619 0100     		.2byte	0x1
 5502 061b 56       		.byte	0x56
 5503 061c 2A010000 		.4byte	.LVL152
 5504 0620 58010000 		.4byte	.LFE18
 5505 0624 0100     		.2byte	0x1
 5506 0626 50       		.byte	0x50
 5507 0627 00000000 		.4byte	0
 5508 062b 00000000 		.4byte	0
 5509              	.LLST44:
 5510 062f 80000000 		.4byte	.LVL131
 5511 0633 8A000000 		.4byte	.LVL132
 5512 0637 0200     		.2byte	0x2
 5513 0639 30       		.byte	0x30
 5514 063a 9F       		.byte	0x9f
 5515 063b 8A000000 		.4byte	.LVL132
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 160


 5516 063f B4000000 		.4byte	.LVL139
 5517 0643 0100     		.2byte	0x1
 5518 0645 52       		.byte	0x52
 5519 0646 00000000 		.4byte	0
 5520 064a 00000000 		.4byte	0
 5521              	.LLST45:
 5522 064e 22000000 		.4byte	.LVL122
 5523 0652 2F000000 		.4byte	.LVL124-1
 5524 0656 0100     		.2byte	0x1
 5525 0658 53       		.byte	0x53
 5526 0659 2F000000 		.4byte	.LVL124-1
 5527 065d BE000000 		.4byte	.LVL140
 5528 0661 0100     		.2byte	0x1
 5529 0663 58       		.byte	0x58
 5530 0664 00000000 		.4byte	0
 5531 0668 00000000 		.4byte	0
 5532              	.LLST46:
 5533 066c 22000000 		.4byte	.LVL122
 5534 0670 36000000 		.4byte	.LVL125
 5535 0674 0400     		.2byte	0x4
 5536 0676 0A       		.byte	0xa
 5537 0677 E803     		.2byte	0x3e8
 5538 0679 9F       		.byte	0x9f
 5539 067a 36000000 		.4byte	.LVL125
 5540 067e 3C000000 		.4byte	.LVL126
 5541 0682 0100     		.2byte	0x1
 5542 0684 50       		.byte	0x50
 5543 0685 3C000000 		.4byte	.LVL126
 5544 0689 43000000 		.4byte	.LVL127-1
 5545 068d 0400     		.2byte	0x4
 5546 068f 70       		.byte	0x70
 5547 0690 9978     		.sleb128 -999
 5548 0692 9F       		.byte	0x9f
 5549 0693 46000000 		.4byte	.LVL128
 5550 0697 4C000000 		.4byte	.LVL129
 5551 069b 0100     		.2byte	0x1
 5552 069d 50       		.byte	0x50
 5553 069e 4C000000 		.4byte	.LVL129
 5554 06a2 F0000000 		.4byte	.LVL144
 5555 06a6 0100     		.2byte	0x1
 5556 06a8 56       		.byte	0x56
 5557 06a9 F2000000 		.4byte	.LVL145
 5558 06ad F4000000 		.4byte	.LVL146
 5559 06b1 0100     		.2byte	0x1
 5560 06b3 56       		.byte	0x56
 5561 06b4 00000000 		.4byte	0
 5562 06b8 00000000 		.4byte	0
 5563              	.LLST47:
 5564 06bc 2A000000 		.4byte	.LVL123
 5565 06c0 2F000000 		.4byte	.LVL124-1
 5566 06c4 0100     		.2byte	0x1
 5567 06c6 50       		.byte	0x50
 5568 06c7 2F000000 		.4byte	.LVL124-1
 5569 06cb 30000000 		.4byte	.LVL124
 5570 06cf 0600     		.2byte	0x6
 5571 06d1 76       		.byte	0x76
 5572 06d2 00       		.sleb128 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 161


 5573 06d3 78       		.byte	0x78
 5574 06d4 00       		.sleb128 0
 5575 06d5 1E       		.byte	0x1e
 5576 06d6 9F       		.byte	0x9f
 5577 06d7 30000000 		.4byte	.LVL124
 5578 06db 36000000 		.4byte	.LVL125
 5579 06df 0100     		.2byte	0x1
 5580 06e1 50       		.byte	0x50
 5581 06e2 00000000 		.4byte	0
 5582 06e6 00000000 		.4byte	0
 5583              	.LLST48:
 5584 06ea 0A000000 		.4byte	.LVL115
 5585 06ee 8A000000 		.4byte	.LVL132
 5586 06f2 0200     		.2byte	0x2
 5587 06f4 30       		.byte	0x30
 5588 06f5 9F       		.byte	0x9f
 5589 06f6 8A000000 		.4byte	.LVL132
 5590 06fa 94000000 		.4byte	.LVL134
 5591 06fe 0100     		.2byte	0x1
 5592 0700 5C       		.byte	0x5c
 5593 0701 94000000 		.4byte	.LVL134
 5594 0705 96000000 		.4byte	.LVL135
 5595 0709 0100     		.2byte	0x1
 5596 070b 51       		.byte	0x51
 5597 070c 96000000 		.4byte	.LVL135
 5598 0710 D1000000 		.4byte	.LVL142-1
 5599 0714 0100     		.2byte	0x1
 5600 0716 5C       		.byte	0x5c
 5601 0717 00000000 		.4byte	0
 5602 071b 00000000 		.4byte	0
 5603              	.LLST49:
 5604 071f 0A000000 		.4byte	.LVL115
 5605 0723 DA000000 		.4byte	.LVL143
 5606 0727 0200     		.2byte	0x2
 5607 0729 30       		.byte	0x30
 5608 072a 9F       		.byte	0x9f
 5609 072b DA000000 		.4byte	.LVL143
 5610 072f F8000000 		.4byte	.LVL147
 5611 0733 0100     		.2byte	0x1
 5612 0735 50       		.byte	0x50
 5613 0736 F8000000 		.4byte	.LVL147
 5614 073a FB000000 		.4byte	.LVL148-1
 5615 073e 0200     		.2byte	0x2
 5616 0740 77       		.byte	0x77
 5617 0741 00       		.sleb128 0
 5618 0742 00000000 		.4byte	0
 5619 0746 00000000 		.4byte	0
 5620              	.LLST50:
 5621 074a 0A000000 		.4byte	.LVL115
 5622 074e 8A000000 		.4byte	.LVL132
 5623 0752 0200     		.2byte	0x2
 5624 0754 30       		.byte	0x30
 5625 0755 9F       		.byte	0x9f
 5626 0756 8A000000 		.4byte	.LVL132
 5627 075a 90000000 		.4byte	.LVL133
 5628 075e 0100     		.2byte	0x1
 5629 0760 51       		.byte	0x51
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 162


 5630 0761 90000000 		.4byte	.LVL133
 5631 0765 96000000 		.4byte	.LVL135
 5632 0769 0100     		.2byte	0x1
 5633 076b 53       		.byte	0x53
 5634 076c 96000000 		.4byte	.LVL135
 5635 0770 CE000000 		.4byte	.LVL141
 5636 0774 0100     		.2byte	0x1
 5637 0776 51       		.byte	0x51
 5638 0777 00000000 		.4byte	0
 5639 077b 00000000 		.4byte	0
 5640              	.LLST51:
 5641 077f 10000000 		.4byte	.LVL116
 5642 0783 16000000 		.4byte	.LVL119
 5643 0787 0100     		.2byte	0x1
 5644 0789 53       		.byte	0x53
 5645 078a 00000000 		.4byte	0
 5646 078e 00000000 		.4byte	0
 5647              	.LLST52:
 5648 0792 12000000 		.4byte	.LVL117
 5649 0796 2C010000 		.4byte	.LVL153
 5650 079a 0100     		.2byte	0x1
 5651 079c 54       		.byte	0x54
 5652 079d 00000000 		.4byte	0
 5653 07a1 00000000 		.4byte	0
 5654              	.LLST53:
 5655 07a5 14000000 		.4byte	.LVL118
 5656 07a9 AA000000 		.4byte	.LVL138
 5657 07ad 0100     		.2byte	0x1
 5658 07af 57       		.byte	0x57
 5659 07b0 00000000 		.4byte	0
 5660 07b4 00000000 		.4byte	0
 5661              	.LLST54:
 5662 07b8 02000000 		.4byte	.LVL155
 5663 07bc 08000000 		.4byte	.LVL156
 5664 07c0 0200     		.2byte	0x2
 5665 07c2 30       		.byte	0x30
 5666 07c3 9F       		.byte	0x9f
 5667 07c4 08000000 		.4byte	.LVL156
 5668 07c8 18000000 		.4byte	.LVL161
 5669 07cc 0100     		.2byte	0x1
 5670 07ce 55       		.byte	0x55
 5671 07cf 18000000 		.4byte	.LVL161
 5672 07d3 1A000000 		.4byte	.LFE19
 5673 07d7 0100     		.2byte	0x1
 5674 07d9 50       		.byte	0x50
 5675 07da 00000000 		.4byte	0
 5676 07de 00000000 		.4byte	0
 5677              	.LLST55:
 5678 07e2 02000000 		.4byte	.LVL155
 5679 07e6 08000000 		.4byte	.LVL156
 5680 07ea 0200     		.2byte	0x2
 5681 07ec 30       		.byte	0x30
 5682 07ed 9F       		.byte	0x9f
 5683 07ee 08000000 		.4byte	.LVL156
 5684 07f2 18000000 		.4byte	.LVL160
 5685 07f6 0100     		.2byte	0x1
 5686 07f8 54       		.byte	0x54
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 163


 5687 07f9 00000000 		.4byte	0
 5688 07fd 00000000 		.4byte	0
 5689              	.LLST56:
 5690 0801 02000000 		.4byte	.LVL162
 5691 0805 06000000 		.4byte	.LVL163
 5692 0809 0200     		.2byte	0x2
 5693 080b 30       		.byte	0x30
 5694 080c 9F       		.byte	0x9f
 5695 080d 06000000 		.4byte	.LVL163
 5696 0811 1A000000 		.4byte	.LVL167
 5697 0815 0100     		.2byte	0x1
 5698 0817 54       		.byte	0x54
 5699 0818 00000000 		.4byte	0
 5700 081c 00000000 		.4byte	0
 5701              	.LLST57:
 5702 0820 0E000000 		.4byte	.LVL164
 5703 0824 13000000 		.4byte	.LVL165-1
 5704 0828 0100     		.2byte	0x1
 5705 082a 51       		.byte	0x51
 5706 082b 00000000 		.4byte	0
 5707 082f 00000000 		.4byte	0
 5708              	.LLST58:
 5709 0833 00000000 		.4byte	.LVL168
 5710 0837 10000000 		.4byte	.LVL170
 5711 083b 0100     		.2byte	0x1
 5712 083d 50       		.byte	0x50
 5713 083e 10000000 		.4byte	.LVL170
 5714 0842 1C000000 		.4byte	.LFE27
 5715 0846 0400     		.2byte	0x4
 5716 0848 F3       		.byte	0xf3
 5717 0849 01       		.uleb128 0x1
 5718 084a 50       		.byte	0x50
 5719 084b 9F       		.byte	0x9f
 5720 084c 00000000 		.4byte	0
 5721 0850 00000000 		.4byte	0
 5722              	.LLST59:
 5723 0854 00000000 		.4byte	.LVL168
 5724 0858 13000000 		.4byte	.LVL171-1
 5725 085c 0100     		.2byte	0x1
 5726 085e 51       		.byte	0x51
 5727 085f 13000000 		.4byte	.LVL171-1
 5728 0863 1C000000 		.4byte	.LFE27
 5729 0867 0400     		.2byte	0x4
 5730 0869 F3       		.byte	0xf3
 5731 086a 01       		.uleb128 0x1
 5732 086b 51       		.byte	0x51
 5733 086c 9F       		.byte	0x9f
 5734 086d 00000000 		.4byte	0
 5735 0871 00000000 		.4byte	0
 5736              	.LLST60:
 5737 0875 02000000 		.4byte	.LVL169
 5738 0879 14000000 		.4byte	.LVL171
 5739 087d 0200     		.2byte	0x2
 5740 087f 30       		.byte	0x30
 5741 0880 9F       		.byte	0x9f
 5742 0881 14000000 		.4byte	.LVL171
 5743 0885 16000000 		.4byte	.LVL172
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 164


 5744 0889 0200     		.2byte	0x2
 5745 088b 31       		.byte	0x31
 5746 088c 9F       		.byte	0x9f
 5747 088d 16000000 		.4byte	.LVL172
 5748 0891 1C000000 		.4byte	.LFE27
 5749 0895 0100     		.2byte	0x1
 5750 0897 50       		.byte	0x50
 5751 0898 00000000 		.4byte	0
 5752 089c 00000000 		.4byte	0
 5753              	.LLST61:
 5754 08a0 00000000 		.4byte	.LVL173
 5755 08a4 0B000000 		.4byte	.LVL174-1
 5756 08a8 0100     		.2byte	0x1
 5757 08aa 50       		.byte	0x50
 5758 08ab 0B000000 		.4byte	.LVL174-1
 5759 08af 1A000000 		.4byte	.LVL177
 5760 08b3 0100     		.2byte	0x1
 5761 08b5 55       		.byte	0x55
 5762 08b6 1A000000 		.4byte	.LVL177
 5763 08ba 1C000000 		.4byte	.LFE28
 5764 08be 0400     		.2byte	0x4
 5765 08c0 F3       		.byte	0xf3
 5766 08c1 01       		.uleb128 0x1
 5767 08c2 50       		.byte	0x50
 5768 08c3 9F       		.byte	0x9f
 5769 08c4 00000000 		.4byte	0
 5770 08c8 00000000 		.4byte	0
 5771              	.LLST62:
 5772 08cc 00000000 		.4byte	.LVL173
 5773 08d0 0B000000 		.4byte	.LVL174-1
 5774 08d4 0100     		.2byte	0x1
 5775 08d6 51       		.byte	0x51
 5776 08d7 0B000000 		.4byte	.LVL174-1
 5777 08db 1A000000 		.4byte	.LVL178
 5778 08df 0100     		.2byte	0x1
 5779 08e1 56       		.byte	0x56
 5780 08e2 1A000000 		.4byte	.LVL178
 5781 08e6 1C000000 		.4byte	.LFE28
 5782 08ea 0400     		.2byte	0x4
 5783 08ec F3       		.byte	0xf3
 5784 08ed 01       		.uleb128 0x1
 5785 08ee 51       		.byte	0x51
 5786 08ef 9F       		.byte	0x9f
 5787 08f0 00000000 		.4byte	0
 5788 08f4 00000000 		.4byte	0
 5789              	.LLST63:
 5790 08f8 00000000 		.4byte	.LVL173
 5791 08fc 0B000000 		.4byte	.LVL174-1
 5792 0900 0100     		.2byte	0x1
 5793 0902 52       		.byte	0x52
 5794 0903 0B000000 		.4byte	.LVL174-1
 5795 0907 10000000 		.4byte	.LVL175
 5796 090b 0100     		.2byte	0x1
 5797 090d 54       		.byte	0x54
 5798 090e 10000000 		.4byte	.LVL175
 5799 0912 1C000000 		.4byte	.LFE28
 5800 0916 0400     		.2byte	0x4
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 165


 5801 0918 F3       		.byte	0xf3
 5802 0919 01       		.uleb128 0x1
 5803 091a 52       		.byte	0x52
 5804 091b 9F       		.byte	0x9f
 5805 091c 00000000 		.4byte	0
 5806 0920 00000000 		.4byte	0
 5807              	.LLST64:
 5808 0924 0C000000 		.4byte	.LVL174
 5809 0928 19000000 		.4byte	.LVL176-1
 5810 092c 0100     		.2byte	0x1
 5811 092e 50       		.byte	0x50
 5812 092f 00000000 		.4byte	0
 5813 0933 00000000 		.4byte	0
 5814              	.LLST65:
 5815 0937 00000000 		.4byte	.LVL181
 5816 093b 13000000 		.4byte	.LVL182-1
 5817 093f 0100     		.2byte	0x1
 5818 0941 50       		.byte	0x50
 5819 0942 13000000 		.4byte	.LVL182-1
 5820 0946 3C000000 		.4byte	.LFE9
 5821 094a 0400     		.2byte	0x4
 5822 094c F3       		.byte	0xf3
 5823 094d 01       		.uleb128 0x1
 5824 094e 50       		.byte	0x50
 5825 094f 9F       		.byte	0x9f
 5826 0950 00000000 		.4byte	0
 5827 0954 00000000 		.4byte	0
 5828              	.LLST66:
 5829 0958 00000000 		.4byte	.LVL190
 5830 095c 38000000 		.4byte	.LVL196
 5831 0960 0100     		.2byte	0x1
 5832 0962 50       		.byte	0x50
 5833 0963 38000000 		.4byte	.LVL196
 5834 0967 94000000 		.4byte	.LFE26
 5835 096b 0200     		.2byte	0x2
 5836 096d 91       		.byte	0x91
 5837 096e 5C       		.sleb128 -36
 5838 096f 00000000 		.4byte	0
 5839 0973 00000000 		.4byte	0
 5840              	.LLST67:
 5841 0977 1A000000 		.4byte	.LVL191
 5842 097b 1E000000 		.4byte	.LVL192
 5843 097f 0100     		.2byte	0x1
 5844 0981 53       		.byte	0x53
 5845 0982 1E000000 		.4byte	.LVL192
 5846 0986 7C000000 		.4byte	.LVL204
 5847 098a 0100     		.2byte	0x1
 5848 098c 58       		.byte	0x58
 5849 098d 00000000 		.4byte	0
 5850 0991 00000000 		.4byte	0
 5851              	.LLST68:
 5852 0995 24000000 		.4byte	.LVL193
 5853 0999 32000000 		.4byte	.LVL195
 5854 099d 0100     		.2byte	0x1
 5855 099f 52       		.byte	0x52
 5856 09a0 32000000 		.4byte	.LVL195
 5857 09a4 7C000000 		.4byte	.LVL205
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 166


 5858 09a8 0100     		.2byte	0x1
 5859 09aa 59       		.byte	0x59
 5860 09ab 00000000 		.4byte	0
 5861 09af 00000000 		.4byte	0
 5862              	.LLST69:
 5863 09b3 30000000 		.4byte	.LVL194
 5864 09b7 3B000000 		.4byte	.LVL197-1
 5865 09bb 0100     		.2byte	0x1
 5866 09bd 53       		.byte	0x53
 5867 09be 3B000000 		.4byte	.LVL197-1
 5868 09c2 7C000000 		.4byte	.LVL206
 5869 09c6 0100     		.2byte	0x1
 5870 09c8 5B       		.byte	0x5b
 5871 09c9 00000000 		.4byte	0
 5872 09cd 00000000 		.4byte	0
 5873              		.section	.debug_aranges,"",%progbits
 5874 0000 FC000000 		.4byte	0xfc
 5875 0004 0200     		.2byte	0x2
 5876 0006 00000000 		.4byte	.Ldebug_info0
 5877 000a 04       		.byte	0x4
 5878 000b 00       		.byte	0
 5879 000c 0000     		.2byte	0
 5880 000e 0000     		.2byte	0
 5881 0010 00000000 		.4byte	.LFB20
 5882 0014 2C000000 		.4byte	.LFE20-.LFB20
 5883 0018 00000000 		.4byte	.LFB21
 5884 001c 08000000 		.4byte	.LFE21-.LFB21
 5885 0020 00000000 		.4byte	.LFB0
 5886 0024 10000000 		.4byte	.LFE0-.LFB0
 5887 0028 00000000 		.4byte	.LFB1
 5888 002c 40000000 		.4byte	.LFE1-.LFB1
 5889 0030 00000000 		.4byte	.LFB2
 5890 0034 2C000000 		.4byte	.LFE2-.LFB2
 5891 0038 00000000 		.4byte	.LFB3
 5892 003c 3C000000 		.4byte	.LFE3-.LFB3
 5893 0040 00000000 		.4byte	.LFB4
 5894 0044 54000000 		.4byte	.LFE4-.LFB4
 5895 0048 00000000 		.4byte	.LFB5
 5896 004c 2C000000 		.4byte	.LFE5-.LFB5
 5897 0050 00000000 		.4byte	.LFB7
 5898 0054 9C000000 		.4byte	.LFE7-.LFB7
 5899 0058 00000000 		.4byte	.LFB10
 5900 005c 88000000 		.4byte	.LFE10-.LFB10
 5901 0060 00000000 		.4byte	.LFB11
 5902 0064 02000000 		.4byte	.LFE11-.LFB11
 5903 0068 00000000 		.4byte	.LFB12
 5904 006c 08000000 		.4byte	.LFE12-.LFB12
 5905 0070 00000000 		.4byte	.LFB13
 5906 0074 28000000 		.4byte	.LFE13-.LFB13
 5907 0078 00000000 		.4byte	.LFB14
 5908 007c 28000000 		.4byte	.LFE14-.LFB14
 5909 0080 00000000 		.4byte	.LFB15
 5910 0084 12000000 		.4byte	.LFE15-.LFB15
 5911 0088 00000000 		.4byte	.LFB16
 5912 008c 1A000000 		.4byte	.LFE16-.LFB16
 5913 0090 00000000 		.4byte	.LFB17
 5914 0094 1A000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 167


 5915 0098 00000000 		.4byte	.LFB24
 5916 009c 10000000 		.4byte	.LFE24-.LFB24
 5917 00a0 00000000 		.4byte	.LFB25
 5918 00a4 26000000 		.4byte	.LFE25-.LFB25
 5919 00a8 00000000 		.4byte	.LFB23
 5920 00ac 14000000 		.4byte	.LFE23-.LFB23
 5921 00b0 00000000 		.4byte	.LFB18
 5922 00b4 58010000 		.4byte	.LFE18-.LFB18
 5923 00b8 00000000 		.4byte	.LFB19
 5924 00bc 1A000000 		.4byte	.LFE19-.LFB19
 5925 00c0 00000000 		.4byte	.LFB22
 5926 00c4 20000000 		.4byte	.LFE22-.LFB22
 5927 00c8 00000000 		.4byte	.LFB27
 5928 00cc 1C000000 		.4byte	.LFE27-.LFB27
 5929 00d0 00000000 		.4byte	.LFB28
 5930 00d4 1C000000 		.4byte	.LFE28-.LFB28
 5931 00d8 00000000 		.4byte	.LFB8
 5932 00dc 18000000 		.4byte	.LFE8-.LFB8
 5933 00e0 00000000 		.4byte	.LFB9
 5934 00e4 3C000000 		.4byte	.LFE9-.LFB9
 5935 00e8 00000000 		.4byte	.LFB6
 5936 00ec 2C000000 		.4byte	.LFE6-.LFB6
 5937 00f0 00000000 		.4byte	.LFB26
 5938 00f4 94000000 		.4byte	.LFE26-.LFB26
 5939 00f8 00000000 		.4byte	0
 5940 00fc 00000000 		.4byte	0
 5941              		.section	.debug_ranges,"",%progbits
 5942              	.Ldebug_ranges0:
 5943 0000 00000000 		.4byte	.LFB20
 5944 0004 2C000000 		.4byte	.LFE20
 5945 0008 00000000 		.4byte	.LFB21
 5946 000c 08000000 		.4byte	.LFE21
 5947 0010 00000000 		.4byte	.LFB0
 5948 0014 10000000 		.4byte	.LFE0
 5949 0018 00000000 		.4byte	.LFB1
 5950 001c 40000000 		.4byte	.LFE1
 5951 0020 00000000 		.4byte	.LFB2
 5952 0024 2C000000 		.4byte	.LFE2
 5953 0028 00000000 		.4byte	.LFB3
 5954 002c 3C000000 		.4byte	.LFE3
 5955 0030 00000000 		.4byte	.LFB4
 5956 0034 54000000 		.4byte	.LFE4
 5957 0038 00000000 		.4byte	.LFB5
 5958 003c 2C000000 		.4byte	.LFE5
 5959 0040 00000000 		.4byte	.LFB7
 5960 0044 9C000000 		.4byte	.LFE7
 5961 0048 00000000 		.4byte	.LFB10
 5962 004c 88000000 		.4byte	.LFE10
 5963 0050 00000000 		.4byte	.LFB11
 5964 0054 02000000 		.4byte	.LFE11
 5965 0058 00000000 		.4byte	.LFB12
 5966 005c 08000000 		.4byte	.LFE12
 5967 0060 00000000 		.4byte	.LFB13
 5968 0064 28000000 		.4byte	.LFE13
 5969 0068 00000000 		.4byte	.LFB14
 5970 006c 28000000 		.4byte	.LFE14
 5971 0070 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 168


 5972 0074 12000000 		.4byte	.LFE15
 5973 0078 00000000 		.4byte	.LFB16
 5974 007c 1A000000 		.4byte	.LFE16
 5975 0080 00000000 		.4byte	.LFB17
 5976 0084 1A000000 		.4byte	.LFE17
 5977 0088 00000000 		.4byte	.LFB24
 5978 008c 10000000 		.4byte	.LFE24
 5979 0090 00000000 		.4byte	.LFB25
 5980 0094 26000000 		.4byte	.LFE25
 5981 0098 00000000 		.4byte	.LFB23
 5982 009c 14000000 		.4byte	.LFE23
 5983 00a0 00000000 		.4byte	.LFB18
 5984 00a4 58010000 		.4byte	.LFE18
 5985 00a8 00000000 		.4byte	.LFB19
 5986 00ac 1A000000 		.4byte	.LFE19
 5987 00b0 00000000 		.4byte	.LFB22
 5988 00b4 20000000 		.4byte	.LFE22
 5989 00b8 00000000 		.4byte	.LFB27
 5990 00bc 1C000000 		.4byte	.LFE27
 5991 00c0 00000000 		.4byte	.LFB28
 5992 00c4 1C000000 		.4byte	.LFE28
 5993 00c8 00000000 		.4byte	.LFB8
 5994 00cc 18000000 		.4byte	.LFE8
 5995 00d0 00000000 		.4byte	.LFB9
 5996 00d4 3C000000 		.4byte	.LFE9
 5997 00d8 00000000 		.4byte	.LFB6
 5998 00dc 2C000000 		.4byte	.LFE6
 5999 00e0 00000000 		.4byte	.LFB26
 6000 00e4 94000000 		.4byte	.LFE26
 6001 00e8 00000000 		.4byte	0
 6002 00ec 00000000 		.4byte	0
 6003              		.section	.debug_line,"",%progbits
 6004              	.Ldebug_line0:
 6005 0000 FB050000 		.section	.debug_str,"MS",%progbits,1
 6005      0200E901 
 6005      00000201 
 6005      FB0E0D00 
 6005      01010101 
 6006              	.LASF162:
 6007 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 6007      656E7365 
 6007      5F537343 
 6007      53444765 
 6007      74436F6C 
 6008              	.LASF138:
 6009 0022 73656E73 		.ascii	"sensorElement\000"
 6009      6F72456C 
 6009      656D656E 
 6009      7400
 6010              	.LASF180:
 6011 0030 6D617843 		.ascii	"maxCp\000"
 6011      7000
 6012              	.LASF131:
 6013 0036 7363616E 		.ascii	"scanStatus\000"
 6013      53746174 
 6013      757300
 6014              	.LASF192:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 169


 6015 0041 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 6015      656E7365 
 6015      5F537343 
 6015      53444469 
 6015      7361626C 
 6016              	.LASF134:
 6017 005b 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 6017      656E7365 
 6017      5F536574 
 6017      75705769 
 6017      64676574 
 6018              	.LASF204:
 6019 0073 43617053 		.ascii	"CapSense_widgetIndex\000"
 6019      656E7365 
 6019      5F776964 
 6019      67657449 
 6019      6E646578 
 6020              	.LASF85:
 6021 0088 736E7254 		.ascii	"snrTestWidgetId\000"
 6021      65737457 
 6021      69646765 
 6021      74496400 
 6022              	.LASF43:
 6023 0098 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6023      656E7365 
 6023      5F554E44 
 6023      4546494E 
 6023      45445F45 
 6024              	.LASF8:
 6025 00ad 756E7369 		.ascii	"unsigned int\000"
 6025      676E6564 
 6025      20696E74 
 6025      00
 6026              	.LASF76:
 6027 00ba 7363616E 		.ascii	"scanCounter\000"
 6027      436F756E 
 6027      74657200 
 6028              	.LASF175:
 6029 00c6 696E7075 		.ascii	"inputSnsClk\000"
 6029      74536E73 
 6029      436C6B00 
 6030              	.LASF74:
 6031 00d2 6877436C 		.ascii	"hwClock\000"
 6031      6F636B00 
 6032              	.LASF229:
 6033 00da 433A5C55 		.ascii	"C:\\Users\\MIHAILO\\Documents\\PSoC Creator\\PSoC10"
 6033      73657273 
 6033      5C4D4948 
 6033      41494C4F 
 6033      5C446F63 
 6034 0108 315C4C61 		.ascii	"1\\Lab010.cydsn\000"
 6034      62303130 
 6034      2E637964 
 6034      736E00
 6035              	.LASF89:
 6036 0117 7363616E 		.ascii	"scanCsdISC\000"
 6036      43736449 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 170


 6036      534300
 6037              	.LASF183:
 6038 0122 70747252 		.ascii	"ptrRamWidget\000"
 6038      616D5769 
 6038      64676574 
 6038      00
 6039              	.LASF223:
 6040 012f 43794861 		.ascii	"CyHalt\000"
 6040      6C7400
 6041              	.LASF120:
 6042 0136 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 6042      656E7365 
 6042      5F424953 
 6042      545F4353 
 6042      445F5348 
 6043              	.LASF142:
 6044 0151 696E7465 		.ascii	"interruptState\000"
 6044      72727570 
 6044      74537461 
 6044      746500
 6045              	.LASF18:
 6046 0160 72656738 		.ascii	"reg8\000"
 6046      00
 6047              	.LASF200:
 6048 0165 636D6F64 		.ascii	"cmodPc\000"
 6048      506300
 6049              	.LASF171:
 6050 016c 6C667372 		.ascii	"lfsrScale\000"
 6050      5363616C 
 6050      6500
 6051              	.LASF182:
 6052 0176 70747246 		.ascii	"ptrFlashWidget\000"
 6052      6C617368 
 6052      57696467 
 6052      657400
 6053              	.LASF24:
 6054 0185 69446163 		.ascii	"iDacGain\000"
 6054      4761696E 
 6054      00
 6055              	.LASF222:
 6056 018e 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 6056      7453656E 
 6056      73655F54 
 6056      756E6553 
 6056      656E7369 
 6057              	.LASF30:
 6058 01a9 736E7343 		.ascii	"snsClkInputClock\000"
 6058      6C6B496E 
 6058      70757443 
 6058      6C6F636B 
 6058      00
 6059              	.LASF161:
 6060 01ba 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 6060      656E7365 
 6060      5F43616C 
 6060      69627261 
 6060      7465416C 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 171


 6061              	.LASF230:
 6062 01d7 43617053 		.ascii	"CapSense_IsBusy\000"
 6062      656E7365 
 6062      5F497342 
 6062      75737900 
 6063              	.LASF154:
 6064 01e7 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6064      656E7365 
 6064      5F537353 
 6064      65744D6F 
 6064      64436C6B 
 6065              	.LASF190:
 6066 0208 72656750 		.ascii	"regPtr\000"
 6066      747200
 6067              	.LASF64:
 6068 020f 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6068      656E7365 
 6068      5F52414D 
 6068      5F57445F 
 6068      4C495354 
 6069              	.LASF136:
 6070 022b 73656E73 		.ascii	"sensorId\000"
 6070      6F724964 
 6070      00
 6071              	.LASF164:
 6072 0234 70747257 		.ascii	"ptrWdgt\000"
 6072      64677400 
 6073              	.LASF10:
 6074 023c 75696E74 		.ascii	"uint32_t\000"
 6074      33325F74 
 6074      00
 6075              	.LASF169:
 6076 0245 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 6076      656E7365 
 6076      5F537353 
 6076      65745769 
 6076      64676574 
 6077              	.LASF57:
 6078 0265 69646163 		.ascii	"idacGainIndex\000"
 6078      4761696E 
 6078      496E6465 
 6078      7800
 6079              	.LASF146:
 6080 0273 6C6F6F70 		.ascii	"loopIndex\000"
 6080      496E6465 
 6080      7800
 6081              	.LASF14:
 6082 027d 666C6F61 		.ascii	"float\000"
 6082      7400
 6083              	.LASF100:
 6084 0283 73686966 		.ascii	"shift\000"
 6084      7400
 6085              	.LASF172:
 6086 0289 43617053 		.ascii	"CapSense_SsAutoTuneWidget\000"
 6086      656E7365 
 6086      5F537341 
 6086      75746F54 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 172


 6086      756E6557 
 6087              	.LASF212:
 6088 02a3 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6088      656E7365 
 6088      5F435344 
 6088      53657475 
 6088      70576964 
 6089              	.LASF151:
 6090 02bb 736E7349 		.ascii	"snsIoPtr\000"
 6090      6F507472 
 6090      00
 6091              	.LASF84:
 6092 02c4 736E734C 		.ascii	"snsList\000"
 6092      69737400 
 6093              	.LASF7:
 6094 02cc 6C6F6E67 		.ascii	"long long unsigned int\000"
 6094      206C6F6E 
 6094      6720756E 
 6094      7369676E 
 6094      65642069 
 6095              	.LASF205:
 6096 02e3 43617053 		.ascii	"CapSense_sensorIndex\000"
 6096      656E7365 
 6096      5F73656E 
 6096      736F7249 
 6096      6E646578 
 6097              	.LASF101:
 6098 02f8 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6098      656E7365 
 6098      5F464C41 
 6098      53485F49 
 6098      4F5F5354 
 6099              	.LASF86:
 6100 0311 736E7254 		.ascii	"snrTestSensorId\000"
 6100      65737453 
 6100      656E736F 
 6100      72496400 
 6101              	.LASF111:
 6102 0321 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 6102      4E6F6973 
 6102      65456E76 
 6102      6C7000
 6103              	.LASF109:
 6104 0330 77646774 		.ascii	"wdgtType\000"
 6104      54797065 
 6104      00
 6105              	.LASF170:
 6106 0339 6C667372 		.ascii	"lfsrSize\000"
 6106      53697A65 
 6106      00
 6107              	.LASF214:
 6108 0342 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6108      656E7365 
 6108      5F435344 
 6108      53657475 
 6108      70576964 
 6109              	.LASF191:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 173


 6110 035d 76616C75 		.ascii	"value\000"
 6110      6500
 6111              	.LASF148:
 6112 0363 6E657750 		.ascii	"newPinHsiomVal\000"
 6112      696E4873 
 6112      696F6D56 
 6112      616C00
 6113              	.LASF227:
 6114 0372 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6114      43313120 
 6114      352E342E 
 6114      31203230 
 6114      31363036 
 6115 03a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6115      20726576 
 6115      6973696F 
 6115      6E203233 
 6115      37373135 
 6116 03d8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6116      66756E63 
 6116      74696F6E 
 6116      2D736563 
 6116      74696F6E 
 6117              	.LASF173:
 6118 0400 6175746F 		.ascii	"autoTuneStatus\000"
 6118      54756E65 
 6118      53746174 
 6118      757300
 6119              	.LASF82:
 6120 040f 6D6F6443 		.ascii	"modCsdClk\000"
 6120      7364436C 
 6120      6B00
 6121              	.LASF70:
 6122 0419 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6122      656E7365 
 6122      5F52414D 
 6122      5F534E53 
 6122      5F535452 
 6123              	.LASF165:
 6124 0431 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 6124      656E7365 
 6124      5F537343 
 6124      53444361 
 6124      6C635072 
 6125              	.LASF31:
 6126 044b 63616C54 		.ascii	"calTarget\000"
 6126      61726765 
 6126      7400
 6127              	.LASF94:
 6128 0455 64725074 		.ascii	"drPtr\000"
 6128      7200
 6129              	.LASF188:
 6130 045b 6D6F6465 		.ascii	"mode\000"
 6130      00
 6131              	.LASF155:
 6132 0460 6D6F6443 		.ascii	"modClk\000"
 6132      6C6B00
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 174


 6133              	.LASF147:
 6134 0467 6E657750 		.ascii	"newPinPcVal\000"
 6134      696E5063 
 6134      56616C00 
 6135              	.LASF26:
 6136 0473 73696750 		.ascii	"sigPFC\000"
 6136      464300
 6137              	.LASF53:
 6138 047a 68797374 		.ascii	"hysteresis\000"
 6138      65726573 
 6138      697300
 6139              	.LASF197:
 6140 0485 64697363 		.ascii	"dischargeTime\000"
 6140      68617267 
 6140      6554696D 
 6140      6500
 6141              	.LASF112:
 6142 0493 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6142      656E7365 
 6142      5F464C41 
 6142      53485F57 
 6142      445F5354 
 6143              	.LASF140:
 6144 04ac 656C7464 		.ascii	"eltdNum\000"
 6144      4E756D00 
 6145              	.LASF55:
 6146 04b4 6C6F7742 		.ascii	"lowBslnRst\000"
 6146      736C6E52 
 6146      737400
 6147              	.LASF108:
 6148 04bf 746F7461 		.ascii	"totalNumSns\000"
 6148      6C4E756D 
 6148      536E7300 
 6149              	.LASF42:
 6150 04cb 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 6150      5453454E 
 6150      53455F43 
 6150      53445F4E 
 6150      4F495345 
 6151              	.LASF178:
 6152 04f0 6175746F 		.ascii	"autoTuneConfig\000"
 6152      54756E65 
 6152      436F6E66 
 6152      696700
 6153              	.LASF51:
 6154 04ff 6E6F6973 		.ascii	"noiseTh\000"
 6154      65546800 
 6155              	.LASF16:
 6156 0507 63686172 		.ascii	"char\000"
 6156      00
 6157              	.LASF217:
 6158 050c 43794578 		.ascii	"CyExitCriticalSection\000"
 6158      69744372 
 6158      69746963 
 6158      616C5365 
 6158      6374696F 
 6159              	.LASF32:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 175


 6160 0522 69446163 		.ascii	"iDacMod\000"
 6160      4D6F6400 
 6161              	.LASF196:
 6162 052a 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 6162      656E7365 
 6162      5F446973 
 6162      63686172 
 6162      67654578 
 6163              	.LASF149:
 6164 054a 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6164      63447252 
 6164      65675661 
 6164      6C756500 
 6165              	.LASF118:
 6166 055a 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 6166      656E7365 
 6166      5F424953 
 6166      545F4353 
 6166      445F534E 
 6167              	.LASF98:
 6168 0576 6873696F 		.ascii	"hsiomShift\000"
 6168      6D536869 
 6168      667400
 6169              	.LASF12:
 6170 0581 75696E74 		.ascii	"uint16\000"
 6170      313600
 6171              	.LASF184:
 6172 0588 70747252 		.ascii	"ptrRamSensor\000"
 6172      616D5365 
 6172      6E736F72 
 6172      00
 6173              	.LASF125:
 6174 0595 43617053 		.ascii	"CapSense_SsTrimIdacsSourcing\000"
 6174      656E7365 
 6174      5F537354 
 6174      72696D49 
 6174      64616373 
 6175              	.LASF49:
 6176 05b2 7265736F 		.ascii	"resolution\000"
 6176      6C757469 
 6176      6F6E00
 6177              	.LASF77:
 6178 05bd 73746174 		.ascii	"status\000"
 6178      757300
 6179              	.LASF159:
 6180 05c4 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 6180      656E7365 
 6180      5F43616C 
 6180      69627261 
 6180      74655769 
 6181              	.LASF117:
 6182 05dd 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 6182      656E7365 
 6182      5F534341 
 6182      4E5F4353 
 6182      585F4500 
 6183              	.LASF22:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 176


 6184 05f1 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6184      656E7365 
 6184      5F4C4F57 
 6184      5F42534C 
 6184      4E5F5253 
 6185              	.LASF157:
 6186 060c 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6186      656E7365 
 6186      5F537353 
 6186      6574536E 
 6186      73436C6F 
 6187              	.LASF48:
 6188 062a 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 6188      656E7365 
 6188      5F53454E 
 6188      53455F4D 
 6188      4554484F 
 6189              	.LASF187:
 6190 0645 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 6190      656E7365 
 6190      5F536574 
 6190      496E6163 
 6190      74697665 
 6191              	.LASF69:
 6192 0668 69646163 		.ascii	"idacComp\000"
 6192      436F6D70 
 6192      00
 6193              	.LASF93:
 6194 0671 70635074 		.ascii	"pcPtr\000"
 6194      7200
 6195              	.LASF6:
 6196 0677 6C6F6E67 		.ascii	"long long int\000"
 6196      206C6F6E 
 6196      6720696E 
 6196      7400
 6197              	.LASF110:
 6198 0685 6E756D43 		.ascii	"numCols\000"
 6198      6F6C7300 
 6199              	.LASF225:
 6200 068d 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6200      656E7365 
 6200      5F537343 
 6200      5344496E 
 6200      69746961 
 6201              	.LASF54:
 6202 06a6 6F6E4465 		.ascii	"onDebounce\000"
 6202      626F756E 
 6202      636500
 6203              	.LASF153:
 6204 06b1 61646472 		.ascii	"address\000"
 6204      65737300 
 6205              	.LASF160:
 6206 06b9 63616C69 		.ascii	"calibrateStatus\000"
 6206      62726174 
 6206      65537461 
 6206      74757300 
 6207              	.LASF83:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 177


 6208 06c9 77646774 		.ascii	"wdgtList\000"
 6208      4C697374 
 6208      00
 6209              	.LASF116:
 6210 06d2 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 6210      656E7365 
 6210      5F534341 
 6210      4E5F4353 
 6210      445F4500 
 6211              	.LASF114:
 6212 06e6 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6212      656E7365 
 6212      5F464C41 
 6212      53485F53 
 6212      54525543 
 6213              	.LASF130:
 6214 06fc 43617053 		.ascii	"CapSense_Scan\000"
 6214      656E7365 
 6214      5F536361 
 6214      6E00
 6215              	.LASF189:
 6216 070a 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 6216      656E7365 
 6216      5F577269 
 6216      74654269 
 6216      74735361 
 6217              	.LASF150:
 6218 0721 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6218      73696F6D 
 6218      52656756 
 6218      616C7565 
 6218      00
 6219              	.LASF201:
 6220 0732 43617053 		.ascii	"CapSense_dsRam\000"
 6220      656E7365 
 6220      5F647352 
 6220      616D00
 6221              	.LASF88:
 6222 0741 736E7254 		.ascii	"snrTestRawCount\000"
 6222      65737452 
 6222      6177436F 
 6222      756E7400 
 6223              	.LASF185:
 6224 0751 43617053 		.ascii	"CapSense_SsAutoTune\000"
 6224      656E7365 
 6224      5F537341 
 6224      75746F54 
 6224      756E6500 
 6225              	.LASF52:
 6226 0765 6E4E6F69 		.ascii	"nNoiseTh\000"
 6226      73655468 
 6226      00
 6227              	.LASF81:
 6228 076e 63736430 		.ascii	"csd0Config\000"
 6228      436F6E66 
 6228      696700
 6229              	.LASF20:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 178


 6230 0779 63796973 		.ascii	"cyisraddress\000"
 6230      72616464 
 6230      72657373 
 6230      00
 6231              	.LASF137:
 6232 0786 43617053 		.ascii	"CapSense_ScanExt\000"
 6232      656E7365 
 6232      5F536361 
 6232      6E457874 
 6232      00
 6233              	.LASF61:
 6234 0797 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6234      656E7365 
 6234      5F52414D 
 6234      5F57445F 
 6234      42415345 
 6235              	.LASF92:
 6236 07b3 6873696F 		.ascii	"hsiomPtr\000"
 6236      6D507472 
 6236      00
 6237              	.LASF13:
 6238 07bc 75696E74 		.ascii	"uint32\000"
 6238      333200
 6239              	.LASF105:
 6240 07c3 70747232 		.ascii	"ptr2FltrHistory\000"
 6240      466C7472 
 6240      48697374 
 6240      6F727900 
 6241              	.LASF123:
 6242 07d3 6761696E 		.ascii	"gainValue\000"
 6242      56616C75 
 6242      6500
 6243              	.LASF210:
 6244 07dd 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6244      656E7365 
 6244      5F637572 
 6244      536E7349 
 6244      4F507472 
 6245              	.LASF97:
 6246 07f2 6D61736B 		.ascii	"mask\000"
 6246      00
 6247              	.LASF158:
 6248 07f7 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 6248      656E7365 
 6248      5F537353 
 6248      6574436C 
 6248      6F636B44 
 6249              	.LASF121:
 6250 0813 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 6250      656E7365 
 6250      5F4F5045 
 6250      52415449 
 6250      4F4E5F4D 
 6251              	.LASF226:
 6252 0830 43794465 		.ascii	"CyDelayUs\000"
 6252      6C617955 
 6252      7300
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 179


 6253              	.LASF25:
 6254 083a 70747253 		.ascii	"ptrSenseClk\000"
 6254      656E7365 
 6254      436C6B00 
 6255              	.LASF133:
 6256 0846 77646774 		.ascii	"wdgtIndex\000"
 6256      496E6465 
 6256      7800
 6257              	.LASF174:
 6258 0850 736E7349 		.ascii	"snsIndex\000"
 6258      6E646578 
 6258      00
 6259              	.LASF47:
 6260 0859 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6260      656E7365 
 6260      5F53454E 
 6260      53455F4D 
 6260      4554484F 
 6261              	.LASF115:
 6262 0875 6C6F6E67 		.ascii	"long double\000"
 6262      20646F75 
 6262      626C6500 
 6263              	.LASF27:
 6264 0881 736E7343 		.ascii	"snsClkConstantR\000"
 6264      6C6B436F 
 6264      6E737461 
 6264      6E745200 
 6265              	.LASF19:
 6266 0891 72656733 		.ascii	"reg32\000"
 6266      3200
 6267              	.LASF87:
 6268 0897 736E7254 		.ascii	"snrTestScanCounter\000"
 6268      65737453 
 6268      63616E43 
 6268      6F756E74 
 6268      657200
 6269              	.LASF33:
 6270 08aa 69446163 		.ascii	"iDacComp\000"
 6270      436F6D70 
 6270      00
 6271              	.LASF72:
 6272 08b3 636F6E66 		.ascii	"configId\000"
 6272      69674964 
 6272      00
 6273              	.LASF104:
 6274 08bc 70747232 		.ascii	"ptr2SnsRam\000"
 6274      536E7352 
 6274      616D00
 6275              	.LASF194:
 6276 08c7 43617053 		.ascii	"CapSense_SsInitialize\000"
 6276      656E7365 
 6276      5F537349 
 6276      6E697469 
 6276      616C697A 
 6277              	.LASF80:
 6278 08dd 736E7353 		.ascii	"snsStatus\000"
 6278      74617475 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 180


 6278      7300
 6279              	.LASF59:
 6280 08e7 736E7343 		.ascii	"snsClkSource\000"
 6280      6C6B536F 
 6280      75726365 
 6280      00
 6281              	.LASF224:
 6282 08f4 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6282      656E7365 
 6282      5F537343 
 6282      5344456C 
 6282      65637472 
 6283              	.LASF152:
 6284 0911 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 6284      656E7365 
 6284      5F537349 
 6284      7372496E 
 6284      69746961 
 6285              	.LASF2:
 6286 092a 73686F72 		.ascii	"short int\000"
 6286      7420696E 
 6286      7400
 6287              	.LASF91:
 6288 0934 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6288      656E7365 
 6288      5F52414D 
 6288      5F535452 
 6288      55435400 
 6289              	.LASF145:
 6290 0948 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6290      656E7365 
 6290      5F537353 
 6290      6574416C 
 6290      6C494F73 
 6291              	.LASF4:
 6292 0962 6C6F6E67 		.ascii	"long int\000"
 6292      20696E74 
 6292      00
 6293              	.LASF78:
 6294 096b 77646774 		.ascii	"wdgtEnable\000"
 6294      456E6162 
 6294      6C6500
 6295              	.LASF67:
 6296 0976 64696666 		.ascii	"diff\000"
 6296      00
 6297              	.LASF75:
 6298 097b 74756E65 		.ascii	"tunerCmd\000"
 6298      72436D64 
 6298      00
 6299              	.LASF45:
 6300 0984 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6300      656E7365 
 6300      5F53454E 
 6300      53455F4D 
 6300      4554484F 
 6301              	.LASF95:
 6302 09a0 70735074 		.ascii	"psPtr\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 181


 6302      7200
 6303              	.LASF129:
 6304 09a6 43617053 		.ascii	"CapSense_SetupWidget\000"
 6304      656E7365 
 6304      5F536574 
 6304      75705769 
 6304      64676574 
 6305              	.LASF199:
 6306 09bb 636D6F64 		.ascii	"cmodDr\000"
 6306      447200
 6307              	.LASF198:
 6308 09c2 636D6F64 		.ascii	"cmodHsiom\000"
 6308      4873696F 
 6308      6D00
 6309              	.LASF63:
 6310 09cc 62757474 		.ascii	"button0\000"
 6310      6F6E3000 
 6311              	.LASF220:
 6312 09d4 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6312      656E7365 
 6312      5F435344 
 6312      43616C69 
 6312      62726174 
 6313              	.LASF122:
 6314 09f0 6761696E 		.ascii	"gainReg\000"
 6314      52656700 
 6315              	.LASF177:
 6316 09f8 6D696E53 		.ascii	"minSnsClkDivTmp\000"
 6316      6E73436C 
 6316      6B446976 
 6316      546D7000 
 6317              	.LASF202:
 6318 0a08 43617053 		.ascii	"CapSense_dsFlash\000"
 6318      656E7365 
 6318      5F647346 
 6318      6C617368 
 6318      00
 6319              	.LASF29:
 6320 0a19 66696E67 		.ascii	"fingerCap\000"
 6320      65724361 
 6320      7000
 6321              	.LASF215:
 6322 0a23 43617053 		.ascii	"CapSense_CSDScanExt\000"
 6322      656E7365 
 6322      5F435344 
 6322      5363616E 
 6322      45787400 
 6323              	.LASF79:
 6324 0a37 77646774 		.ascii	"wdgtStatus\000"
 6324      53746174 
 6324      757300
 6325              	.LASF221:
 6326 0a42 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 6326      7453656E 
 6326      73655F54 
 6326      756E6550 
 6326      72657363 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 182


 6327              	.LASF228:
 6328 0a5c 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 6328      72617465 
 6328      645F536F 
 6328      75726365 
 6328      5C50536F 
 6329              	.LASF218:
 6330 0a86 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 6330      656E7365 
 6330      5F435344 
 6330      436F6E6E 
 6330      65637453 
 6331              	.LASF44:
 6332 0a9d 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6332      656E7365 
 6332      5F53454E 
 6332      53455F4D 
 6332      4554484F 
 6333              	.LASF208:
 6334 0ab9 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 6334      656E7365 
 6334      5F637572 
 6334      72656E74 
 6334      53656E73 
 6335              	.LASF167:
 6336 0ad5 70727353 		.ascii	"prsSize\000"
 6336      697A6500 
 6337              	.LASF60:
 6338 0add 73697A65 		.ascii	"sizetype\000"
 6338      74797065 
 6338      00
 6339              	.LASF99:
 6340 0ae6 64725368 		.ascii	"drShift\000"
 6340      69667400 
 6341              	.LASF5:
 6342 0aee 6C6F6E67 		.ascii	"long unsigned int\000"
 6342      20756E73 
 6342      69676E65 
 6342      6420696E 
 6342      7400
 6343              	.LASF163:
 6344 0b00 72657456 		.ascii	"retVal\000"
 6344      616C00
 6345              	.LASF28:
 6346 0b07 76526566 		.ascii	"vRef\000"
 6346      00
 6347              	.LASF56:
 6348 0b0c 69646163 		.ascii	"idacMod\000"
 6348      4D6F6400 
 6349              	.LASF219:
 6350 0b14 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6350      656E7365 
 6350      5F495352 
 6350      5F537461 
 6350      72744578 
 6351              	.LASF106:
 6352 0b29 70747232 		.ascii	"ptr2DebounceArr\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 183


 6352      4465626F 
 6352      756E6365 
 6352      41727200 
 6353              	.LASF126:
 6354 0b39 43617053 		.ascii	"CapSense_SsTrimIdacs\000"
 6354      656E7365 
 6354      5F537354 
 6354      72696D49 
 6354      64616373 
 6355              	.LASF50:
 6356 0b4e 66696E67 		.ascii	"fingerTh\000"
 6356      65725468 
 6356      00
 6357              	.LASF66:
 6358 0b57 62736C6E 		.ascii	"bslnExt\000"
 6358      45787400 
 6359              	.LASF124:
 6360 0b5f 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 6360      656E7365 
 6360      5F494441 
 6360      435F4741 
 6360      494E5F54 
 6361              	.LASF62:
 6362 0b7f 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 6362      656E7365 
 6362      5F52414D 
 6362      5F57445F 
 6362      42555454 
 6363              	.LASF17:
 6364 0b9d 63797374 		.ascii	"cystatus\000"
 6364      61747573 
 6364      00
 6365              	.LASF1:
 6366 0ba6 756E7369 		.ascii	"unsigned char\000"
 6366      676E6564 
 6366      20636861 
 6366      7200
 6367              	.LASF127:
 6368 0bb4 7472696D 		.ascii	"trimValue\000"
 6368      56616C75 
 6368      6500
 6369              	.LASF181:
 6370 0bbe 6D617849 		.ascii	"maxIdacComp\000"
 6370      64616343 
 6370      6F6D7000 
 6371              	.LASF9:
 6372 0bca 5F5F7569 		.ascii	"__uint32_t\000"
 6372      6E743332 
 6372      5F7400
 6373              	.LASF144:
 6374 0bd5 43617053 		.ascii	"CapSense_SetPinState\000"
 6374      656E7365 
 6374      5F536574 
 6374      50696E53 
 6374      74617465 
 6375              	.LASF107:
 6376 0bea 73746174 		.ascii	"staticConfig\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 184


 6376      6963436F 
 6376      6E666967 
 6376      00
 6377              	.LASF23:
 6378 0bf7 73656E73 		.ascii	"sensorCap\000"
 6378      6F724361 
 6378      7000
 6379              	.LASF143:
 6380 0c01 696F5074 		.ascii	"ioPtr\000"
 6380      7200
 6381              	.LASF90:
 6382 0c07 7363616E 		.ascii	"scanCurrentISC\000"
 6382      43757272 
 6382      656E7449 
 6382      534300
 6383              	.LASF103:
 6384 0c16 70747232 		.ascii	"ptr2WdgtRam\000"
 6384      57646774 
 6384      52616D00 
 6385              	.LASF21:
 6386 0c22 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6386      656E7365 
 6386      5F544852 
 6386      4553484F 
 6386      4C445F54 
 6387              	.LASF176:
 6388 0c3a 6D696E53 		.ascii	"minSnsClkDiv\000"
 6388      6E73436C 
 6388      6B446976 
 6388      00
 6389              	.LASF213:
 6390 0c47 43617053 		.ascii	"CapSense_CSDScan\000"
 6390      656E7365 
 6390      5F435344 
 6390      5363616E 
 6390      00
 6391              	.LASF46:
 6392 0c58 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6392      656E7365 
 6392      5F53454E 
 6392      53455F4D 
 6392      4554484F 
 6393              	.LASF139:
 6394 0c75 73746174 		.ascii	"state\000"
 6394      6500
 6395              	.LASF141:
 6396 0c7b 656C7464 		.ascii	"eltdIndex\000"
 6396      496E6465 
 6396      7800
 6397              	.LASF132:
 6398 0c85 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6398      656E7365 
 6398      5F536361 
 6398      6E416C6C 
 6398      57696467 
 6399              	.LASF96:
 6400 0c9d 6873696F 		.ascii	"hsiomMask\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 185


 6400      6D4D6173 
 6400      6B00
 6401              	.LASF58:
 6402 0ca7 736E7343 		.ascii	"snsClk\000"
 6402      6C6B00
 6403              	.LASF193:
 6404 0cae 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6404      656E7365 
 6404      5F537353 
 6404      77697463 
 6404      6853656E 
 6405              	.LASF216:
 6406 0ccb 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6406      74657243 
 6406      72697469 
 6406      63616C53 
 6406      65637469 
 6407              	.LASF207:
 6408 0ce2 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6408      656E7365 
 6408      5F637572 
 6408      52616D53 
 6408      6E735074 
 6409              	.LASF0:
 6410 0cf8 7369676E 		.ascii	"signed char\000"
 6410      65642063 
 6410      68617200 
 6411              	.LASF209:
 6412 0d04 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6412      656E7365 
 6412      5F736361 
 6412      6E467265 
 6412      71496E64 
 6413              	.LASF65:
 6414 0d1b 62736C6E 		.ascii	"bsln\000"
 6414      00
 6415              	.LASF3:
 6416 0d20 73686F72 		.ascii	"short unsigned int\000"
 6416      7420756E 
 6416      7369676E 
 6416      65642069 
 6416      6E7400
 6417              	.LASF34:
 6418 0d33 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 6418      5F54554E 
 6418      455F434F 
 6418      4E464947 
 6418      5F545950 
 6419              	.LASF195:
 6420 0d49 696E6974 		.ascii	"initStatus\000"
 6420      53746174 
 6420      757300
 6421              	.LASF203:
 6422 0d54 43617053 		.ascii	"CapSense_ioList\000"
 6422      656E7365 
 6422      5F696F4C 
 6422      69737400 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 186


 6423              	.LASF231:
 6424 0d64 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 6424      656E7365 
 6424      5F537350 
 6424      6F737441 
 6424      6C6C5769 
 6425              	.LASF102:
 6426 0d82 70747232 		.ascii	"ptr2SnsFlash\000"
 6426      536E7346 
 6426      6C617368 
 6426      00
 6427              	.LASF156:
 6428 0d8f 6E657752 		.ascii	"newRegValue\000"
 6428      65675661 
 6428      6C756500 
 6429              	.LASF179:
 6430 0d9b 6D617852 		.ascii	"maxRaw\000"
 6430      617700
 6431              	.LASF11:
 6432 0da2 75696E74 		.ascii	"uint8\000"
 6432      3800
 6433              	.LASF15:
 6434 0da8 646F7562 		.ascii	"double\000"
 6434      6C6500
 6435              	.LASF68:
 6436 0daf 6E656742 		.ascii	"negBslnRstCnt\000"
 6436      736C6E52 
 6436      7374436E 
 6436      7400
 6437              	.LASF35:
 6438 0dbd 70617261 		.ascii	"param0\000"
 6438      6D3000
 6439              	.LASF36:
 6440 0dc4 70617261 		.ascii	"param1\000"
 6440      6D3100
 6441              	.LASF37:
 6442 0dcb 70617261 		.ascii	"param2\000"
 6442      6D3200
 6443              	.LASF38:
 6444 0dd2 70617261 		.ascii	"param3\000"
 6444      6D3300
 6445              	.LASF39:
 6446 0dd9 70617261 		.ascii	"param4\000"
 6446      6D3400
 6447              	.LASF40:
 6448 0de0 70617261 		.ascii	"param5\000"
 6448      6D3500
 6449              	.LASF41:
 6450 0de7 70617261 		.ascii	"param6\000"
 6450      6D3600
 6451              	.LASF166:
 6452 0dee 736E7343 		.ascii	"snsClkDivider\000"
 6452      6C6B4469 
 6452      76696465 
 6452      7200
 6453              	.LASF168:
 6454 0dfc 6D6F6443 		.ascii	"modClkDivider\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\cc1I7vna.s 			page 187


 6454      6C6B4469 
 6454      76696465 
 6454      7200
 6455              	.LASF73:
 6456 0e0a 64657669 		.ascii	"deviceId\000"
 6456      63654964 
 6456      00
 6457              	.LASF128:
 6458 0e13 77696467 		.ascii	"widgetStatus\000"
 6458      65745374 
 6458      61747573 
 6458      00
 6459              	.LASF119:
 6460 0e20 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 6460      656E7365 
 6460      5F424953 
 6460      545F4353 
 6460      585F534E 
 6461              	.LASF135:
 6462 0e3c 77696467 		.ascii	"widgetId\000"
 6462      65744964 
 6462      00
 6463              	.LASF206:
 6464 0e45 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 6464      656E7365 
 6464      5F726571 
 6464      75657374 
 6464      5363616E 
 6465              	.LASF186:
 6466 0e63 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 6466      656E7365 
 6466      5F537349 
 6466      6E697469 
 6466      616C697A 
 6467              	.LASF211:
 6468 0e87 43617053 		.ascii	"CapSense_idacGainTable\000"
 6468      656E7365 
 6468      5F696461 
 6468      63476169 
 6468      6E546162 
 6469              	.LASF71:
 6470 0e9e 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6470      656E7365 
 6470      5F52414D 
 6470      5F534E53 
 6470      5F4C4953 
 6471              	.LASF113:
 6472 0ebb 77646774 		.ascii	"wdgtArray\000"
 6472      41727261 
 6472      7900
 6473              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
