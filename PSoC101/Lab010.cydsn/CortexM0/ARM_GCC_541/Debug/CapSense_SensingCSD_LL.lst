ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSDConfigIDACs,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSDConfigIDACs, %function
  24              	CapSense_SsCSDConfigIDACs:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \file CapSense_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \see CapSense v7.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 2


  32:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Structure.h"
  42:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  45:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #include "CapSense_SelfTest.h"
  46:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif
  47:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
  53:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * API Constants
  54:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
  55:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  57:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN)
  59:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_CSD_AZ_ENABLE_CFG                  (CapSense_CSD_AZ_EN_MASK)
  60:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  61:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_CSD_AZ_ENABLE_CFG                  (0uL)
  62:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN) */
  63:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  64:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
  65:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  66:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                      CapSense_HSCMP_INVERT_MASK)
  67:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  68:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  69:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
  70:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  71:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_HSCMP_INIT_MASK                        (CapSense_HSCMP_EN_MASK | CapSense_CSD_
  72:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  73:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_SW_DSI_SEL_CMODPAD | CapSense
  75:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  78:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  79:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  80:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  81:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  82:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* CY_ID285392 */
  83:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_FILTER_DELAY_MAX                   (CapSense_CONFIG_FILTER_DELAY_4_CYCLES)
  84:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_EXTRA_COUNTS_MAX                   (CapSense_FILTER_DELAY_MAX + 5u + 20u)
  85:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  86:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
  87:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set IDAC ranges */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 3


  89:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN)
  90:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (CapSense_IDAC_MOD_RANGE_MASK)
  91:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (CapSense_IDAC_COMP_RANGE_MASK)
  92:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  93:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (0u)
  94:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (0u)
  95:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN) */
  96:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  98:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
  99:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
 100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_IDAC_COMP_MODE_FIXED |\
 101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE |\
 102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_COMP_RANGE)
 103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
 105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE)
 106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
 112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Variables
 113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
 114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG;
 117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG | CapSense_DEFAULT_MODULATION_MODE;
 119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static uint32 CapSense_counterResolution = CapSense_CNT_RESOLUTION_12_BITS;
 120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static uint8 CapSense_eleCsdDisconnectFlag = 0u;
 124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN))
 125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Static Function Prototypes
 132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /**
 135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \addtogroup group_c_internal
 137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \{
 138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** */
 139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay);
 142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void);
 144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 4


 146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
 149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target);
 150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDCalibrate(uint32 widgetId, uint32 target);
 151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDNormalizeIdac(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
 153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
 155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static uint32 CapSense_SsCSDSwitchIdacGain(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget);
 156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))  */
 159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void);
 162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void);
 164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void);
 166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void);
 167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void);
 168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /** \}
 171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \endcond */
 172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsSetShieldDelay
 177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param delay
 187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 10ns delay
 195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 50ns delay
 196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 5ns delay
 199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 10ns delay
 200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 20ns delay
 201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 5


 203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay)
 204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= (uint32)(~CapSense_CONFIG_SHIELD_DELAY_MASK);
 207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= (delay << CapSense_SHIELD_DELAY_SHIFT);
 208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldTank
 213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This function configures Csh pin
 217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void)
 225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK,
 228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (uint32)(CapSense_HSIOM_SEL_AMUXB << CapSense_CSH_HSIOM_SHIFT));
 229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  (CapSense_DISABLE == CapSense_CSDV2))
 232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
 234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint32)(CapSense_CSH_PC_MASK << CapSense_CSH_PC_SHIFT),
 235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint32)(CapSense_CSH_PC_STRONG_MODE << CapSense_CSH_PC_SHIFT));
 236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, (uint32)(CapSense_DR_MASK << CapSense_C
 238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set output port register to 0 to connect to GND */
 240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, (uint32)(CapSense_DR_MASK << CapSense_C
 241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldElectrodes
 248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   the CapSense_shieldIoList structure.
 257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDEnableShieldElectrodes(void)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 6


 260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_SHIELD);
 262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDDisableShieldElectrodes
 267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in  the CapSense_shieldIoList structure.
 276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDDisableShieldElectrodes(void)
 279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetShieldElectrodesState(CapSense_SNS_CONNECTION_GROUND);
 281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSetShieldElectrodesState
 286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   Sets specified shield electrode pin connection state for all dedicated
 290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   shield electrodes.
 291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates following registers for each shield
 294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode:
 295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - port configuration register
 296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - pin data register
 297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - pin HSIOM register
 298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The shield electrodes port and pin configuration registers addresses are
 299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in the CapSense_shieldIoList structure.
 300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param state
 302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   A new state of the shield electrodes. Available values:
 303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_GROUND - disconnects electrode from
 304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Strong Drive
 305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_HIGHZ - disconnects electrode from
 306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Analog Hi-Z
 307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_SHIELD - connects electrode to
 308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       CSD hardware block
 309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - CapSense_SNS_CONNECTION_UNDEFINED - sets the same electrode
 310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *       connection as for CapSense_SNS_CONNECTION_GROUND
 311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDSetShieldElectrodesState(uint32 state)
 314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8  interruptState;
 316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 7


 317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 loopIndex;
 318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newPinPcVal;
 320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newPinHsiomVal;
 321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpPcDrRegValue;
 323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpHsiomRegValue;
 324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SHIELD_IO_STRUCT const *shieldIoPtr;
 326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             switch(state)
 328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_GROUND:
 330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_HIGHZ:
 334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 case CapSense_SNS_CONNECTION_SHIELD:
 338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 default:
 342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
 345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             shieldIoPtr = &CapSense_shieldIoList[0u];
 348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for (loopIndex = 0u; loopIndex < CapSense_CSD_TOTAL_SHIELD_COUNT; loopIndex++)
 349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 interruptState = CyEnterCriticalSection();
 351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue = CY_GET_REG32 (shieldIoPtr->hsiomPtr);
 353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
 354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->pcPtr);
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << shieldIoPtr->shift);
 358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
 359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->pcPtr, tmpPcDrRegValue);
 360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpHsiomRegValue |=  (newPinHsiomVal << shieldIoPtr->hsiomShift);
 362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->drPtr);
 365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(1uL << shieldIoPtr->drShift);
 366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->drPtr, tmpPcDrRegValue);
 367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyExitCriticalSection(interruptState);
 369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get next electrode */
 371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 shieldIoPtr++;
 372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 8


 374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetModeSnsClockDivider
 380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_SENSE_PERIOD register with
 387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_configCsd variable with
 389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
 402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set configuration */
 404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~(CapSense_CONFIG_PRS_SELECT_MASK | CapSense_CSD_PRS_12_BIT);
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= snsClkSource;
 406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set sense clock divider */
 408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetSnsClockDivider(snsClkDivider);
 409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDSetFilterDelay
 416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   variable CapSense_configCsd
 424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void)
 430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 9


 431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~CapSense_CONFIG_FILTER_DELAY_MASK;
 436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
 439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
 442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_24MHZ;
 446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_48MHZ;
 450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
 453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigIDACs
 460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   enabled or disabled.
 468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void)
 471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
  27              		.loc 1 471 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSD_IDACA_PTR, CapSense_IDAC_MOD_DEFAULT_CFG);
 474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSD_IDACB_PTR, CapSense_IDAC_COMP_DEFAULT_CFG);
 476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CapSense_DEFAULT_CSD_IDAC_CONFIG);
  32              		.loc 1 479 0
  33 0000 014A     		ldr	r2, .L2
  34 0002 024B     		ldr	r3, .L2+4
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 10


  35 0004 1A60     		str	r2, [r3]
 480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) &
 482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                 ~(CapSense_IDAC_MOD_MODE_MASK |
 483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                   CapSense_IDAC_MOD_MASK));
 484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) |
 485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_CSD_IDAC_CONFIG);
 486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
  36              		.loc 1 488 0
  37              		@ sp needed
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00020001 		.word	16777728
  43 000c 08000840 		.word	1074266120
  44              		.cfi_endproc
  45              	.LFE1:
  46              		.size	CapSense_SsCSDConfigIDACs, .-CapSense_SsCSDConfigIDACs
  47              		.global	__aeabi_uidiv
  48              		.section	.text.CapSense_SsCSDCalibrateCheck,"ax",%progbits
  49              		.align	2
  50              		.code	16
  51              		.thumb_func
  52              		.type	CapSense_SsCSDCalibrateCheck, %function
  53              	CapSense_SsCSDCalibrateCheck:
  54              	.LFB16:
 489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDInitialize
 493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This API initializes the CSD module.
 497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
 506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   9) Configures ModClk;
 509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 11


 517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Enables the clocks;
 520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Sets the shield delay;
 521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDInitialize(void)
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
 528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_dsRam.scanCurrentISC != CapSense_dsRam.scanCsdISC)
 532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_dsRam.scanCsdISC);
 534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldElectrodes();
 541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure Csh */
 545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
 546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_DischargeExtCapacitors(CapSense_EXT_CAP_DISCHARGE_TIME);
 552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR, CapSense_DEFAULT_SENSE_DUTY_SEL);
 555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET);
 562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL);
 563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL);
 564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL);
 565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_AMBUF_PWR_MODE_OFF);
 566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_SW_SHIELD_SEL);
 567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_SW_HS_P_SEL);
 568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_SW_HS_N_SEL);
 569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_HSCMP_CFG);
 570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK,
 573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 12


 574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set output port register to 0 to connect to GND */
 576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_Cmod__0__MASK, 0u);
 577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_SW_BYP_SEL_SW_BYA_MASK;
 581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, newRegValue);
 582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
 584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION)
 585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE);
 586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #elif (CapSense_CSD__CSHIELD_PAD == CapSense_CMOD_CONNECTION)
 587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE);
 588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE);
 590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION) */
 591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure shield driving path */
 593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, CapSense_SW_BYP_SEL_SW_BYA_MASK | CapSense_SW_BYP
 596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to HSCMP positive input */
 598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, 0x00000000uL);
 599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_SW_REFGEN_SEL_SW_IAIB_MASK
 606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK;
 611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR, CapSense_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV)
 618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_LV);
 621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
 625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
 627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 13


 631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_NORM);
 633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_OFF);
 635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_HV);
 643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_HI);
 647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_IDAC_SINKING != CapSense_CSD_IDAC_CONFIG)
 649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                           CapSense_SW_AMUXBUF_SEL_S
 651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
 654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV) */
 661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure ModClk */
 666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
 667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set other CSD configurations */
 669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure HW block filter delay */
 674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDSetFilterDelay();
 675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Enable power to sub-blocks */
 678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
 679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
 680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
 681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR, CapSense_CSD_AUTO_ZERO_TIME);
 685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, 0x00000000);
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 14


 688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR, CapSense_CSD_FINE_INIT_TIME);
 691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
 698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK,
 699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
 710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) &&\
 714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE))
 715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
 717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDElectrodeCheck
 723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****  * CapSense_CSDSetupWidgetExt() API and if yes disconnects them.
 728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function checks if CapSense_eleCsdDisconnectFlag is set.
 731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
 732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_curSnsIOPtr and
 733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_curFlashSnsPtr contains the previous data for Ganged
 734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sensors.
 735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDElectrodeCheck(void)
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
 741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if (CapSense_ENABLE == CapSense_eleCsdDisconnectFlag)
 744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 15


 745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal = CapSense_curFlashSnsPtr->numPins;
 752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get IO pointer  */
 754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
 755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
 758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_curSnsIOPtr++;
 761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     tempVal--;
 762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while (0u != tempVal);
 763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable sensor */
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_eleCsdDisconnectFlag = 0u;
 775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetUpIdacs
 781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
 789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDSetUpIdacs(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
 799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 interruptState;
 801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 idacGain;
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 16


 802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Getting IDAC gain */
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     idacGain = CapSense_idacGainTable[ptrWdgt->idacGainIndex].gainReg;
 805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 idacARegValue;
 808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 idacBRegValue;
 810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get IDACA Value */
 815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue = CY_GET_REG32(CapSense_CSD_IDACA_PTR);
 816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear IDACA value and gain */
 818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue &= ~(CapSense_IDAC_MOD_VAL_MASK | CapSense_IDAC_GAIN_MASK);
 819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set IDACA value gain */
 821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_scanFreqIndex];
 825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue |= idacGain;
 834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSD_IDACA_PTR, idacARegValue);
 837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IDACB Value */
 842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue = CY_GET_REG32(CapSense_CSD_IDACB_PTR);
 843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear IDACB value and gain */
 845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue &= ~(CapSense_IDAC_COMP_VAL_MASK | CapSense_IDAC_GAIN_MASK);
 846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set IDACB value and gain */
 848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
 849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacBRegValue |= idacGain;
 850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update IDACA register with new value */
 852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSD_IDACB_PTR, idacBRegValue);
 853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyExitCriticalSection(interruptState);
 854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 17


 859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN)
 862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get Idac Value */
 871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
 872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear Idac value and gain */
 874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_COMP_MASK |
 876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_IDAC_GAIN_MASK | (CapSense_IDAC_GAIN_MASK << CapSense_IDAC_COMP_DATA_OFFSE
 877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_GAIN_MASK);
 879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Idac value and gain */
 882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (ptrIdacMod[CapSense_scanFreqIndex] |
 884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            (uint32)((uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex]
 885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            CapSense_IDAC_COMP_DATA_OFFSET));
 886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (idacGain << CapSense_IDAC_COMP_DATA_OFFSET);
 888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= ptrIdacMod[CapSense_scanFreqIndex];
 890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
 893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDGetNumberOfConversions
 903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param
 913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  resolution The widget resolution.
 915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 18


 916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 sns
 921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
 923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapSense_C
 924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapS
 926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = (uint32)(1uL << resolution);
 929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_ENABLE != CapSense_CSDV2_REF9P6UA_EN)
 931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
 938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_3_CYCLES;
 946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
 948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_4_CYCLES;
 950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* CY_ID285392: Apply correction to oveflow for 16 bit resolution */
 957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= CapSense_EXTRA_COUNTS_MAX;
 960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
 969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
 970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
 971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         switch (snsClkSrc)
 972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 19


 973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
 974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
 975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
 980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (void)snsClkSrc;
 984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigClock
 993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
1000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConfigClock(void)
1003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
1005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkSrc;
1006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegValue;
1007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
1010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
1012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_dsRam.snsCsdClk;
1014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
1022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 20


1030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_SsCSDInitialize() before */
1031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
1033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
1036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
1040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
1043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
1047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
1049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_CLK_SOURCE_PRS8 == snsClkSrc) ||
1050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == snsClkSrc))
1051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
1053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
1062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             switch (snsClkSrc)
1063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
1065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
1066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
1067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider >>= 1;
1068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsClkDivider == 0u)
1069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = 1u;
1071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
1073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
1075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
1076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)) */
1080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCalculateScanDuration
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 21


1087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClk divider.
1096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
1097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_counterResolution global variable and used in
1099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_SsCSDStartSample() function to trigger the scan process.
1100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param wdgtIndex
1102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDCalculateScanDuration(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
1106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
1109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsClkDivider;
1110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get Number Of Conversions */
1112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = CapSense_dsRam.snsCsdClk;
1114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get SnsClck divider for rows or columns */
1117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorInde
1118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 else
1122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->snsClk);
1124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
1126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resol
1131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT_CONV_CNT_MA
1134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapSen
1137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidget
1143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 22


1144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDScan() function to start scanning.
1149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_SetupWidget() function should be used instead.
1153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_CSDScan()
1160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
1166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  widgetId
1173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidget(uint32 widgetId)
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
1186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
1188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDElectrodeCheck();
1196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
1200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 23


1201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update status register in Data structure */
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status &= ~CapSense_STATUS_WDGT0_MASK;
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
1204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
1207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****           (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)) && \
1208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          ((!(CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
1209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****           (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)))
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
1211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidgetExt
1217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_SetupWidgetExt() function should be used instead.
1231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does the same as CapSense_CSDSetupWidget() and also
1233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  does the following tasks:
1234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  next sensors in a widget.
1238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function is called to scan the sensor.
1241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 24


1258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  specific widget.
1260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense Configuration header file defined as
1262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
1263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
1269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
1272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDSetupWidget(widgetId);
1279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /* Setup Idac Value */
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetUpIdacs(ptrWdgt);
1282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
1286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt(widgetId, sensorId);
1290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr += CapSense_sensorIndex;
1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save sns pointer */
1298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Sns
1300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_sensorIndex;
1301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_eleCsdDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
1304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_ISR_StartEx(&CapSense_CSDPostSingleScan);
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDStartSample
1311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Starts the CSD conversion.
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 25


1315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the CapSense_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   block using CapSense_CSDConnectSns.
1320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2. Precharges Cmod;
1323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
1325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDStartSample(void)
1328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
1330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 interruptState;
1331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntDisable(CapSense_ISR_NUMBER);
1342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_INIT_MASK);
1345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
1347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
1348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
1349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
1354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Third-generation HW block section */
1363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
1367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
1368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHARGE_CONFIG_C
1369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
1371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 26


1372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDClockRestart();
1375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
1380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayCycles(CapSense_GLITCH_ELIMINATION_CYCLES);
1382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SNS_CLK_SOURCE != CapSense_CLK_SOURCE_DIRECT) */
1383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScanExt
1394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
1399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
1404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_ScanExt() function should be used instead.
1408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by the CapSense_CSDSetupWidgetExt() function. It does the following
1411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  tasks:
1412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_dsRam structure.
1413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts single scanning.
1416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() API prior to calling this function.
1425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by using the CapSense_CSDScanExt() function. In this case, calling
1427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() is not required every time before the
1428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function. If a previous scan was triggered in
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 27


1429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
1430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
1431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() API prior to calling the
1433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function.
1434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt(), the CapSense_CSDDisconnectSns()
1437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  function can be used.
1438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScanExt(void)
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
1443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
1444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
1446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
1449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
1450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= (CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
1453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_ENABLE == CapSense_CSDV2)
1461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****               (CapSense_ENABLE == CapSense_CSDV2)*/
1466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDStartSample();
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScan
1473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CapSense_Scan() function should be used instead.
1485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 28


1486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDSetupWidget() function. It does the following tasks:
1488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       the next sensors in a widget.
1492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_Scan() API if the given
1495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
1496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
1503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  preconfigured by the CapSense_CSDSetupWidget() function if any other
1504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScan(void)
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
1511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_dsRam.scanCurrentISC != CapSense_dsRam.scanCsdISC)
1514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_dsRam.scanCsdISC);
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
1517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /*
1520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * Update CapSense_sensorIndex with the first sensor in
1521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
1522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       */
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = 0u;
1524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup Idac Value */
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****    CapSense_SsCSDSetUpIdacs(ptrWdgt);
1537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].staticCon
1541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 29


1543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScanGanged);
1545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
1553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
1558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Start scanning */
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDScanExt();
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConnectSensorExt
1573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   PC registers.
1582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 30


1600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK ==
1604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect sensor */
1629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect sensor */
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDDisconnectSnsExt
1640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   is set to Shield.
1652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 31


1657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK) == CapSense_GANGED_SNS_MASK)
1675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDConnectSns
1709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 32


1714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
1724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDConnectSns() function.
1727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDConnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
1736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
1737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get offsets for sensor */
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
1750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_GP
1753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDDisconnectSns
1763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function works identically to CapSense_CSDConnectSns() except
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 33


1771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDDisconnectSns() function.
1779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDDisconnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
1788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newPcRegValue;
1791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newHsiomRegValue;
1792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue  = CY_GET_REG32(snsAddrPtr->pcPtr);
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
1800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue  = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if(CapSense_SNS_CONNECTION_GROUND == CapSense_dsRam.scanCurrentISC)
1806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_STRONG << pinModeShift);
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     else
1811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_ALG_HIZ << pinModeShift);
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if(CapSense_SNS_CONNECTION_SHIELD == CapSense_dsRam.scanCurrentISC)
1814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect to Shield */
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newHsiomRegValue |= (CapSense_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
1821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set logic 0 to port data register */
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32)1u 
1823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 34


1828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
1829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrateCheck
1831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
1834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
1837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function verifies that raw counts are within acceptable range
1838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  defined by target and calibration error parameters.
1839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
1841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The desired widget ID.
1842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
1844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Raw count target in percentage.
1845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
1851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target)
1852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
  55              		.loc 1 1852 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 8
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL0:
  60 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  61              		.cfi_def_cfa_offset 20
  62              		.cfi_offset 4, -20
  63              		.cfi_offset 5, -16
  64              		.cfi_offset 6, -12
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 4746     		mov	r7, r8
  68 0004 80B4     		push	{r7}
  69              		.cfi_def_cfa_offset 24
  70              		.cfi_offset 8, -24
  71 0006 82B0     		sub	sp, sp, #8
  72              		.cfi_def_cfa_offset 32
  73 0008 0500     		movs	r5, r0
  74              	.LVL1:
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawcount;
1855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
1856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 freqChannel;
1857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 upperLimit;
1858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 lowerLimit;
1859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
  75              		.loc 1 1861 0
  76 000a 4301     		lsls	r3, r0, #5
  77 000c 214A     		ldr	r2, .L16
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 35


  78 000e D318     		adds	r3, r2, r3
  79              	.LVL2:
  80 0010 5A68     		ldr	r2, [r3, #4]
  81              	.LVL3:
1862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
  82              		.loc 1 1862 0
  83 0012 9C68     		ldr	r4, [r3, #8]
  84              	.LVL4:
1863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate acceptable raw count range based on the resolution, target and error */
1865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         rawcount = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
  85              		.loc 1 1865 0
  86 0014 1388     		ldrh	r3, [r2]
  87              	.LVL5:
  88 0016 0127     		movs	r7, #1
  89 0018 9F40     		lsls	r7, r7, r3
  90 001a 013F     		subs	r7, r7, #1
  91              	.LVL6:
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
1867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (target > CapSense_CSD_CALIBRATION_ERROR)
  92              		.loc 1 1867 0
  93 001c 0A29     		cmp	r1, #10
  94 001e 02D9     		bls	.L11
1868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             lowerLimit = target - CapSense_CSD_CALIBRATION_ERROR;
  95              		.loc 1 1869 0
  96 0020 0800     		movs	r0, r1
  97              	.LVL7:
  98 0022 0A38     		subs	r0, r0, #10
  99              	.LVL8:
 100 0024 00E0     		b	.L5
 101              	.LVL9:
 102              	.L11:
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = 0u;
 103              		.loc 1 1866 0
 104 0026 0020     		movs	r0, #0
 105              	.LVL10:
 106              	.L5:
1870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = target + CapSense_CSD_CALIBRATION_ERROR;
 107              		.loc 1 1871 0
 108 0028 0A23     		movs	r3, #10
 109 002a 9846     		mov	r8, r3
 110 002c 8844     		add	r8, r8, r1
 111              	.LVL11:
1872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (upperLimit > CapSense_PERCENTAGE_100)
 112              		.loc 1 1872 0
 113 002e 4346     		mov	r3, r8
 114 0030 642B     		cmp	r3, #100
 115 0032 01D9     		bls	.L6
1873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             upperLimit = CapSense_PERCENTAGE_100;
 116              		.loc 1 1874 0
 117 0034 6423     		movs	r3, #100
 118 0036 9846     		mov	r8, r3
 119              	.LVL12:
 120              	.L6:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 36


1875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         lowerLimit = (rawcount * lowerLimit) / CapSense_PERCENTAGE_100;
 121              		.loc 1 1876 0
 122 0038 7843     		muls	r0, r7
 123              	.LVL13:
 124 003a 6421     		movs	r1, #100
 125              	.LVL14:
 126 003c FFF7FEFF 		bl	__aeabi_uidiv
 127              	.LVL15:
 128 0040 0600     		movs	r6, r0
 129              	.LVL16:
1877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         upperLimit = (rawcount * upperLimit) / CapSense_PERCENTAGE_100;
 130              		.loc 1 1877 0
 131 0042 4046     		mov	r0, r8
 132              	.LVL17:
 133 0044 7843     		muls	r0, r7
 134 0046 6421     		movs	r1, #100
 135 0048 FFF7FEFF 		bl	__aeabi_uidiv
 136              	.LVL18:
 137 004c 0200     		movs	r2, r0
 138              	.LVL19:
1878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check if raw count is in the defined range */
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
 139              		.loc 1 1880 0
 140 004e 0027     		movs	r7, #0
 141              	.LVL20:
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawcount;
 142              		.loc 1 1853 0
 143 0050 0023     		movs	r3, #0
 144 0052 0193     		str	r3, [sp, #4]
 145              		.loc 1 1880 0
 146 0054 13E0     		b	.L7
 147              	.LVL21:
 148              	.L9:
1881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawcount = ptrRamSensor->raw[freqChannel];
 149              		.loc 1 1884 0
 150 0056 4B00     		lsls	r3, r1, #1
 151 0058 185B     		ldrh	r0, [r3, r4]
 152              	.LVL22:
1885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if ((rawcount < lowerLimit) || (rawcount > upperLimit))
 153              		.loc 1 1885 0
 154 005a 8642     		cmp	r6, r0
 155 005c 08D8     		bhi	.L13
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 156              		.loc 1 1882 0 discriminator 1
 157 005e 0B00     		movs	r3, r1
 158              		.loc 1 1885 0 discriminator 1
 159 0060 8242     		cmp	r2, r0
 160 0062 01D2     		bcs	.L10
 161 0064 07E0     		b	.L14
 162              	.LVL23:
 163              	.L15:
 164 0066 0123     		movs	r3, #1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 37


 165              	.L10:
 166              	.LVL24:
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 167              		.loc 1 1882 0 discriminator 1
 168 0068 591E     		subs	r1, r3, #1
 169              	.LVL25:
 170 006a 002B     		cmp	r3, #0
 171 006c F3D1     		bne	.L9
 172 006e 04E0     		b	.L8
 173              	.LVL26:
 174              	.L13:
1886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     calibrateStatus = CYRET_BAD_DATA;
 175              		.loc 1 1887 0
 176 0070 0623     		movs	r3, #6
 177 0072 0193     		str	r3, [sp, #4]
 178              	.LVL27:
 179 0074 01E0     		b	.L8
 180              	.LVL28:
 181              	.L14:
 182 0076 0623     		movs	r3, #6
 183 0078 0193     		str	r3, [sp, #4]
 184              	.LVL29:
 185              	.L8:
1888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     break;
1889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamSensor++;
 186              		.loc 1 1891 0 discriminator 2
 187 007a 0A34     		adds	r4, r4, #10
 188              	.LVL30:
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 189              		.loc 1 1880 0 discriminator 2
 190 007c 0137     		adds	r7, r7, #1
 191              	.LVL31:
 192              	.L7:
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 193              		.loc 1 1880 0 is_stmt 0 discriminator 1
 194 007e 6B01     		lsls	r3, r5, #5
 195 0080 0449     		ldr	r1, .L16
 196 0082 CB18     		adds	r3, r1, r3
 197 0084 1B8B     		ldrh	r3, [r3, #24]
 198 0086 9F42     		cmp	r7, r3
 199 0088 EDD3     		bcc	.L15
1892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return (calibrateStatus);
1894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 200              		.loc 1 1894 0 is_stmt 1
 201 008a 0198     		ldr	r0, [sp, #4]
 202 008c 02B0     		add	sp, sp, #8
 203              		@ sp needed
 204              	.LVL32:
 205              	.LVL33:
 206              	.LVL34:
 207              	.LVL35:
 208 008e 04BC     		pop	{r2}
 209 0090 9046     		mov	r8, r2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 38


 210 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 211              	.L17:
 212              		.align	2
 213              	.L16:
 214 0094 00000000 		.word	CapSense_dsFlash
 215              		.cfi_endproc
 216              	.LFE16:
 217              		.size	CapSense_SsCSDCalibrateCheck, .-CapSense_SsCSDCalibrateCheck
 218              		.section	.text.CapSense_SsCSDSwitchIdacGain,"ax",%progbits
 219              		.align	2
 220              		.code	16
 221              		.thumb_func
 222              		.type	CapSense_SsCSDSwitchIdacGain, %function
 223              	CapSense_SsCSDSwitchIdacGain:
 224              	.LFB17:
1895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
1898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
1899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSwitchIdacGain
1900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
1901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
1903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
1906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Conditions of switching to the lower IDAC gains:
1908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  1. The current IDAC gain is not the lowest one.
1909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  2. The maximum IDAC at gain switching will not be out of range.
1910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  3. The minimum IDAC is still below the acceptable range.
1911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param ptrFlashWidget
1913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
1914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \return Returns the status of the operation:
1916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - Zero     - Gain switching is not needed.
1917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   - Non-Zero - Gain was switched to the lower one.
1918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
1920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static uint32 CapSense_SsCSDSwitchIdacGain(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget)
1921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 225              		.loc 1 1921 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              	.LVL36:
 230 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 231              		.cfi_def_cfa_offset 24
 232              		.cfi_offset 3, -24
 233              		.cfi_offset 4, -20
 234              		.cfi_offset 5, -16
 235              		.cfi_offset 6, -12
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 4F46     		mov	r7, r9
 239 0004 4646     		mov	r6, r8
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 39


 240 0006 C0B4     		push	{r6, r7}
 241              		.cfi_def_cfa_offset 32
 242              		.cfi_offset 8, -32
 243              		.cfi_offset 9, -28
 244 0008 0700     		movs	r7, r0
 245              	.LVL37:
1922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 ratio;
1923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxIdac;
1924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minIdac;
1925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 status = 0u;
1926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
1927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 gainIndex;
1928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
 246              		.loc 1 1929 0
 247 000a 4668     		ldr	r6, [r0, #4]
 248              	.LVL38:
1930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 uint32 snsIndex;
1932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 249              		.loc 1 1932 0
 250 000c 8468     		ldr	r4, [r0, #8]
 251              	.LVL39:
1933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
1934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             gainIndex = ptrRamWidget->idacGainIndex;
 252              		.loc 1 1935 0
 253 000e B57A     		ldrb	r5, [r6, #10]
 254 0010 A846     		mov	r8, r5
 255              	.LVL40:
1936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Find maximum and minimum IDACs */
1938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxIdac = 0u;
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             minIdac = CapSense_CSD_CAL_IDAC_MAX_VALUE;
1940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 256              		.loc 1 1940 0
 257 0012 0123     		movs	r3, #1
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 258              		.loc 1 1939 0
 259 0014 7F20     		movs	r0, #127
 260              	.LVL41:
1938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             minIdac = CapSense_CSD_CAL_IDAC_MAX_VALUE;
 261              		.loc 1 1938 0
 262 0016 0022     		movs	r2, #0
 263 0018 9146     		mov	r9, r2
 264              		.loc 1 1940 0
 265 001a 08E0     		b	.L19
 266              	.LVL42:
 267              	.L22:
1941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (maxIdac < ptrRamWidget->idacMod[freqChannel])
 268              		.loc 1 1942 0
 269 001c B318     		adds	r3, r6, r2
 270 001e 5B7A     		ldrb	r3, [r3, #9]
 271 0020 9945     		cmp	r9, r3
 272 0022 00D2     		bcs	.L20
1943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 40


1944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     maxIdac = ptrRamWidget->idacMod[freqChannel];
 273              		.loc 1 1944 0
 274 0024 9946     		mov	r9, r3
 275              	.LVL43:
 276              	.L20:
1945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (minIdac > ptrRamWidget->idacMod[freqChannel])
 277              		.loc 1 1946 0
 278 0026 9842     		cmp	r0, r3
 279 0028 00D9     		bls	.L21
1947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     minIdac = ptrRamWidget->idacMod[freqChannel];
 280              		.loc 1 1948 0
 281 002a 1800     		movs	r0, r3
 282              	.LVL44:
 283              	.L21:
 284 002c 1300     		movs	r3, r2
 285              	.LVL45:
 286              	.L19:
1940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 287              		.loc 1 1940 0 discriminator 1
 288 002e 5A1E     		subs	r2, r3, #1
 289              	.LVL46:
 290 0030 002B     		cmp	r3, #0
 291 0032 F3D1     		bne	.L22
 292 0034 0021     		movs	r1, #0
 293 0036 0CE0     		b	.L23
 294              	.LVL47:
 295              	.L25:
1949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (maxIdac < ptrRamWidget->rowIdacMod[freqChannel])
1955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
1957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (minIdac > ptrRamWidget->rowIdacMod[freqChannel])
1959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
1960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             minIdac = ptrRamWidget->rowIdacMod[freqChannel];
1961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
1964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
1967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (minIdac > ptrRamSensor->idacComp[freqChannel])
 296              		.loc 1 1970 0
 297 0038 A318     		adds	r3, r4, r2
 298 003a 5B7A     		ldrb	r3, [r3, #9]
 299 003c 9842     		cmp	r0, r3
 300 003e 00D9     		bls	.L24
1971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 41


1972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             minIdac = ptrRamSensor->idacComp[freqChannel];
 301              		.loc 1 1972 0
 302 0040 1800     		movs	r0, r3
 303              	.LVL48:
 304              	.L24:
 305 0042 1300     		movs	r3, r2
 306 0044 00E0     		b	.L26
 307              	.LVL49:
 308              	.L31:
 309 0046 0123     		movs	r3, #1
 310              	.LVL50:
 311              	.L26:
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 312              		.loc 1 1968 0 discriminator 1
 313 0048 5A1E     		subs	r2, r3, #1
 314              	.LVL51:
 315 004a 002B     		cmp	r3, #0
 316 004c F4D1     		bne	.L25
1973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
1974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 317              		.loc 1 1975 0 discriminator 2
 318 004e 0A34     		adds	r4, r4, #10
 319              	.LVL52:
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 320              		.loc 1 1966 0 discriminator 2
 321 0050 0131     		adds	r1, r1, #1
 322              	.LVL53:
 323              	.L23:
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 324              		.loc 1 1966 0 is_stmt 0 discriminator 1
 325 0052 3B8B     		ldrh	r3, [r7, #24]
 326 0054 9942     		cmp	r1, r3
 327 0056 F6D3     		bcc	.L31
1976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
1978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check gain switch conditions */
1980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (gainIndex != 0u)
 328              		.loc 1 1980 0 is_stmt 1
 329 0058 4346     		mov	r3, r8
 330 005a 002B     		cmp	r3, #0
 331 005c 13D0     		beq	.L32
 332              	.LVL54:
1981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (minIdac < CapSense_CSD_IDAC_MIN)
 333              		.loc 1 1982 0
 334 005e 1328     		cmp	r0, #19
 335 0060 13D8     		bhi	.L33
1983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ratio = CapSense_idacGainTable[gainIndex].gainValue /
 336              		.loc 1 1984 0
 337 0062 0D49     		ldr	r1, .L35
 338              	.LVL55:
 339 0064 EA00     		lsls	r2, r5, #3
 340              	.LVL56:
 341 0066 8A18     		adds	r2, r1, r2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 42


 342 0068 5068     		ldr	r0, [r2, #4]
 343              	.LVL57:
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
 344              		.loc 1 1985 0
 345 006a 6B1E     		subs	r3, r5, #1
 346              	.LVL58:
 347 006c DB00     		lsls	r3, r3, #3
 348 006e CB18     		adds	r3, r1, r3
 349 0070 5968     		ldr	r1, [r3, #4]
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_idacGainTable[gainIndex - 1u].gainValue;
 350              		.loc 1 1984 0
 351 0072 FFF7FEFF 		bl	__aeabi_uidiv
 352              	.LVL59:
1986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((maxIdac * ratio) < CapSense_CSD_CAL_IDAC_MAX_VALUE)
 353              		.loc 1 1986 0
 354 0076 4F46     		mov	r7, r9
 355              	.LVL60:
 356 0078 4743     		muls	r7, r0
 357 007a 7E2F     		cmp	r7, #126
 358 007c 07D8     		bhi	.L34
1987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
1988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Switch to lower idac gain */
1989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamWidget->idacGainIndex--;
 359              		.loc 1 1989 0
 360 007e 013D     		subs	r5, r5, #1
 361              	.LVL61:
 362 0080 B572     		strb	r5, [r6, #10]
 363              	.LVL62:
1990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         status = 1u;
 364              		.loc 1 1990 0
 365 0082 0120     		movs	r0, #1
 366              	.LVL63:
 367 0084 04E0     		b	.L27
 368              	.LVL64:
 369              	.L32:
1925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
 370              		.loc 1 1925 0
 371 0086 0020     		movs	r0, #0
 372              	.LVL65:
 373 0088 02E0     		b	.L27
 374              	.LVL66:
 375              	.L33:
 376 008a 0020     		movs	r0, #0
 377              	.LVL67:
 378 008c 00E0     		b	.L27
 379              	.LVL68:
 380              	.L34:
 381 008e 0020     		movs	r0, #0
 382              	.LVL69:
 383              	.L27:
1991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
1992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             return (status);
1996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 384              		.loc 1 1996 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 43


 385              		@ sp needed
 386              	.LVL70:
 387              	.LVL71:
 388              	.LVL72:
 389              	.LVL73:
 390 0090 0CBC     		pop	{r2, r3}
 391 0092 9046     		mov	r8, r2
 392 0094 9946     		mov	r9, r3
 393 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 394              	.L36:
 395              		.align	2
 396              	.L35:
 397 0098 00000000 		.word	CapSense_idacGainTable
 398              		.cfi_endproc
 399              	.LFE17:
 400              		.size	CapSense_SsCSDSwitchIdacGain, .-CapSense_SsCSDSwitchIdacGain
 401              		.section	.text.CapSense_SsCSDNormalizeIdac,"ax",%progbits
 402              		.align	2
 403              		.code	16
 404              		.thumb_func
 405              		.type	CapSense_SsCSDNormalizeIdac, %function
 406              	CapSense_SsCSDNormalizeIdac:
 407              	.LFB18:
1997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN) */
1998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
2002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDNormalizeIdac
2003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
2004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
2006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
2009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param ptrFlashWidget
2012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
2013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \param target
2015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  Raw count target in percentage.
2016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
2017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
2018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDNormalizeIdac(CapSense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
2019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 408              		.loc 1 2019 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 8
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL74:
 413 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 414              		.cfi_def_cfa_offset 20
 415              		.cfi_offset 4, -20
 416              		.cfi_offset 5, -16
 417              		.cfi_offset 6, -12
 418              		.cfi_offset 7, -8
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 44


 419              		.cfi_offset 14, -4
 420 0002 5F46     		mov	r7, fp
 421 0004 5646     		mov	r6, r10
 422 0006 4D46     		mov	r5, r9
 423 0008 E0B4     		push	{r5, r6, r7}
 424              		.cfi_def_cfa_offset 32
 425              		.cfi_offset 9, -32
 426              		.cfi_offset 10, -28
 427              		.cfi_offset 11, -24
 428 000a 82B0     		sub	sp, sp, #8
 429              		.cfi_def_cfa_offset 40
 430 000c 0700     		movs	r7, r0
 431 000e 8A46     		mov	r10, r1
2020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 snsIndex;
2021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 freqChannel;
2022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxIdac;
2023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minIdac;
2024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 minRaw;
2025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 maxRawLevel;
2026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 rawLevel;
2027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 iMod;
2028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
 432              		.loc 1 2029 0
 433 0010 4368     		ldr	r3, [r0, #4]
 434 0012 9B46     		mov	fp, r3
 435              	.LVL75:
2030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_RAM_SNS_STRUCT *ptrRamSensor;
2031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Calculate raw count level based on resolution and target */
2033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxRawLevel = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
 436              		.loc 1 2033 0
 437 0014 1B88     		ldrh	r3, [r3]
 438              	.LVL76:
 439 0016 0122     		movs	r2, #1
 440 0018 9A40     		lsls	r2, r2, r3
 441 001a 1300     		movs	r3, r2
 442 001c 013B     		subs	r3, r3, #1
 443 001e 0193     		str	r3, [sp, #4]
 444              	.LVL77:
2034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * IDAC Normalization is performed separately for each multi-frequency channel
2037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * and separately for row and column
2038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             */
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 445              		.loc 1 2039 0
 446 0020 0123     		movs	r3, #1
 447              	.LVL78:
 448 0022 4AE0     		b	.L38
 449              	.LVL79:
 450              	.L47:
2040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Find maximum and minimum IDACs */
2042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 maxIdac = ptrRamWidget->idacMod[freqChannel];
 451              		.loc 1 2042 0
 452 0024 5B46     		mov	r3, fp
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 45


 453 0026 5B19     		adds	r3, r3, r5
 454 0028 5B7A     		ldrb	r3, [r3, #9]
 455 002a 9946     		mov	r9, r3
 456              	.LVL80:
2043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
2044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 457              		.loc 1 2044 0
 458 002c BB68     		ldr	r3, [r7, #8]
 459              	.LVL81:
2045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minRaw = ptrRamSensor->raw[freqChannel];
 460              		.loc 1 2045 0
 461 002e 6A00     		lsls	r2, r5, #1
 462 0030 D05A     		ldrh	r0, [r2, r3]
 463              	.LVL82:
2043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
 464              		.loc 1 2043 0
 465 0032 4C46     		mov	r4, r9
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 466              		.loc 1 2046 0
 467 0034 0022     		movs	r2, #0
 468 0036 08E0     		b	.L39
 469              	.LVL83:
 470              	.L41:
2047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (minIdac > ptrRamSensor->idacComp[freqChannel])
 471              		.loc 1 2048 0
 472 0038 5919     		adds	r1, r3, r5
 473 003a 497A     		ldrb	r1, [r1, #9]
 474 003c 8C42     		cmp	r4, r1
 475 003e 02D9     		bls	.L40
 476              	.LVL84:
2049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minIdac = ptrRamSensor->idacComp[freqChannel];
2051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
 477              		.loc 1 2051 0
 478 0040 6800     		lsls	r0, r5, #1
 479              	.LVL85:
 480 0042 C05A     		ldrh	r0, [r0, r3]
 481              	.LVL86:
2050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
 482              		.loc 1 2050 0
 483 0044 0C00     		movs	r4, r1
 484              	.LVL87:
 485              	.L40:
2052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 486              		.loc 1 2053 0 discriminator 2
 487 0046 0A33     		adds	r3, r3, #10
 488              	.LVL88:
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 489              		.loc 1 2046 0 discriminator 2
 490 0048 0132     		adds	r2, r2, #1
 491              	.LVL89:
 492              	.L39:
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 493              		.loc 1 2046 0 is_stmt 0 discriminator 1
 494 004a F97E     		ldrb	r1, [r7, #27]
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 46


 495 004c 8A42     		cmp	r2, r1
 496 004e F3D3     		bcc	.L41
2054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Define new modulator IDAC */
2057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawLevel = ((minRaw * CapSense_PERCENTAGE_100) / maxRawLevel) + CapSense_PERCENTAGE
 497              		.loc 1 2057 0 is_stmt 1
 498 0050 6423     		movs	r3, #100
 499              	.LVL90:
 500 0052 5843     		muls	r0, r3
 501              	.LVL91:
 502 0054 0199     		ldr	r1, [sp, #4]
 503 0056 FFF7FEFF 		bl	__aeabi_uidiv
 504              	.LVL92:
 505 005a 6430     		adds	r0, r0, #100
 506              	.LVL93:
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
 507              		.loc 1 2058 0
 508 005c 6043     		muls	r0, r4
 509              	.LVL94:
 510 005e 5146     		mov	r1, r10
 511 0060 FFF7FEFF 		bl	__aeabi_uidiv
 512              	.LVL95:
2059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (iMod > maxIdac)
 513              		.loc 1 2060 0
 514 0064 8145     		cmp	r9, r0
 515 0066 00D3     		bcc	.L42
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
 516              		.loc 1 2058 0
 517 0068 8146     		mov	r9, r0
 518              	.LVL96:
 519              	.L42:
2061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     iMod = maxIdac;
2063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamWidget->idacMod[freqChannel] = (uint8)iMod;
 520              		.loc 1 2064 0
 521 006a 5B46     		mov	r3, fp
 522 006c 5B19     		adds	r3, r3, r5
 523 006e 4A46     		mov	r2, r9
 524 0070 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Re-calculate compensation IDAC */
2067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 525              		.loc 1 2067 0
 526 0072 BC68     		ldr	r4, [r7, #8]
 527              	.LVL97:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 528              		.loc 1 2068 0
 529 0074 0026     		movs	r6, #0
 530 0076 1CE0     		b	.L43
 531              	.LVL98:
 532              	.L46:
2069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     rawLevel = (((ptrRamSensor->raw[freqChannel] * CapSense_PERCENTAGE_100) / maxRa
 533              		.loc 1 2070 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 47


 534 0078 6B00     		lsls	r3, r5, #1
 535 007a 185B     		ldrh	r0, [r3, r4]
 536 007c 6423     		movs	r3, #100
 537 007e 5843     		muls	r0, r3
 538 0080 0199     		ldr	r1, [sp, #4]
 539 0082 FFF7FEFF 		bl	__aeabi_uidiv
 540              	.LVL99:
 541 0086 6430     		adds	r0, r0, #100
2071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 542              		.loc 1 2071 0
 543 0088 6319     		adds	r3, r4, r5
 544 008a 5B7A     		ldrb	r3, [r3, #9]
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 545              		.loc 1 2070 0
 546 008c 5843     		muls	r0, r3
 547              	.LVL100:
2072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (rawLevel < (iMod * target))
 548              		.loc 1 2072 0
 549 008e 5346     		mov	r3, r10
 550 0090 4A46     		mov	r2, r9
 551 0092 5343     		muls	r3, r2
 552 0094 9842     		cmp	r0, r3
 553 0096 03D2     		bcs	.L44
 554              	.LVL101:
2073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = 0u;
 555              		.loc 1 2074 0
 556 0098 6319     		adds	r3, r4, r5
 557 009a 0022     		movs	r2, #0
 558              	.LVL102:
 559 009c 5A72     		strb	r2, [r3, #9]
 560 009e 06E0     		b	.L45
 561              	.LVL103:
 562              	.L44:
2075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
2077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * target))
 563              		.loc 1 2078 0
 564 00a0 C01A     		subs	r0, r0, r3
 565              	.LVL104:
 566 00a2 3230     		adds	r0, r0, #50
2079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 567              		.loc 1 2079 0
 568 00a4 6421     		movs	r1, #100
 569 00a6 FFF7FEFF 		bl	__aeabi_uidiv
 570              	.LVL105:
2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
 571              		.loc 1 2078 0
 572 00aa 6319     		adds	r3, r4, r5
 573 00ac 5872     		strb	r0, [r3, #9]
 574              	.L45:
2080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor++;
 575              		.loc 1 2081 0 discriminator 2
 576 00ae 0A34     		adds	r4, r4, #10
 577              	.LVL106:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 48


2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 578              		.loc 1 2068 0 discriminator 2
 579 00b0 0136     		adds	r6, r6, #1
 580              	.LVL107:
 581              	.L43:
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 582              		.loc 1 2068 0 is_stmt 0 discriminator 1
 583 00b2 FB7E     		ldrb	r3, [r7, #27]
 584 00b4 9E42     		cmp	r6, r3
 585 00b6 DFD3     		bcc	.L46
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 586              		.loc 1 2039 0 is_stmt 1
 587 00b8 2B00     		movs	r3, r5
 588              	.LVL108:
 589              	.L38:
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 590              		.loc 1 2039 0 is_stmt 0 discriminator 1
 591 00ba 5D1E     		subs	r5, r3, #1
 592              	.LVL109:
 593 00bc 002B     		cmp	r3, #0
 594 00be B1D1     		bne	.L47
2082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
2087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Find maximum and minimum IDACs */
2089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
2090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minIdac = ptrRamWidget->rowIdacMod[freqChannel];
2091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
2093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         for(snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNum
2094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (minIdac > ptrRamSensor->idacComp[freqChannel])
2096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 minIdac = ptrRamSensor->idacComp[freqChannel];
2098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 minRaw = ptrRamSensor->raw[freqChannel];
2099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrRamSensor++;
2101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Define new modulator IDAC */
2104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         rawLevel = ((minRaw * CapSense_PERCENTAGE_100) / maxRawLevel) + CapSense_PE
2105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         iMod = (rawLevel * minIdac) / target;
2106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (iMod > maxIdac)
2108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             iMod = maxIdac;
2110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamWidget->rowIdacMod[freqChannel] = (uint8)iMod;
2112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Re-calculate compensation IDAC */
2114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         for(snsIndex = 0u; snsIndex < ptrFlashWidget->numRows; snsIndex++)
2116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             rawLevel = (((ptrRamSensor->raw[freqChannel] * CapSense_PERCENTAGE_100)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 49


2118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
2119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (rawLevel < (iMod * target))
2120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = 0u;
2122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * 
2126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     (CapSense_PERCENTAGE_100 >> 1u)) / CapSense_PERCENTAGE_100);
2127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrRamSensor++;
2129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 595              		.loc 1 2133 0 is_stmt 1
 596 00c0 02B0     		add	sp, sp, #8
 597              		@ sp needed
 598              	.LVL110:
 599              	.LVL111:
 600              	.LVL112:
 601              	.LVL113:
 602 00c2 1CBC     		pop	{r2, r3, r4}
 603 00c4 9146     		mov	r9, r2
 604 00c6 9A46     		mov	r10, r3
 605 00c8 A346     		mov	fp, r4
 606 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 607              		.cfi_endproc
 608              	.LFE18:
 609              		.size	CapSense_SsCSDNormalizeIdac, .-CapSense_SsCSDNormalizeIdac
 610              		.section	.text.CapSense_SsCSDSetModeSnsClockDivider,"ax",%progbits
 611              		.align	2
 612              		.code	16
 613              		.thumb_func
 614              		.type	CapSense_SsCSDSetModeSnsClockDivider, %function
 615              	CapSense_SsCSDSetModeSnsClockDivider:
 616              	.LFB0:
 398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 617              		.loc 1 398 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL114:
 622 0000 10B5     		push	{r4, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 4, -8
 625              		.cfi_offset 14, -4
 404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= snsClkSource;
 626              		.loc 1 404 0
 627 0002 054A     		ldr	r2, .L49
 628 0004 C023     		movs	r3, #192
 629 0006 1468     		ldr	r4, [r2]
 630 0008 9C43     		bics	r4, r3
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 631              		.loc 1 405 0
 632 000a 2043     		orrs	r0, r4
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 50


 633              	.LVL115:
 634 000c 1060     		str	r0, [r2]
 408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 635              		.loc 1 408 0
 636 000e 0800     		movs	r0, r1
 637 0010 FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 638              	.LVL116:
 410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 639              		.loc 1 410 0
 640              		@ sp needed
 641 0014 10BD     		pop	{r4, pc}
 642              	.L50:
 643 0016 C046     		.align	2
 644              	.L49:
 645 0018 00000000 		.word	.LANCHOR0
 646              		.cfi_endproc
 647              	.LFE0:
 648              		.size	CapSense_SsCSDSetModeSnsClockDivider, .-CapSense_SsCSDSetModeSnsClockDivider
 649              		.section	.text.CapSense_SsCSDInitialize,"ax",%progbits
 650              		.align	2
 651              		.global	CapSense_SsCSDInitialize
 652              		.code	16
 653              		.thumb_func
 654              		.type	CapSense_SsCSDInitialize, %function
 655              	CapSense_SsCSDInitialize:
 656              	.LFB2:
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 657              		.loc 1 525 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661 0000 10B5     		push	{r4, lr}
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 4, -8
 664              		.cfi_offset 14, -4
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 665              		.loc 1 531 0
 666 0002 0F4B     		ldr	r3, .L53
 667 0004 4322     		movs	r2, #67
 668 0006 9A5C     		ldrb	r2, [r3, r2]
 669 0008 4221     		movs	r1, #66
 670 000a 585C     		ldrb	r0, [r3, r1]
 671 000c 8242     		cmp	r2, r0
 672 000e 06D0     		beq	.L52
 533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 673              		.loc 1 533 0
 674 0010 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 675              	.LVL117:
 534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 676              		.loc 1 534 0
 677 0014 0A4B     		ldr	r3, .L53
 678 0016 4222     		movs	r2, #66
 679 0018 995C     		ldrb	r1, [r3, r2]
 680 001a 0132     		adds	r2, r2, #1
 681 001c 9954     		strb	r1, [r3, r2]
 682              	.L52:
 695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 51


 683              		.loc 1 695 0
 684 001e FFF7FEFF 		bl	CapSense_SsCSDConfigIDACs
 685              	.LVL118:
 698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT));
 686              		.loc 1 698 0
 687 0022 C022     		movs	r2, #192
 688 0024 D200     		lsls	r2, r2, #3
 689 0026 F021     		movs	r1, #240
 690 0028 0901     		lsls	r1, r1, #4
 691 002a 0648     		ldr	r0, .L53+4
 692 002c FFF7FEFF 		bl	CapSense_WriteBitsSafe
 693              	.LVL119:
 709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 694              		.loc 1 709 0
 695 0030 054B     		ldr	r3, .L53+8
 696 0032 1B68     		ldr	r3, [r3]
 697 0034 054A     		ldr	r2, .L53+12
 698 0036 1343     		orrs	r3, r2
 699 0038 054A     		ldr	r2, .L53+16
 700 003a 1360     		str	r3, [r2]
 718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 701              		.loc 1 718 0
 702              		@ sp needed
 703 003c 10BD     		pop	{r4, pc}
 704              	.L54:
 705 003e C046     		.align	2
 706              	.L53:
 707 0040 00000000 		.word	CapSense_dsRam
 708 0044 10000140 		.word	1073807376
 709 0048 00000000 		.word	.LANCHOR0
 710 004c 2008E881 		.word	-2115500000
 711 0050 04000840 		.word	1074266116
 712              		.cfi_endproc
 713              	.LFE2:
 714              		.size	CapSense_SsCSDInitialize, .-CapSense_SsCSDInitialize
 715              		.section	.text.CapSense_SsCSDSetUpIdacs,"ax",%progbits
 716              		.align	2
 717              		.global	CapSense_SsCSDSetUpIdacs
 718              		.code	16
 719              		.thumb_func
 720              		.type	CapSense_SsCSDSetUpIdacs, %function
 721              	CapSense_SsCSDSetUpIdacs:
 722              	.LFB4:
 799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 interruptState;
 723              		.loc 1 799 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              	.LVL120:
 728 0000 70B5     		push	{r4, r5, r6, lr}
 729              		.cfi_def_cfa_offset 16
 730              		.cfi_offset 4, -16
 731              		.cfi_offset 5, -12
 732              		.cfi_offset 6, -8
 733              		.cfi_offset 14, -4
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 734              		.loc 1 804 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 52


 735 0002 837A     		ldrb	r3, [r0, #10]
 736 0004 DB00     		lsls	r3, r3, #3
 737 0006 0D4A     		ldr	r2, .L56
 738 0008 9C58     		ldr	r4, [r3, r2]
 739              	.LVL121:
 859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 740              		.loc 1 859 0
 741 000a 0930     		adds	r0, r0, #9
 742              	.LVL122:
 743 000c 0500     		movs	r5, r0
 744              	.LVL123:
 868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 745              		.loc 1 868 0
 746 000e FFF7FEFF 		bl	CyEnterCriticalSection
 747              	.LVL124:
 871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 748              		.loc 1 871 0
 749 0012 0B4E     		ldr	r6, .L56+4
 750 0014 3268     		ldr	r2, [r6]
 751              	.LVL125:
 875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_IDAC_GAIN_MASK | (CapSense_IDAC_GAIN_MASK << CapSense_IDAC_COMP_DATA_OFFSE
 752              		.loc 1 875 0
 753 0016 0B4B     		ldr	r3, .L56+8
 754 0018 1340     		ands	r3, r2
 755              	.LVL126:
 883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            (uint32)((uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex]
 756              		.loc 1 883 0
 757 001a 0B4A     		ldr	r2, .L56+12
 758 001c 1178     		ldrb	r1, [r2]
 759 001e 6D5C     		ldrb	r5, [r5, r1]
 760              	.LVL127:
 884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            CapSense_IDAC_COMP_DATA_OFFSET));
 761              		.loc 1 884 0
 762 0020 0A4A     		ldr	r2, .L56+16
 763 0022 1268     		ldr	r2, [r2]
 764 0024 5118     		adds	r1, r2, r1
 765 0026 4A7A     		ldrb	r2, [r1, #9]
 766 0028 1204     		lsls	r2, r2, #16
 883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            (uint32)((uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex]
 767              		.loc 1 883 0
 768 002a 2A43     		orrs	r2, r5
 769 002c 1343     		orrs	r3, r2
 770              	.LVL128:
 886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (idacGain << CapSense_IDAC_COMP_DATA_OFFSET);
 771              		.loc 1 886 0
 772 002e 2343     		orrs	r3, r4
 773              	.LVL129:
 887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 774              		.loc 1 887 0
 775 0030 2404     		lsls	r4, r4, #16
 776              	.LVL130:
 777 0032 2343     		orrs	r3, r4
 778              	.LVL131:
 892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 779              		.loc 1 892 0
 780 0034 3360     		str	r3, [r6]
 894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 53


 781              		.loc 1 894 0
 782 0036 FFF7FEFF 		bl	CyExitCriticalSection
 783              	.LVL132:
 897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 784              		.loc 1 897 0
 785              		@ sp needed
 786 003a 70BD     		pop	{r4, r5, r6, pc}
 787              	.L57:
 788              		.align	2
 789              	.L56:
 790 003c 00000000 		.word	CapSense_idacGainTable
 791 0040 08000840 		.word	1074266120
 792 0044 00FB80FB 		.word	-75433216
 793 0048 00000000 		.word	CapSense_scanFreqIndex
 794 004c 00000000 		.word	CapSense_curRamSnsPtr
 795              		.cfi_endproc
 796              	.LFE4:
 797              		.size	CapSense_SsCSDSetUpIdacs, .-CapSense_SsCSDSetUpIdacs
 798              		.section	.text.CapSense_SsCSDConfigClock,"ax",%progbits
 799              		.align	2
 800              		.global	CapSense_SsCSDConfigClock
 801              		.code	16
 802              		.thumb_func
 803              		.type	CapSense_SsCSDConfigClock, %function
 804              	CapSense_SsCSDConfigClock:
 805              	.LFB5:
1003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
 806              		.loc 1 1003 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810 0000 10B5     		push	{r4, lr}
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 4, -8
 813              		.cfi_offset 14, -4
1009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 814              		.loc 1 1009 0
 815 0002 054B     		ldr	r3, .L59
 816 0004 1B78     		ldrb	r3, [r3]
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 817              		.loc 1 1008 0
 818 0006 5B01     		lsls	r3, r3, #5
 819 0008 044A     		ldr	r2, .L59+4
 820 000a D318     		adds	r3, r2, r3
 821 000c 5B68     		ldr	r3, [r3, #4]
 822              	.LVL133:
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 823              		.loc 1 1026 0
 824 000e 9989     		ldrh	r1, [r3, #12]
 825              	.LVL134:
1042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 826              		.loc 1 1042 0
 827 0010 987B     		ldrb	r0, [r3, #14]
 828              	.LVL135:
1081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 829              		.loc 1 1081 0
 830 0012 FFF7FEFF 		bl	CapSense_SsCSDSetModeSnsClockDivider
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 54


 831              	.LVL136:
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 832              		.loc 1 1082 0
 833              		@ sp needed
 834 0016 10BD     		pop	{r4, pc}
 835              	.L60:
 836              		.align	2
 837              	.L59:
 838 0018 00000000 		.word	CapSense_widgetIndex
 839 001c 00000000 		.word	CapSense_dsFlash
 840              		.cfi_endproc
 841              	.LFE5:
 842              		.size	CapSense_SsCSDConfigClock, .-CapSense_SsCSDConfigClock
 843              		.section	.text.CapSense_SsCSDCalculateScanDuration,"ax",%progbits
 844              		.align	2
 845              		.global	CapSense_SsCSDCalculateScanDuration
 846              		.code	16
 847              		.thumb_func
 848              		.type	CapSense_SsCSDCalculateScanDuration, %function
 849              	CapSense_SsCSDCalculateScanDuration:
 850              	.LFB6:
1106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 851              		.loc 1 1106 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856              	.LVL137:
1136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 857              		.loc 1 1136 0
 858 0000 0288     		ldrh	r2, [r0]
 859 0002 0123     		movs	r3, #1
 860 0004 9340     		lsls	r3, r3, r2
 861 0006 013B     		subs	r3, r3, #1
 862 0008 1B04     		lsls	r3, r3, #16
 863 000a 014A     		ldr	r2, .L62
 864 000c 5360     		str	r3, [r2, #4]
1138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 865              		.loc 1 1138 0
 866              		@ sp needed
 867 000e 7047     		bx	lr
 868              	.L63:
 869              		.align	2
 870              	.L62:
 871 0010 00000000 		.word	.LANCHOR0
 872              		.cfi_endproc
 873              	.LFE6:
 874              		.size	CapSense_SsCSDCalculateScanDuration, .-CapSense_SsCSDCalculateScanDuration
 875              		.section	.text.CapSense_SsCSDStartSample,"ax",%progbits
 876              		.align	2
 877              		.global	CapSense_SsCSDStartSample
 878              		.code	16
 879              		.thumb_func
 880              		.type	CapSense_SsCSDStartSample, %function
 881              	CapSense_SsCSDStartSample:
 882              	.LFB9:
1328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 55


 883              		.loc 1 1328 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887 0000 70B5     		push	{r4, r5, r6, lr}
 888              		.cfi_def_cfa_offset 16
 889              		.cfi_offset 4, -16
 890              		.cfi_offset 5, -12
 891              		.cfi_offset 6, -8
 892              		.cfi_offset 14, -4
1363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 893              		.loc 1 1363 0
 894 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 895              	.LVL138:
 896 0006 0400     		movs	r4, r0
 897              	.LVL139:
1370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
 898              		.loc 1 1370 0
 899 0008 1D4B     		ldr	r3, .L68
 900 000a 1B68     		ldr	r3, [r3]
 901 000c 1D4A     		ldr	r2, .L68+4
 902 000e 1343     		orrs	r3, r2
 903 0010 1D4A     		ldr	r2, .L68+8
 904 0012 1360     		str	r3, [r2]
 905              	.LBB10:
 906              	.LBB11:
2134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
2135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrate
2139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  approximation algorithm.
2144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  approximation algorithm. It supports any type of CSD widgets, and works
2148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  with multi-frequency scan and compensation IDAC features enabled.
2149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  As result of function operation, the modulator IDAC that corresponds to the
2151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  sensor with the highest capacitance (the biggest modulator IDAC) is stored
2152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  into widget data structure. If it is dual-axis widget type (touchpad or matrix
2153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  buttons) or if multi-frequency scan feature is enabled then the maximum
2154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  modulator IDAC found separately for each multi-frequency channel and for
2155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  rows/columns.
2156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  If compensation IDAC is enabled, then it preserves IDAC value of
2158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  single-sensor calibration. In dual IDAC mode each sensor was calibrated with
2159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  equal values of modulator and compensation IDAC.
2160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  After IDACs were found each sensor scanned again to get real raw count stored
2162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  in sensor structure.
2163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 56


2165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDCalibrate(uint32 widgetId, uint32 target)
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
2177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 freqChannel;
2178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 calMask;
2179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 temp;
2180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrIdacMod;
2183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrMaxIdac;
2184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 maxIdac[CapSense_NUM_SCAN_FREQS];
2186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8 maxRowIdac[CapSense_NUM_SCAN_FREQS];
2189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 dualWidgetType = 0u;
2190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor;
2193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
2194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
2195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrIdacMod = &ptrRamWidget->idacMod[0u];
2197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
2198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxIdac[freqChannel] = 0u;
2202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 maxRowIdac[freqChannel] = 0u;
2204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate raw count level based on resolution and target */
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         temp = (((0x00000001Lu << ptrRamWidget->resolution) - 1u) * target) / CapSense_PERCENTAGE_1
2209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
2213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 dualWidgetType = 1u;
2215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Loop through the widget sensors */
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
2220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 57


2222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (snsIndex == ptrFlashWidget->numCols)
2223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (0u != dualWidgetType)
2225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdacMod = &ptrRamWidget->rowIdacMod[0u];
2227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrMaxIdac = &maxRowIdac[0u];
2228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamSensor = &((ptrFlashWidget->ptr2SnsRam)[snsIndex]);
2233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set default IDAC code */
2235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calMask = CapSense_CSD_CAL_MIDDLE_VALUE;
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdacMod[freqChannel] = CapSense_CSD_CAL_MIDDLE_VALUE;
2239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Loop through IDAC code */
2245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
2246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Need to configure HW block with each IDAC change */
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDSetupWidgetExt(widgetId, snsIndex);
2249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_DischargeExtCapacitors(CapSense_EXT_CAP_DISCHARGE_TIME);
2252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
2253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Scan sensor */
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDScanExt();
2256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
2259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     watchdogCounter--;
2261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Update IDAC based on scan result */
2264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (ptrRamSensor->raw[freqChannel] < temp)
2267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdacMod[freqChannel] &= (uint8)(~calMask);
2269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Switch to the lower IDAC mask */
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calMask >>= 1u;
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrIdacMod[freqChannel] |= (uint8)calMask;
2277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 58


2279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (0u == calMask)
2281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (0u == ptrIdacMod[freqChannel])
2283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             ptrIdacMod[freqChannel] = 1u;
2285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif
2288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (calMask != 0u);
2293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (ptrMaxIdac[freqChannel] < ptrIdacMod[freqChannel])
2297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrMaxIdac[freqChannel] = ptrIdacMod[freqChannel];
2299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform scan again to get real raw count if IDAC was changed at the last iteration *
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDSetupWidgetExt(widgetId, snsIndex);
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
2305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrRamWidget->idacMod[freqChannel] = maxIdac[freqChannel];
2316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (0u != dualWidgetType)
2318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrRamWidget->rowIdacMod[freqChannel] = maxRowIdac[freqChannel];
2320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_COL_ROW_IDAC_ALIGNMENT_EN)
2322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (ptrRamWidget->idacMod[freqChannel] < ptrRamWidget->rowIdacMod[freqC
2324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->rowIdacMod[freqChannel];
2326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->idacMod[freqChannel];
2335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 59


2336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #else
2342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (((uint32)ptrRamWidget->idacMod[freqChannel] * ptrRamWidget->snsClk)
2343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ((uint32)ptrRamWidget->rowIdacMod[freqChannel] * ptrRamWidget->rowS
2344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->rowIdacMod[freqChannel] *
2346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 ptrRamWidget->rowSnsClk) / ptrRamWidget->snsClk;
2347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             else
2354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->idacMod[freqChannel] *
2356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 ptrRamWidget->snsClk) / ptrRamWidget->rowSnsClk;
2357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 if (temp > CapSense_CSD_CAL_IDAC_MAX_VALUE)
2358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 {
2359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     temp = CapSense_CSD_CAL_IDAC_MAX_VALUE;
2360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 }
2361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #endif
2364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
2365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_CSDCalibrateWidget
2373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  \note This function is obsolete and kept for backward compatibility only.
2384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The CapSense_CalibrateWidget() function should be used instead.
2385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the range specified
2391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  by the target and acceptable calibration deviation.
2392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 60


2393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
2397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return
2406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate
2410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      as expected.
2411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_TIMEOUT - The calibration failed due to timeout.
2412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
2413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      hardware block is busy.
2414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     cystatus CapSense_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTO_GAIN_EN)
2422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 gainSwitch;
2423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
2426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
2428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Previous widget is being scanned, return error */
2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus = CYRET_INVALID_STATE;
2431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
2433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set default IDAC gain */
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ((CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->ptr2WdgtRam)->idacGainIndex =
2436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
2437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform calibration */
2439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE != CapSense_CSD_IDAC_AUTO_GAIN_EN)
2440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_SsCSDCalibrate(widgetId, target);
2441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
2442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
2443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_SsCSDCalibrate(widgetId, target);
2445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     gainSwitch = CapSense_SsCSDSwitchIdacGain(ptrFlashWidget);
2446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
2447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 61


2450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* IDAC Normalization in Dual IDAC mode */
2451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_SsCSDNormalizeIdac(ptrFlashWidget, target);
2452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Perform specified widget scan to check calibration result */
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDSetupWidget(widgetId);
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScan();
2457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_WIDGET_MAX_SCAN_TIME;
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Verification of calibration result */
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (0u == watchdogCounter)
2466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
2468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
2470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 calibrateStatus = CapSense_SsCSDCalibrateCheck(widgetId, target);
2472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              /* Update CRC */
2475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
2476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
2477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
2478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return calibrateStatus;
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
2483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)) */
2484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDClockRestart
2489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function restarts the clocks.
2493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function performs following:
2496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void)
2502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 62


2507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
 907              		.loc 1 2508 0
 908 0014 1D4B     		ldr	r3, .L68+12
 909 0016 187F     		ldrb	r0, [r3, #28]
 910 0018 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 911              	.LVL140:
2509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SnsClk__DIV_ID <<
2514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_SNSCLK_CMD_DIV_SHIFT)|
2515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
2516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
2519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT
2526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) 
2527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           CapSense_SNSCLK_CMD_ENABLE_MASK));
2528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
 912              		.loc 1 2530 0
 913 001c 1C4A     		ldr	r2, .L68+16
 914 001e 1368     		ldr	r3, [r2]
 915 0020 5B00     		lsls	r3, r3, #1
 916 0022 5B08     		lsrs	r3, r3, #1
 917 0024 1360     		str	r3, [r2]
2531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
2532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
2533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
 918              		.loc 1 2535 0
 919 0026 1368     		ldr	r3, [r2]
 920 0028 8021     		movs	r1, #128
 921 002a 0906     		lsls	r1, r1, #24
 922 002c 0B43     		orrs	r3, r1
 923 002e 1360     		str	r3, [r2]
 924              	.LBE11:
 925              	.LBE10:
 926              	.LBB12:
 927              	.LBB13:
2536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
2537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_SnsClk__ENABLE_MASK);
2538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
2539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntDisable(CapSense_ISR_NUMBER);
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 63


2543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_COUNTER_PTR, CapSense_ONE_CYCLE);
2544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_ONE_CLOCK_WATCHDOG_CYCLES_NUM;
2546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while((0u != (CY_GET_REG32(CapSense_COUNTER_PTR) & CapSense_RESOLUTION_16_BITS)) && (0u
2547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
2549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
2551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntClearPending(CapSense_ISR_NUMBER);
2552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
2555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCmodPrecharge
2559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  prevent the project hanging.
2570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void)
2580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_INIT);
2586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,  CapSense_CSD_SW_FW_MOD_SEL_INIT);
2587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_CSD_SW_FW_TANK_SEL_INIT);
2588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_INIT);
2589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
2590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
2594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
2595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(0u != CapSense_CSD_SHIELD_TANK_EN)
2597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK,
2599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (uint32)(CapSense_HSIOM_SEL_AMUXA << CapSense_CSH_HSIOM_SHIFT));
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 64


2600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (0u != CapSense_CSD_SHIELD_TANK_EN) */
2601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
2604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
2605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_INIT);
2607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
2610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_CLEAR_MASK);
2612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_SEQ_MODE_MASK |
2615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                          CapSense_SEQ_START_START_MASK);
2616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_INTR_PTR) & CapSense_INTR_INIT_MASK)) && (0u != watchdo
2622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
2624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u == watchdogCounter)
2627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_ABORT_MASK);
2630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
2633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tmpRegValue;
2635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
2636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
 928              		.loc 1 2639 0
 929 0030 184E     		ldr	r6, .L68+20
 930 0032 3568     		ldr	r5, [r6]
 931              	.LVL141:
2640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyDelayCycles(CapSense_CMOD_DISCHARGE_CYCLES);
 932              		.loc 1 2642 0
 933 0034 2720     		movs	r0, #39
 934 0036 FFF7FEFF 		bl	CyDelayCycles
 935              	.LVL142:
2643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CapSense_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_IDAC_MOD_CFG_MA
 936              		.loc 1 2644 0
 937 003a 174B     		ldr	r3, .L68+24
 938 003c 2B40     		ands	r3, r5
 939 003e 174A     		ldr	r2, .L68+28
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 65


 940 0040 1343     		orrs	r3, r2
 941              	.LVL143:
2645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
 942              		.loc 1 2647 0
 943 0042 3360     		str	r3, [r6]
 944              	.LVL144:
2648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) & ~CapSense_CONFIG_
2651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 945              		.loc 1 2654 0
 946 0044 F023     		movs	r3, #240
 947              	.LVL145:
 948 0046 00E0     		b	.L65
 949              	.LVL146:
 950              	.L67:
2655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_STATUS_PTR) & CapSense_STATUS_SAMPLE)) && (0u != watchd
2658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
 951              		.loc 1 2659 0
 952 0048 013B     		subs	r3, r3, #1
 953              	.LVL147:
 954              	.L65:
2657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 955              		.loc 1 2657 0
 956 004a 154A     		ldr	r2, .L68+32
 957 004c 1268     		ldr	r2, [r2]
 958 004e 1207     		lsls	r2, r2, #28
 959 0050 01D4     		bmi	.L66
 960 0052 002B     		cmp	r3, #0
 961 0054 F8D1     		bne	.L67
 962              	.L66:
2660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) | CapSense_CONFIG_P
2664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, tmpRegValue);
 963              		.loc 1 2667 0
 964 0056 0F4B     		ldr	r3, .L68+20
 965              	.LVL148:
 966 0058 1D60     		str	r5, [r3]
 967              	.LVL149:
2668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable the sense modulator output */
2670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 968              		.loc 1 2670 0
 969 005a 094D     		ldr	r5, .L68
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 66


 970              	.LVL150:
 971 005c 114B     		ldr	r3, .L68+36
 972 005e 2A68     		ldr	r2, [r5]
 973 0060 1343     		orrs	r3, r2
 974 0062 094A     		ldr	r2, .L68+8
 975 0064 1360     		str	r3, [r2]
 976              	.LVL151:
2671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
 977              		.loc 1 2672 0
 978 0066 0F20     		movs	r0, #15
 979 0068 FFF7FEFF 		bl	CyIntEnable
 980              	.LVL152:
 981              	.LBE13:
 982              	.LBE12:
1381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SNS_CLK_SOURCE != CapSense_CLK_SOURCE_DIRECT) */
 983              		.loc 1 1381 0
 984 006c 6F20     		movs	r0, #111
 985 006e FFF7FEFF 		bl	CyDelayCycles
 986              	.LVL153:
 987              	.LBB14:
 988              	.LBB15:
2673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
2676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDTriggerScan
2680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function triggers the scanning.
2684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void)
2700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear previous interrupts */
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 67


2708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
2709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntClearPending(CapSense_ISR_NUMBER);
2712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
2715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_CSD_SW_HS_P_SEL_SCAN);
2718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_CSD_SW_FW_MOD_SEL_SCAN);
2721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,CapSense_CSD_SW_FW_TANK_SEL_SCAN);
2722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_SCAN);
2724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_SHIELD_
2726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
2728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_
2729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_SCAN);
2731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_SCAN);
2732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_CSD_SHIELD_EN)
2734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, 0u);
2736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_SCAN_MASK);
2738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_DISABLE == CapSense_CSD_SHIELD_EN) */
2739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
2741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_SENSE_PERIOD_PTR) |
2743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                            CapSense_SENSE_PERIOD_LFSR_CLEAR_MASK);
2744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE) */
2745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_INTR_MASK_SAMPLE_MASK);
2748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u != (CapSense_STAT_SEQ_REG & CapSense_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watchdog
2754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
2756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
2760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                      CapSense_SEQ_START_AZ1_SKIP_MASK |
2761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                      CapSense_SEQ_START_START_MASK);
2762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
2764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 68


2765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Third-generation HW block section */
2766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set resolution to Counter register to start scanning */
2768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_COUNTER_PTR, CapSense_counterResolution);
 989              		.loc 1 2768 0
 990 0072 6A68     		ldr	r2, [r5, #4]
 991 0074 0C4B     		ldr	r3, .L68+40
 992 0076 1A60     		str	r2, [r3]
 993              	.LBE15:
 994              	.LBE14:
1387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 995              		.loc 1 1387 0
 996 0078 2000     		movs	r0, r4
 997 007a FFF7FEFF 		bl	CyExitCriticalSection
 998              	.LVL154:
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 999              		.loc 1 1389 0
 1000              		@ sp needed
 1001              	.LVL155:
 1002 007e 70BD     		pop	{r4, r5, r6, pc}
 1003              	.L69:
 1004              		.align	2
 1005              	.L68:
 1006 0080 00000000 		.word	.LANCHOR0
 1007 0084 2008E881 		.word	-2115500000
 1008 0088 04000840 		.word	1074266116
 1009 008c 00000000 		.word	CapSense_dsRam
 1010 0090 40000240 		.word	1073872960
 1011 0094 08000840 		.word	1074266120
 1012 0098 00E8FFBF 		.word	-1073747968
 1013 009c F0060040 		.word	1073743600
 1014 00a0 10000840 		.word	1074266128
 1015 00a4 2018E881 		.word	-2115495904
 1016 00a8 0C000840 		.word	1074266124
 1017              		.cfi_endproc
 1018              	.LFE9:
 1019              		.size	CapSense_SsCSDStartSample, .-CapSense_SsCSDStartSample
 1020              		.section	.text.CapSense_CSDScanExt,"ax",%progbits
 1021              		.align	2
 1022              		.global	CapSense_CSDScanExt
 1023              		.code	16
 1024              		.thumb_func
 1025              		.type	CapSense_CSDScanExt, %function
 1026              	CapSense_CSDScanExt:
 1027              	.LFB10:
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 1028              		.loc 1 1441 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032 0000 10B5     		push	{r4, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 4, -8
 1035              		.cfi_offset 14, -4
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1036              		.loc 1 1452 0
 1037 0002 044A     		ldr	r2, .L71
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 69


 1038 0004 D368     		ldr	r3, [r2, #12]
 1039 0006 0449     		ldr	r1, .L71+4
 1040 0008 0B43     		orrs	r3, r1
 1041 000a D360     		str	r3, [r2, #12]
1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1042              		.loc 1 1467 0
 1043 000c FFF7FEFF 		bl	CapSense_SsCSDStartSample
 1044              	.LVL156:
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1045              		.loc 1 1468 0
 1046              		@ sp needed
 1047 0010 10BD     		pop	{r4, pc}
 1048              	.L72:
 1049 0012 C046     		.align	2
 1050              	.L71:
 1051 0014 00000000 		.word	CapSense_dsRam
 1052 0018 80000100 		.word	65664
 1053              		.cfi_endproc
 1054              	.LFE10:
 1055              		.size	CapSense_CSDScanExt, .-CapSense_CSDScanExt
 1056              		.section	.text.CapSense_CSDConnectSns,"ax",%progbits
 1057              		.align	2
 1058              		.global	CapSense_CSDConnectSns
 1059              		.code	16
 1060              		.thumb_func
 1061              		.type	CapSense_CSDConnectSns, %function
 1062              	CapSense_CSDConnectSns:
 1063              	.LFB14:
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
 1064              		.loc 1 1734 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 0, uses_anonymous_args = 0
 1068              	.LVL157:
 1069 0000 70B5     		push	{r4, r5, r6, lr}
 1070              		.cfi_def_cfa_offset 16
 1071              		.cfi_offset 4, -16
 1072              		.cfi_offset 5, -12
 1073              		.cfi_offset 6, -8
 1074              		.cfi_offset 14, -4
 1075 0002 0400     		movs	r4, r0
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 1076              		.loc 1 1741 0
 1077 0004 857E     		ldrb	r5, [r0, #26]
 1078              	.LVL158:
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1079              		.loc 1 1742 0
 1080 0006 067E     		ldrb	r6, [r0, #24]
 1081              	.LVL159:
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1082              		.loc 1 1744 0
 1083 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1084              	.LVL160:
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1085              		.loc 1 1747 0
 1086 000c 2368     		ldr	r3, [r4]
 1087 000e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 70


 1088              	.LVL161:
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 1089              		.loc 1 1748 0
 1090 0010 0F22     		movs	r2, #15
 1091 0012 B240     		lsls	r2, r2, r6
 1092 0014 9343     		bics	r3, r2
 1093              	.LVL162:
 1094 0016 1A00     		movs	r2, r3
 1095              	.LVL163:
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1096              		.loc 1 1749 0
 1097 0018 0423     		movs	r3, #4
 1098 001a B340     		lsls	r3, r3, r6
 1099 001c 1343     		orrs	r3, r2
 1100              	.LVL164:
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1101              		.loc 1 1752 0
 1102 001e 6668     		ldr	r6, [r4, #4]
 1103              	.LVL165:
 1104 0020 3268     		ldr	r2, [r6]
 1105 0022 0721     		movs	r1, #7
 1106 0024 A940     		lsls	r1, r1, r5
 1107 0026 8A43     		bics	r2, r1
 1108 0028 3260     		str	r2, [r6]
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1109              		.loc 1 1755 0
 1110 002a 2268     		ldr	r2, [r4]
 1111 002c 1360     		str	r3, [r2]
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1112              		.loc 1 1757 0
 1113 002e FFF7FEFF 		bl	CyExitCriticalSection
 1114              	.LVL166:
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1115              		.loc 1 1758 0
 1116              		@ sp needed
 1117              	.LVL167:
 1118              	.LVL168:
 1119 0032 70BD     		pop	{r4, r5, r6, pc}
 1120              		.cfi_endproc
 1121              	.LFE14:
 1122              		.size	CapSense_CSDConnectSns, .-CapSense_CSDConnectSns
 1123              		.section	.text.CapSense_CSDScan,"ax",%progbits
 1124              		.align	2
 1125              		.global	CapSense_CSDScan
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	CapSense_CSDScan, %function
 1129              	CapSense_CSDScan:
 1130              	.LFB11:
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1131              		.loc 1 1508 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1136              		.cfi_def_cfa_offset 24
 1137              		.cfi_offset 3, -24
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 71


 1138              		.cfi_offset 4, -20
 1139              		.cfi_offset 5, -16
 1140              		.cfi_offset 6, -12
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1143              		.loc 1 1510 0
 1144 0002 1D4B     		ldr	r3, .L76
 1145 0004 1B78     		ldrb	r3, [r3]
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
 1146              		.loc 1 1509 0
 1147 0006 5B01     		lsls	r3, r3, #5
 1148 0008 1C4A     		ldr	r2, .L76+4
 1149 000a D318     		adds	r3, r2, r3
 1150 000c 5F68     		ldr	r7, [r3, #4]
 1151              	.LVL169:
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1152              		.loc 1 1513 0
 1153 000e 1C4B     		ldr	r3, .L76+8
 1154 0010 4322     		movs	r2, #67
 1155 0012 9A5C     		ldrb	r2, [r3, r2]
 1156 0014 4221     		movs	r1, #66
 1157 0016 585C     		ldrb	r0, [r3, r1]
 1158 0018 8242     		cmp	r2, r0
 1159 001a 06D0     		beq	.L75
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_dsRam.scanCurrentISC = CapSense_dsRam.scanCsdISC;
 1160              		.loc 1 1515 0
 1161 001c FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1162              	.LVL170:
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1163              		.loc 1 1516 0
 1164 0020 174B     		ldr	r3, .L76+8
 1165 0022 4222     		movs	r2, #66
 1166 0024 995C     		ldrb	r1, [r3, r2]
 1167 0026 0132     		adds	r2, r2, #1
 1168 0028 9954     		strb	r1, [r3, r2]
 1169              	.L75:
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1170              		.loc 1 1523 0
 1171 002a 164C     		ldr	r4, .L76+12
 1172 002c 0023     		movs	r3, #0
 1173 002e 2370     		strb	r3, [r4]
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 1174              		.loc 1 1526 0
 1175 0030 114E     		ldr	r6, .L76
 1176 0032 3378     		ldrb	r3, [r6]
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 1177              		.loc 1 1527 0
 1178 0034 114D     		ldr	r5, .L76+4
 1179 0036 5B01     		lsls	r3, r3, #5
 1180 0038 EB18     		adds	r3, r5, r3
 1181 003a 9968     		ldr	r1, [r3, #8]
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1182              		.loc 1 1528 0
 1183 003c 2378     		ldrb	r3, [r4]
 1184 003e DBB2     		uxtb	r3, r3
 1185 0040 9A00     		lsls	r2, r3, #2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 72


 1186 0042 D318     		adds	r3, r2, r3
 1187 0044 5A00     		lsls	r2, r3, #1
 1188 0046 8A18     		adds	r2, r1, r2
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 1189              		.loc 1 1526 0
 1190 0048 0F4B     		ldr	r3, .L76+16
 1191 004a 1A60     		str	r2, [r3]
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1192              		.loc 1 1536 0
 1193 004c 3800     		movs	r0, r7
 1194 004e FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1195              	.LVL171:
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 1196              		.loc 1 1555 0
 1197 0052 3378     		ldrb	r3, [r6]
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
 1198              		.loc 1 1556 0
 1199 0054 5B01     		lsls	r3, r3, #5
 1200 0056 5859     		ldr	r0, [r3, r5]
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1201              		.loc 1 1557 0
 1202 0058 2278     		ldrb	r2, [r4]
 1203 005a D2B2     		uxtb	r2, r2
 1204 005c D300     		lsls	r3, r2, #3
 1205 005e 9A1A     		subs	r2, r3, r2
 1206 0060 9300     		lsls	r3, r2, #2
 1207 0062 C018     		adds	r0, r0, r3
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 1208              		.loc 1 1555 0
 1209 0064 094B     		ldr	r3, .L76+20
 1210 0066 1860     		str	r0, [r3]
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1211              		.loc 1 1560 0
 1212 0068 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1213              	.LVL172:
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1214              		.loc 1 1563 0
 1215 006c 0848     		ldr	r0, .L76+24
 1216 006e FFF7FEFF 		bl	CapSense_ISR_StartEx
 1217              	.LVL173:
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1218              		.loc 1 1567 0
 1219 0072 FFF7FEFF 		bl	CapSense_CSDScanExt
 1220              	.LVL174:
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1221              		.loc 1 1568 0
 1222              		@ sp needed
 1223              	.LVL175:
 1224 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1225              	.L77:
 1226              		.align	2
 1227              	.L76:
 1228 0078 00000000 		.word	CapSense_widgetIndex
 1229 007c 00000000 		.word	CapSense_dsFlash
 1230 0080 00000000 		.word	CapSense_dsRam
 1231 0084 00000000 		.word	CapSense_sensorIndex
 1232 0088 00000000 		.word	CapSense_curRamSnsPtr
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 73


 1233 008c 00000000 		.word	CapSense_curSnsIOPtr
 1234 0090 00000000 		.word	CapSense_CSDPostMultiScan
 1235              		.cfi_endproc
 1236              	.LFE11:
 1237              		.size	CapSense_CSDScan, .-CapSense_CSDScan
 1238              		.section	.text.CapSense_SsCSDConnectSensorExt,"ax",%progbits
 1239              		.align	2
 1240              		.global	CapSense_SsCSDConnectSensorExt
 1241              		.code	16
 1242              		.thumb_func
 1243              		.type	CapSense_SsCSDConnectSensorExt, %function
 1244              	CapSense_SsCSDConnectSensorExt:
 1245              	.LFB12:
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1246              		.loc 1 1591 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 0, uses_anonymous_args = 0
 1250              	.LVL176:
 1251 0000 10B5     		push	{r4, lr}
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 4, -8
 1254              		.cfi_offset 14, -4
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 1255              		.loc 1 1598 0
 1256 0002 4001     		lsls	r0, r0, #5
 1257              	.LVL177:
 1258 0004 054B     		ldr	r3, .L79
 1259 0006 C058     		ldr	r0, [r0, r3]
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1260              		.loc 1 1599 0
 1261 0008 CB00     		lsls	r3, r1, #3
 1262 000a 591A     		subs	r1, r3, r1
 1263              	.LVL178:
 1264 000c 8B00     		lsls	r3, r1, #2
 1265 000e C018     		adds	r0, r0, r3
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 1266              		.loc 1 1597 0
 1267 0010 034B     		ldr	r3, .L79+4
 1268 0012 1860     		str	r0, [r3]
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 1269              		.loc 1 1633 0
 1270 0014 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1271              	.LVL179:
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1272              		.loc 1 1635 0
 1273              		@ sp needed
 1274 0018 10BD     		pop	{r4, pc}
 1275              	.L80:
 1276 001a C046     		.align	2
 1277              	.L79:
 1278 001c 00000000 		.word	CapSense_dsFlash
 1279 0020 00000000 		.word	CapSense_curSnsIOPtr
 1280              		.cfi_endproc
 1281              	.LFE12:
 1282              		.size	CapSense_SsCSDConnectSensorExt, .-CapSense_SsCSDConnectSensorExt
 1283              		.section	.text.CapSense_CSDDisconnectSns,"ax",%progbits
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 74


 1284              		.align	2
 1285              		.global	CapSense_CSDDisconnectSns
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	CapSense_CSDDisconnectSns, %function
 1289              	CapSense_CSDDisconnectSns:
 1290              	.LFB15:
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
 1291              		.loc 1 1786 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              	.LVL180:
 1296 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1297              		.cfi_def_cfa_offset 24
 1298              		.cfi_offset 3, -24
 1299              		.cfi_offset 4, -20
 1300              		.cfi_offset 5, -16
 1301              		.cfi_offset 6, -12
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 0400     		movs	r4, r0
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 1305              		.loc 1 1793 0
 1306 0004 067E     		ldrb	r6, [r0, #24]
 1307              	.LVL181:
1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1308              		.loc 1 1794 0
 1309 0006 857E     		ldrb	r5, [r0, #26]
 1310              	.LVL182:
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1311              		.loc 1 1796 0
 1312 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1313              	.LVL183:
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newPcRegValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
 1314              		.loc 1 1798 0
 1315 000c 6368     		ldr	r3, [r4, #4]
 1316 000e 1968     		ldr	r1, [r3]
 1317              	.LVL184:
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1318              		.loc 1 1799 0
 1319 0010 0723     		movs	r3, #7
 1320 0012 AB40     		lsls	r3, r3, r5
 1321 0014 9943     		bics	r1, r3
 1322              	.LVL185:
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1323              		.loc 1 1801 0
 1324 0016 2768     		ldr	r7, [r4]
 1325 0018 3B68     		ldr	r3, [r7]
 1326              	.LVL186:
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1327              		.loc 1 1802 0
 1328 001a 0F22     		movs	r2, #15
 1329 001c B240     		lsls	r2, r2, r6
 1330 001e 9343     		bics	r3, r2
 1331              	.LVL187:
1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 75


 1332              		.loc 1 1803 0
 1333 0020 3B60     		str	r3, [r7]
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1334              		.loc 1 1805 0
 1335 0022 4322     		movs	r2, #67
 1336 0024 0E4F     		ldr	r7, .L84
 1337 0026 BA5C     		ldrb	r2, [r7, r2]
 1338 0028 002A     		cmp	r2, #0
 1339 002a 05D1     		bne	.L82
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1340              		.loc 1 1807 0
 1341 002c 0623     		movs	r3, #6
 1342              	.LVL188:
 1343 002e AB40     		lsls	r3, r3, r5
 1344 0030 1943     		orrs	r1, r3
 1345              	.LVL189:
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1346              		.loc 1 1808 0
 1347 0032 6368     		ldr	r3, [r4, #4]
 1348 0034 1960     		str	r1, [r3]
 1349 0036 08E0     		b	.L83
 1350              	.LVL190:
 1351              	.L82:
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1352              		.loc 1 1813 0
 1353 0038 022A     		cmp	r2, #2
 1354 003a 06D1     		bne	.L83
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1355              		.loc 1 1816 0
 1356 003c 0332     		adds	r2, r2, #3
 1357 003e B240     		lsls	r2, r2, r6
 1358 0040 1343     		orrs	r3, r2
 1359              	.LVL191:
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1360              		.loc 1 1817 0
 1361 0042 6268     		ldr	r2, [r4, #4]
 1362 0044 1160     		str	r1, [r2]
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1363              		.loc 1 1818 0
 1364 0046 2268     		ldr	r2, [r4]
 1365 0048 1360     		str	r3, [r2]
 1366              	.LVL192:
 1367              	.L83:
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1368              		.loc 1 1822 0
 1369 004a A168     		ldr	r1, [r4, #8]
 1370              	.LVL193:
 1371 004c 0B68     		ldr	r3, [r1]
 1372 004e 647E     		ldrb	r4, [r4, #25]
 1373              	.LVL194:
 1374 0050 0122     		movs	r2, #1
 1375 0052 A240     		lsls	r2, r2, r4
 1376 0054 9343     		bics	r3, r2
 1377 0056 0B60     		str	r3, [r1]
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1378              		.loc 1 1824 0
 1379 0058 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 76


 1380              	.LVL195:
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1381              		.loc 1 1825 0
 1382              		@ sp needed
 1383              	.LVL196:
 1384              	.LVL197:
 1385 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1386              	.L85:
 1387 005e C046     		.align	2
 1388              	.L84:
 1389 0060 00000000 		.word	CapSense_dsRam
 1390              		.cfi_endproc
 1391              	.LFE15:
 1392              		.size	CapSense_CSDDisconnectSns, .-CapSense_CSDDisconnectSns
 1393              		.section	.text.CapSense_SsCSDElectrodeCheck,"ax",%progbits
 1394              		.align	2
 1395              		.global	CapSense_SsCSDElectrodeCheck
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	CapSense_SsCSDElectrodeCheck, %function
 1399              	CapSense_SsCSDElectrodeCheck:
 1400              	.LFB3:
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1401              		.loc 1 738 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405 0000 10B5     		push	{r4, lr}
 1406              		.cfi_def_cfa_offset 8
 1407              		.cfi_offset 4, -8
 1408              		.cfi_offset 14, -4
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1409              		.loc 1 743 0
 1410 0002 064B     		ldr	r3, .L88
 1411 0004 1B78     		ldrb	r3, [r3]
 1412 0006 012B     		cmp	r3, #1
 1413 0008 06D1     		bne	.L86
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1414              		.loc 1 771 0
 1415 000a 054B     		ldr	r3, .L88+4
 1416 000c 1868     		ldr	r0, [r3]
 1417 000e FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1418              	.LVL198:
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1419              		.loc 1 774 0
 1420 0012 0022     		movs	r2, #0
 1421 0014 014B     		ldr	r3, .L88
 1422 0016 1A70     		strb	r2, [r3]
 1423              	.L86:
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1424              		.loc 1 776 0
 1425              		@ sp needed
 1426 0018 10BD     		pop	{r4, pc}
 1427              	.L89:
 1428 001a C046     		.align	2
 1429              	.L88:
 1430 001c 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 77


 1431 0020 00000000 		.word	CapSense_curSnsIOPtr
 1432              		.cfi_endproc
 1433              	.LFE3:
 1434              		.size	CapSense_SsCSDElectrodeCheck, .-CapSense_SsCSDElectrodeCheck
 1435              		.section	.text.CapSense_CSDSetupWidget,"ax",%progbits
 1436              		.align	2
 1437              		.global	CapSense_CSDSetupWidget
 1438              		.code	16
 1439              		.thumb_func
 1440              		.type	CapSense_CSDSetupWidget, %function
 1441              	CapSense_CSDSetupWidget:
 1442              	.LFB7:
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1443              		.loc 1 1180 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447              	.LVL199:
 1448 0000 70B5     		push	{r4, r5, r6, lr}
 1449              		.cfi_def_cfa_offset 16
 1450              		.cfi_offset 4, -16
 1451              		.cfi_offset 5, -12
 1452              		.cfi_offset 6, -8
 1453              		.cfi_offset 14, -4
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1454              		.loc 1 1181 0
 1455 0002 104E     		ldr	r6, .L91
 1456 0004 4301     		lsls	r3, r0, #5
 1457 0006 F318     		adds	r3, r6, r3
 1458 0008 5D68     		ldr	r5, [r3, #4]
 1459              	.LVL200:
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1460              		.loc 1 1185 0
 1461 000a C0B2     		uxtb	r0, r0
 1462              	.LVL201:
 1463 000c 0E4C     		ldr	r4, .L91+4
 1464 000e 2070     		strb	r0, [r4]
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1465              		.loc 1 1187 0
 1466 0010 0120     		movs	r0, #1
 1467 0012 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1468              	.LVL202:
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1469              		.loc 1 1195 0
 1470 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1471              	.LVL203:
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1472              		.loc 1 1199 0
 1473 001a 2378     		ldrb	r3, [r4]
 1474 001c 5B01     		lsls	r3, r3, #5
 1475 001e 9A59     		ldr	r2, [r3, r6]
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
 1476              		.loc 1 1198 0
 1477 0020 0A4B     		ldr	r3, .L91+8
 1478 0022 1A60     		str	r2, [r3]
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
 1479              		.loc 1 1202 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 78


 1480 0024 0A4B     		ldr	r3, .L91+12
 1481 0026 DA68     		ldr	r2, [r3, #12]
 1482 0028 7F21     		movs	r1, #127
 1483 002a 8A43     		bics	r2, r1
 1484 002c DA60     		str	r2, [r3, #12]
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1485              		.loc 1 1203 0
 1486 002e 2178     		ldrb	r1, [r4]
 1487 0030 DA68     		ldr	r2, [r3, #12]
 1488 0032 0A43     		orrs	r2, r1
 1489 0034 DA60     		str	r2, [r3, #12]
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) || \
 1490              		.loc 1 1205 0
 1491 0036 2800     		movs	r0, r5
 1492 0038 FFF7FEFF 		bl	CapSense_SsCSDCalculateScanDuration
 1493              	.LVL204:
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
 1494              		.loc 1 1210 0
 1495 003c FFF7FEFF 		bl	CapSense_SsCSDConfigClock
 1496              	.LVL205:
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1497              		.loc 1 1212 0
 1498              		@ sp needed
 1499              	.LVL206:
 1500              	.LVL207:
 1501 0040 70BD     		pop	{r4, r5, r6, pc}
 1502              	.L92:
 1503 0042 C046     		.align	2
 1504              	.L91:
 1505 0044 00000000 		.word	CapSense_dsFlash
 1506 0048 00000000 		.word	CapSense_widgetIndex
 1507 004c 00000000 		.word	CapSense_curSnsIOPtr
 1508 0050 00000000 		.word	CapSense_dsRam
 1509              		.cfi_endproc
 1510              	.LFE7:
 1511              		.size	CapSense_CSDSetupWidget, .-CapSense_CSDSetupWidget
 1512              		.section	.text.CapSense_CSDSetupWidgetExt,"ax",%progbits
 1513              		.align	2
 1514              		.global	CapSense_CSDSetupWidgetExt
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	CapSense_CSDSetupWidgetExt, %function
 1518              	CapSense_CSDSetupWidgetExt:
 1519              	.LFB8:
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1520              		.loc 1 1266 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              	.LVL208:
 1525 0000 70B5     		push	{r4, r5, r6, lr}
 1526              		.cfi_def_cfa_offset 16
 1527              		.cfi_offset 4, -16
 1528              		.cfi_offset 5, -12
 1529              		.cfi_offset 6, -8
 1530              		.cfi_offset 14, -4
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 79


 1531              		.loc 1 1267 0
 1532 0002 4301     		lsls	r3, r0, #5
 1533 0004 134A     		ldr	r2, .L94
 1534 0006 D318     		adds	r3, r2, r3
 1535 0008 5D68     		ldr	r5, [r3, #4]
 1536              	.LVL209:
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1537              		.loc 1 1271 0
 1538 000a C9B2     		uxtb	r1, r1
 1539              	.LVL210:
 1540 000c 124C     		ldr	r4, .L94+4
 1541 000e 2170     		strb	r1, [r4]
1275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 1542              		.loc 1 1275 0
 1543 0010 9968     		ldr	r1, [r3, #8]
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1544              		.loc 1 1276 0
 1545 0012 2378     		ldrb	r3, [r4]
 1546 0014 DBB2     		uxtb	r3, r3
 1547 0016 9A00     		lsls	r2, r3, #2
 1548 0018 D318     		adds	r3, r2, r3
 1549 001a 5A00     		lsls	r2, r3, #1
 1550 001c 8A18     		adds	r2, r1, r2
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1551              		.loc 1 1274 0
 1552 001e 0F4B     		ldr	r3, .L94+8
 1553 0020 1A60     		str	r2, [r3]
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1554              		.loc 1 1278 0
 1555 0022 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 1556              	.LVL211:
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1557              		.loc 1 1281 0
 1558 0026 2800     		movs	r0, r5
 1559 0028 FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1560              	.LVL212:
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
 1561              		.loc 1 1292 0
 1562 002c 2378     		ldrb	r3, [r4]
 1563 002e DBB2     		uxtb	r3, r3
 1564 0030 0B49     		ldr	r1, .L94+12
 1565 0032 DA00     		lsls	r2, r3, #3
 1566 0034 D31A     		subs	r3, r2, r3
 1567 0036 9800     		lsls	r0, r3, #2
 1568 0038 0B68     		ldr	r3, [r1]
 1569 003a 9C46     		mov	ip, r3
 1570 003c 6044     		add	r0, r0, ip
 1571 003e 0860     		str	r0, [r1]
1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1572              		.loc 1 1293 0
 1573 0040 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1574              	.LVL213:
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1575              		.loc 1 1303 0
 1576 0044 0122     		movs	r2, #1
 1577 0046 074B     		ldr	r3, .L94+16
 1578 0048 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 80


1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1579              		.loc 1 1306 0
 1580 004a 0748     		ldr	r0, .L94+20
 1581 004c FFF7FEFF 		bl	CapSense_ISR_StartEx
 1582              	.LVL214:
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1583              		.loc 1 1307 0
 1584              		@ sp needed
 1585              	.LVL215:
 1586 0050 70BD     		pop	{r4, r5, r6, pc}
 1587              	.L95:
 1588 0052 C046     		.align	2
 1589              	.L94:
 1590 0054 00000000 		.word	CapSense_dsFlash
 1591 0058 00000000 		.word	CapSense_sensorIndex
 1592 005c 00000000 		.word	CapSense_curRamSnsPtr
 1593 0060 00000000 		.word	CapSense_curSnsIOPtr
 1594 0064 00000000 		.word	.LANCHOR1
 1595 0068 00000000 		.word	CapSense_CSDPostSingleScan
 1596              		.cfi_endproc
 1597              	.LFE8:
 1598              		.size	CapSense_CSDSetupWidgetExt, .-CapSense_CSDSetupWidgetExt
 1599              		.section	.text.CapSense_SsCSDCalibrate,"ax",%progbits
 1600              		.align	2
 1601              		.code	16
 1602              		.thumb_func
 1603              		.type	CapSense_SsCSDCalibrate, %function
 1604              	CapSense_SsCSDCalibrate:
 1605              	.LFB19:
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsIndex;
 1606              		.loc 1 2175 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 16
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              	.LVL216:
 1611 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1612              		.cfi_def_cfa_offset 20
 1613              		.cfi_offset 4, -20
 1614              		.cfi_offset 5, -16
 1615              		.cfi_offset 6, -12
 1616              		.cfi_offset 7, -8
 1617              		.cfi_offset 14, -4
 1618 0002 5746     		mov	r7, r10
 1619 0004 80B4     		push	{r7}
 1620              		.cfi_def_cfa_offset 24
 1621              		.cfi_offset 10, -24
 1622 0006 84B0     		sub	sp, sp, #16
 1623              		.cfi_def_cfa_offset 40
 1624 0008 0190     		str	r0, [sp, #4]
 1625              	.LVL217:
2194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1626              		.loc 1 2194 0
 1627 000a 4301     		lsls	r3, r0, #5
 1628 000c 4F4A     		ldr	r2, .L121
 1629 000e D318     		adds	r3, r2, r3
 1630              	.LVL218:
 1631 0010 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 81


 1632              	.LVL219:
 1633 0012 9A46     		mov	r10, r3
 1634              	.LVL220:
2196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
 1635              		.loc 1 2196 0
 1636 0014 1D00     		movs	r5, r3
 1637 0016 0935     		adds	r5, r5, #9
 1638              	.LVL221:
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1639              		.loc 1 2199 0
 1640 0018 0123     		movs	r3, #1
 1641              	.LVL222:
 1642 001a 03E0     		b	.L97
 1643              	.LVL223:
 1644              	.L98:
2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 1645              		.loc 1 2201 0
 1646 001c 0020     		movs	r0, #0
 1647 001e 03AB     		add	r3, sp, #12
 1648              	.LVL224:
 1649 0020 9854     		strb	r0, [r3, r2]
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1650              		.loc 1 2199 0
 1651 0022 1300     		movs	r3, r2
 1652              	.LVL225:
 1653              	.L97:
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1654              		.loc 1 2199 0 is_stmt 0 discriminator 1
 1655 0024 5A1E     		subs	r2, r3, #1
 1656              	.LVL226:
 1657 0026 002B     		cmp	r3, #0
 1658 0028 F8D1     		bne	.L98
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1659              		.loc 1 2208 0 is_stmt 1
 1660 002a 5346     		mov	r3, r10
 1661 002c 1A88     		ldrh	r2, [r3]
 1662              	.LVL227:
 1663 002e 0123     		movs	r3, #1
 1664 0030 9340     		lsls	r3, r3, r2
 1665 0032 013B     		subs	r3, r3, #1
 1666 0034 5943     		muls	r1, r3
 1667              	.LVL228:
 1668 0036 0800     		movs	r0, r1
 1669 0038 6421     		movs	r1, #100
 1670 003a FFF7FEFF 		bl	__aeabi_uidiv
 1671              	.LVL229:
 1672 003e 0600     		movs	r6, r0
 1673              	.LVL230:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1674              		.loc 1 2219 0
 1675 0040 0023     		movs	r3, #0
 1676 0042 0093     		str	r3, [sp]
 1677 0044 6BE0     		b	.L99
 1678              	.LVL231:
 1679              	.L117:
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1680              		.loc 1 2232 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 82


 1681 0046 019B     		ldr	r3, [sp, #4]
 1682 0048 5B01     		lsls	r3, r3, #5
 1683 004a 404A     		ldr	r2, .L121
 1684              	.LVL232:
 1685 004c D318     		adds	r3, r2, r3
 1686 004e 9F68     		ldr	r7, [r3, #8]
 1687 0050 009A     		ldr	r2, [sp]
 1688 0052 9300     		lsls	r3, r2, #2
 1689 0054 9446     		mov	ip, r2
 1690 0056 6344     		add	r3, r3, ip
 1691 0058 5A00     		lsls	r2, r3, #1
 1692 005a BF18     		adds	r7, r7, r2
 1693              	.LVL233:
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1694              		.loc 1 2236 0
 1695 005c 0123     		movs	r3, #1
 1696 005e 04E0     		b	.L100
 1697              	.LVL234:
 1698              	.L101:
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 1699              		.loc 1 2238 0
 1700 0060 4023     		movs	r3, #64
 1701 0062 AB54     		strb	r3, [r5, r2]
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif
 1702              		.loc 1 2240 0
 1703 0064 B918     		adds	r1, r7, r2
 1704 0066 4B72     		strb	r3, [r1, #9]
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1705              		.loc 1 2236 0
 1706 0068 1300     		movs	r3, r2
 1707              	.LVL235:
 1708              	.L100:
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1709              		.loc 1 2236 0 is_stmt 0 discriminator 1
 1710 006a 5A1E     		subs	r2, r3, #1
 1711              	.LVL236:
 1712 006c 002B     		cmp	r3, #0
 1713 006e F7D1     		bne	.L101
 1714 0070 4024     		movs	r4, #64
 1715              	.LVL237:
 1716              	.L110:
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1717              		.loc 1 2248 0 is_stmt 1
 1718 0072 0099     		ldr	r1, [sp]
 1719 0074 0198     		ldr	r0, [sp, #4]
 1720 0076 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 1721              	.LVL238:
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1722              		.loc 1 2255 0
 1723 007a FFF7FEFF 		bl	CapSense_CSDScanExt
 1724              	.LVL239:
2257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
 1725              		.loc 1 2257 0
 1726 007e 344B     		ldr	r3, .L121+4
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1727              		.loc 1 2258 0
 1728 0080 00E0     		b	.L102
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 83


 1729              	.LVL240:
 1730              	.L104:
2260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 1731              		.loc 1 2260 0
 1732 0082 013B     		subs	r3, r3, #1
 1733              	.LVL241:
 1734              	.L102:
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1735              		.loc 1 2258 0
 1736 0084 334A     		ldr	r2, .L121+8
 1737 0086 D268     		ldr	r2, [r2, #12]
 1738 0088 1206     		lsls	r2, r2, #24
 1739 008a 0DD5     		bpl	.L120
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1740              		.loc 1 2258 0 is_stmt 0 discriminator 1
 1741 008c 002B     		cmp	r3, #0
 1742 008e F8D1     		bne	.L104
 1743 0090 0133     		adds	r3, r3, #1
 1744              	.LVL242:
 1745 0092 0AE0     		b	.L103
 1746              	.LVL243:
 1747              	.L106:
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 1748              		.loc 1 2266 0 is_stmt 1
 1749 0094 5300     		lsls	r3, r2, #1
 1750 0096 DB5B     		ldrh	r3, [r3, r7]
 1751 0098 9E42     		cmp	r6, r3
 1752 009a 03D9     		bls	.L105
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 1753              		.loc 1 2268 0
 1754 009c A918     		adds	r1, r5, r2
 1755 009e 0B78     		ldrb	r3, [r1]
 1756 00a0 A343     		bics	r3, r4
 1757 00a2 0B70     		strb	r3, [r1]
 1758              	.L105:
 1759 00a4 1300     		movs	r3, r2
 1760 00a6 00E0     		b	.L103
 1761              	.LVL244:
 1762              	.L120:
 1763 00a8 0123     		movs	r3, #1
 1764              	.LVL245:
 1765              	.L103:
2264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1766              		.loc 1 2264 0 discriminator 1
 1767 00aa 5A1E     		subs	r2, r3, #1
 1768              	.LVL246:
 1769 00ac 002B     		cmp	r3, #0
 1770 00ae F1D1     		bne	.L106
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 1771              		.loc 1 2273 0
 1772 00b0 6408     		lsrs	r4, r4, #1
 1773              	.LVL247:
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1774              		.loc 1 2274 0
 1775 00b2 0133     		adds	r3, r3, #1
 1776 00b4 0FE0     		b	.L107
 1777              	.LVL248:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 84


 1778              	.L109:
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 1779              		.loc 1 2276 0
 1780 00b6 A918     		adds	r1, r5, r2
 1781 00b8 0B78     		ldrb	r3, [r1]
 1782 00ba 2343     		orrs	r3, r4
 1783 00bc DBB2     		uxtb	r3, r3
 1784 00be 0B70     		strb	r3, [r1]
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif
 1785              		.loc 1 2278 0
 1786 00c0 B818     		adds	r0, r7, r2
 1787 00c2 4372     		strb	r3, [r0, #9]
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 1788              		.loc 1 2280 0
 1789 00c4 002C     		cmp	r4, #0
 1790 00c6 05D1     		bne	.L108
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
 1791              		.loc 1 2282 0
 1792 00c8 0B78     		ldrb	r3, [r1]
 1793 00ca 002B     		cmp	r3, #0
 1794 00cc 02D1     		bne	.L108
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 1795              		.loc 1 2284 0
 1796 00ce 0133     		adds	r3, r3, #1
 1797 00d0 0B70     		strb	r3, [r1]
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif
 1798              		.loc 1 2286 0
 1799 00d2 4372     		strb	r3, [r0, #9]
 1800              	.L108:
 1801 00d4 1300     		movs	r3, r2
 1802              	.LVL249:
 1803              	.L107:
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1804              		.loc 1 2274 0 discriminator 1
 1805 00d6 5A1E     		subs	r2, r3, #1
 1806              	.LVL250:
 1807 00d8 002B     		cmp	r3, #0
 1808 00da ECD1     		bne	.L109
2292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1809              		.loc 1 2292 0
 1810 00dc 002C     		cmp	r4, #0
 1811 00de C8D1     		bne	.L110
 1812 00e0 0133     		adds	r3, r3, #1
 1813 00e2 07E0     		b	.L111
 1814              	.L113:
2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1815              		.loc 1 2296 0
 1816 00e4 03AB     		add	r3, sp, #12
 1817              	.LVL251:
 1818 00e6 9B18     		adds	r3, r3, r2
 1819              	.LVL252:
 1820 00e8 1878     		ldrb	r0, [r3]
 1821 00ea A95C     		ldrb	r1, [r5, r2]
 1822 00ec 8842     		cmp	r0, r1
 1823 00ee 00D2     		bcs	.L112
2298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 1824              		.loc 1 2298 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 85


 1825 00f0 1970     		strb	r1, [r3]
 1826              	.L112:
 1827 00f2 1300     		movs	r3, r2
 1828              	.L111:
 1829              	.LVL253:
2294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1830              		.loc 1 2294 0 discriminator 1
 1831 00f4 5A1E     		subs	r2, r3, #1
 1832              	.LVL254:
 1833 00f6 002B     		cmp	r3, #0
 1834 00f8 F4D1     		bne	.L113
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
 1835              		.loc 1 2303 0
 1836 00fa 0099     		ldr	r1, [sp]
 1837 00fc 0198     		ldr	r0, [sp, #4]
 1838 00fe FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 1839              	.LVL255:
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1840              		.loc 1 2304 0
 1841 0102 FFF7FEFF 		bl	CapSense_CSDScanExt
 1842              	.LVL256:
2306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 1843              		.loc 1 2306 0
 1844 0106 124B     		ldr	r3, .L121+4
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1845              		.loc 1 2307 0
 1846 0108 00E0     		b	.L114
 1847              	.LVL257:
 1848              	.L116:
2309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 1849              		.loc 1 2309 0
 1850 010a 013B     		subs	r3, r3, #1
 1851              	.LVL258:
 1852              	.L114:
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1853              		.loc 1 2307 0
 1854 010c 114A     		ldr	r2, .L121+8
 1855 010e D268     		ldr	r2, [r2, #12]
 1856 0110 1206     		lsls	r2, r2, #24
 1857 0112 01D5     		bpl	.L115
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1858              		.loc 1 2307 0 is_stmt 0 discriminator 1
 1859 0114 002B     		cmp	r3, #0
 1860 0116 F8D1     		bne	.L116
 1861              	.L115:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1862              		.loc 1 2219 0 is_stmt 1 discriminator 2
 1863 0118 009B     		ldr	r3, [sp]
 1864              	.LVL259:
 1865 011a 0133     		adds	r3, r3, #1
 1866 011c 0093     		str	r3, [sp]
 1867              	.LVL260:
 1868              	.L99:
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1869              		.loc 1 2219 0 is_stmt 0 discriminator 1
 1870 011e 019B     		ldr	r3, [sp, #4]
 1871 0120 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 86


 1872 0122 0A4A     		ldr	r2, .L121
 1873 0124 D318     		adds	r3, r2, r3
 1874 0126 1B8B     		ldrh	r3, [r3, #24]
 1875 0128 009A     		ldr	r2, [sp]
 1876 012a 9A42     		cmp	r2, r3
 1877 012c 8BD3     		bcc	.L117
 1878 012e 0123     		movs	r3, #1
 1879 0130 05E0     		b	.L118
 1880              	.LVL261:
 1881              	.L119:
2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 1882              		.loc 1 2315 0 is_stmt 1
 1883 0132 03AB     		add	r3, sp, #12
 1884              	.LVL262:
 1885 0134 995C     		ldrb	r1, [r3, r2]
 1886 0136 5346     		mov	r3, r10
 1887              	.LVL263:
 1888 0138 9B18     		adds	r3, r3, r2
 1889 013a 5972     		strb	r1, [r3, #9]
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1890              		.loc 1 2313 0
 1891 013c 1300     		movs	r3, r2
 1892              	.LVL264:
 1893              	.L118:
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1894              		.loc 1 2313 0 is_stmt 0 discriminator 1
 1895 013e 5A1E     		subs	r2, r3, #1
 1896              	.LVL265:
 1897 0140 002B     		cmp	r3, #0
 1898 0142 F6D1     		bne	.L119
2368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1899              		.loc 1 2368 0 is_stmt 1
 1900 0144 04B0     		add	sp, sp, #16
 1901              	.LVL266:
 1902              		@ sp needed
 1903              	.LVL267:
 1904              	.LVL268:
 1905              	.LVL269:
 1906 0146 04BC     		pop	{r2}
 1907 0148 9246     		mov	r10, r2
 1908 014a F0BD     		pop	{r4, r5, r6, r7, pc}
 1909              	.L122:
 1910              		.align	2
 1911              	.L121:
 1912 014c 00000000 		.word	CapSense_dsFlash
 1913 0150 00A60E00 		.word	960000
 1914 0154 00000000 		.word	CapSense_dsRam
 1915              		.cfi_endproc
 1916              	.LFE19:
 1917              		.size	CapSense_SsCSDCalibrate, .-CapSense_SsCSDCalibrate
 1918              		.section	.text.CapSense_SsCSDDisconnectSnsExt,"ax",%progbits
 1919              		.align	2
 1920              		.global	CapSense_SsCSDDisconnectSnsExt
 1921              		.code	16
 1922              		.thumb_func
 1923              		.type	CapSense_SsCSDDisconnectSnsExt, %function
 1924              	CapSense_SsCSDDisconnectSnsExt:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 87


 1925              	.LFB13:
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1926              		.loc 1 1661 0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
 1930              	.LVL270:
 1931 0000 10B5     		push	{r4, lr}
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 4, -8
 1934              		.cfi_offset 14, -4
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 1935              		.loc 1 1668 0
 1936 0002 4001     		lsls	r0, r0, #5
 1937              	.LVL271:
 1938 0004 054B     		ldr	r3, .L124
 1939 0006 C058     		ldr	r0, [r0, r3]
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1940              		.loc 1 1669 0
 1941 0008 CB00     		lsls	r3, r1, #3
 1942 000a 591A     		subs	r1, r3, r1
 1943              	.LVL272:
 1944 000c 8B00     		lsls	r3, r1, #2
 1945 000e C018     		adds	r0, r0, r3
1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 1946              		.loc 1 1667 0
 1947 0010 034B     		ldr	r3, .L124+4
 1948 0012 1860     		str	r0, [r3]
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 1949              		.loc 1 1702 0
 1950 0014 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1951              	.LVL273:
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1952              		.loc 1 1704 0
 1953              		@ sp needed
 1954 0018 10BD     		pop	{r4, pc}
 1955              	.L125:
 1956 001a C046     		.align	2
 1957              	.L124:
 1958 001c 00000000 		.word	CapSense_dsFlash
 1959 0020 00000000 		.word	CapSense_curSnsIOPtr
 1960              		.cfi_endproc
 1961              	.LFE13:
 1962              		.size	CapSense_SsCSDDisconnectSnsExt, .-CapSense_SsCSDDisconnectSnsExt
 1963              		.section	.text.CapSense_CSDCalibrateWidget,"ax",%progbits
 1964              		.align	2
 1965              		.global	CapSense_CSDCalibrateWidget
 1966              		.code	16
 1967              		.thumb_func
 1968              		.type	CapSense_CSDCalibrateWidget, %function
 1969              	CapSense_CSDCalibrateWidget:
 1970              	.LFB20:
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1971              		.loc 1 2417 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 0
 1974              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 88


 1975              	.LVL274:
 1976 0000 70B5     		push	{r4, r5, r6, lr}
 1977              		.cfi_def_cfa_offset 16
 1978              		.cfi_offset 4, -16
 1979              		.cfi_offset 5, -12
 1980              		.cfi_offset 6, -8
 1981              		.cfi_offset 14, -4
 1982 0002 0400     		movs	r4, r0
 1983 0004 0D00     		movs	r5, r1
 1984              	.LVL275:
2425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1985              		.loc 1 2425 0
 1986 0006 4601     		lsls	r6, r0, #5
 1987 0008 174B     		ldr	r3, .L134
 1988 000a F618     		adds	r6, r6, r3
 1989              	.LVL276:
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1990              		.loc 1 2427 0
 1991 000c 174B     		ldr	r3, .L134+4
 1992 000e DB68     		ldr	r3, [r3, #12]
 1993 0010 DB03     		lsls	r3, r3, #15
 1994 0012 24D4     		bmi	.L132
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSD_IDAC_GAIN_INDEX_DEFAULT;
 1995              		.loc 1 2435 0
 1996 0014 7368     		ldr	r3, [r6, #4]
 1997 0016 0022     		movs	r2, #0
 1998 0018 9A72     		strb	r2, [r3, #10]
 1999              	.LVL277:
 2000              	.L128:
2444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     gainSwitch = CapSense_SsCSDSwitchIdacGain(ptrFlashWidget);
 2001              		.loc 1 2444 0 discriminator 1
 2002 001a 2900     		movs	r1, r5
 2003 001c 2000     		movs	r0, r4
 2004 001e FFF7FEFF 		bl	CapSense_SsCSDCalibrate
 2005              	.LVL278:
2445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
 2006              		.loc 1 2445 0 discriminator 1
 2007 0022 3000     		movs	r0, r6
 2008 0024 FFF7FEFF 		bl	CapSense_SsCSDSwitchIdacGain
 2009              	.LVL279:
2446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 2010              		.loc 1 2446 0 discriminator 1
 2011 0028 0028     		cmp	r0, #0
 2012 002a F6D1     		bne	.L128
2451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif
 2013              		.loc 1 2451 0
 2014 002c 2900     		movs	r1, r5
 2015 002e 3000     		movs	r0, r6
 2016              	.LVL280:
 2017 0030 FFF7FEFF 		bl	CapSense_SsCSDNormalizeIdac
 2018              	.LVL281:
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScan();
 2019              		.loc 1 2455 0
 2020 0034 2000     		movs	r0, r4
 2021 0036 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 2022              	.LVL282:
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 89


 2023              		.loc 1 2456 0
 2024 003a FFF7FEFF 		bl	CapSense_CSDScan
 2025              	.LVL283:
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 2026              		.loc 1 2458 0
 2027 003e 0C4B     		ldr	r3, .L134+8
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2028              		.loc 1 2459 0
 2029 0040 00E0     		b	.L129
 2030              	.LVL284:
 2031              	.L131:
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2032              		.loc 1 2461 0
 2033 0042 013B     		subs	r3, r3, #1
 2034              	.LVL285:
 2035              	.L129:
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2036              		.loc 1 2459 0
 2037 0044 094A     		ldr	r2, .L134+4
 2038 0046 D268     		ldr	r2, [r2, #12]
 2039 0048 1206     		lsls	r2, r2, #24
 2040 004a 01D5     		bpl	.L130
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2041              		.loc 1 2459 0 is_stmt 0 discriminator 1
 2042 004c 002B     		cmp	r3, #0
 2043 004e F8D1     		bne	.L131
 2044              	.L130:
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 2045              		.loc 1 2465 0 is_stmt 1
 2046 0050 002B     		cmp	r3, #0
 2047 0052 06D0     		beq	.L133
2471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2048              		.loc 1 2471 0
 2049 0054 2900     		movs	r1, r5
 2050 0056 2000     		movs	r0, r4
 2051 0058 FFF7FEFF 		bl	CapSense_SsCSDCalibrateCheck
 2052              	.LVL286:
 2053 005c 02E0     		b	.L127
 2054              	.LVL287:
 2055              	.L132:
2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 2056              		.loc 1 2430 0
 2057 005e 1120     		movs	r0, #17
 2058              	.LVL288:
 2059 0060 00E0     		b	.L127
 2060              	.LVL289:
 2061              	.L133:
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 2062              		.loc 1 2467 0
 2063 0062 1020     		movs	r0, #16
 2064              	.LVL290:
 2065              	.L127:
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
 2066              		.loc 1 2481 0
 2067              		@ sp needed
 2068              	.LVL291:
 2069              	.LVL292:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 90


 2070              	.LVL293:
 2071 0064 70BD     		pop	{r4, r5, r6, pc}
 2072              	.L135:
 2073 0066 C046     		.align	2
 2074              	.L134:
 2075 0068 00000000 		.word	CapSense_dsFlash
 2076 006c 00000000 		.word	CapSense_dsRam
 2077 0070 00366E01 		.word	24000000
 2078              		.cfi_endproc
 2079              	.LFE20:
 2080              		.size	CapSense_CSDCalibrateWidget, .-CapSense_CSDCalibrateWidget
 2081              		.global	CapSense_configCsd
 2082              		.data
 2083              		.align	2
 2084              		.set	.LANCHOR0,. + 0
 2085              		.type	CapSense_configCsd, %object
 2086              		.size	CapSense_configCsd, 4
 2087              	CapSense_configCsd:
 2088 0000 0008C001 		.word	29362176
 2089              		.type	CapSense_counterResolution, %object
 2090              		.size	CapSense_counterResolution, 4
 2091              	CapSense_counterResolution:
 2092 0004 0000FF0F 		.word	268369920
 2093              		.bss
 2094              		.set	.LANCHOR1,. + 0
 2095              		.type	CapSense_eleCsdDisconnectFlag, %object
 2096              		.size	CapSense_eleCsdDisconnectFlag, 1
 2097              	CapSense_eleCsdDisconnectFlag:
 2098 0000 00       		.space	1
 2099              		.text
 2100              	.Letext0:
 2101              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2102              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 2103              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 2104              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 2105              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 2106              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 2107              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 2108              		.section	.debug_info,"",%progbits
 2109              	.Ldebug_info0:
 2110 0000 3B120000 		.4byte	0x123b
 2111 0004 0400     		.2byte	0x4
 2112 0006 00000000 		.4byte	.Ldebug_abbrev0
 2113 000a 04       		.byte	0x4
 2114 000b 01       		.uleb128 0x1
 2115 000c 18030000 		.4byte	.LASF185
 2116 0010 0C       		.byte	0xc
 2117 0011 44070000 		.4byte	.LASF186
 2118 0015 95000000 		.4byte	.LASF187
 2119 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2120 001d 00000000 		.4byte	0
 2121 0021 00000000 		.4byte	.Ldebug_line0
 2122 0025 02       		.uleb128 0x2
 2123 0026 01       		.byte	0x1
 2124 0027 06       		.byte	0x6
 2125 0028 170B0000 		.4byte	.LASF0
 2126 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 91


 2127 002d 01       		.byte	0x1
 2128 002e 08       		.byte	0x8
 2129 002f 460A0000 		.4byte	.LASF1
 2130 0033 02       		.uleb128 0x2
 2131 0034 02       		.byte	0x2
 2132 0035 05       		.byte	0x5
 2133 0036 17080000 		.4byte	.LASF2
 2134 003a 02       		.uleb128 0x2
 2135 003b 02       		.byte	0x2
 2136 003c 07       		.byte	0x7
 2137 003d 3F0B0000 		.4byte	.LASF3
 2138 0041 02       		.uleb128 0x2
 2139 0042 04       		.byte	0x4
 2140 0043 05       		.byte	0x5
 2141 0044 A0080000 		.4byte	.LASF4
 2142 0048 02       		.uleb128 0x2
 2143 0049 04       		.byte	0x4
 2144 004a 07       		.byte	0x7
 2145 004b 9B090000 		.4byte	.LASF5
 2146 004f 02       		.uleb128 0x2
 2147 0050 08       		.byte	0x8
 2148 0051 05       		.byte	0x5
 2149 0052 B0050000 		.4byte	.LASF6
 2150 0056 02       		.uleb128 0x2
 2151 0057 08       		.byte	0x8
 2152 0058 07       		.byte	0x7
 2153 0059 6C020000 		.4byte	.LASF7
 2154 005d 03       		.uleb128 0x3
 2155 005e 04       		.byte	0x4
 2156 005f 05       		.byte	0x5
 2157 0060 696E7400 		.ascii	"int\000"
 2158 0064 02       		.uleb128 0x2
 2159 0065 04       		.byte	0x4
 2160 0066 07       		.byte	0x7
 2161 0067 6E000000 		.4byte	.LASF8
 2162 006b 04       		.uleb128 0x4
 2163 006c 850B0000 		.4byte	.LASF9
 2164 0070 02       		.byte	0x2
 2165 0071 FB01     		.2byte	0x1fb
 2166 0073 2C000000 		.4byte	0x2c
 2167 0077 04       		.uleb128 0x4
 2168 0078 42050000 		.4byte	.LASF10
 2169 007c 02       		.byte	0x2
 2170 007d FC01     		.2byte	0x1fc
 2171 007f 3A000000 		.4byte	0x3a
 2172 0083 04       		.uleb128 0x4
 2173 0084 E7060000 		.4byte	.LASF11
 2174 0088 02       		.byte	0x2
 2175 0089 FD01     		.2byte	0x1fd
 2176 008b 48000000 		.4byte	0x48
 2177 008f 02       		.uleb128 0x2
 2178 0090 04       		.byte	0x4
 2179 0091 04       		.byte	0x4
 2180 0092 E9010000 		.4byte	.LASF12
 2181 0096 02       		.uleb128 0x2
 2182 0097 08       		.byte	0x8
 2183 0098 04       		.byte	0x4
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 92


 2184 0099 8B0B0000 		.4byte	.LASF13
 2185 009d 02       		.uleb128 0x2
 2186 009e 01       		.byte	0x1
 2187 009f 08       		.byte	0x8
 2188 00a0 EC040000 		.4byte	.LASF14
 2189 00a4 04       		.uleb128 0x4
 2190 00a5 3D0A0000 		.4byte	.LASF15
 2191 00a9 02       		.byte	0x2
 2192 00aa 9D02     		.2byte	0x29d
 2193 00ac 48000000 		.4byte	0x48
 2194 00b0 05       		.uleb128 0x5
 2195 00b1 6B000000 		.4byte	0x6b
 2196 00b5 04       		.uleb128 0x4
 2197 00b6 B6070000 		.4byte	.LASF16
 2198 00ba 02       		.byte	0x2
 2199 00bb A702     		.2byte	0x2a7
 2200 00bd C1000000 		.4byte	0xc1
 2201 00c1 05       		.uleb128 0x5
 2202 00c2 83000000 		.4byte	0x83
 2203 00c6 04       		.uleb128 0x4
 2204 00c7 7C0A0000 		.4byte	.LASF17
 2205 00cb 03       		.byte	0x3
 2206 00cc 1E01     		.2byte	0x11e
 2207 00ce 77000000 		.4byte	0x77
 2208 00d2 04       		.uleb128 0x4
 2209 00d3 68050000 		.4byte	.LASF18
 2210 00d7 03       		.byte	0x3
 2211 00d8 2201     		.2byte	0x122
 2212 00da 6B000000 		.4byte	0x6b
 2213 00de 06       		.uleb128 0x6
 2214 00df 0C       		.byte	0xc
 2215 00e0 04       		.byte	0x4
 2216 00e1 75       		.byte	0x75
 2217 00e2 3B010000 		.4byte	0x13b
 2218 00e6 07       		.uleb128 0x7
 2219 00e7 A00B0000 		.4byte	.LASF19
 2220 00eb 04       		.byte	0x4
 2221 00ec 7A       		.byte	0x7a
 2222 00ed 77000000 		.4byte	0x77
 2223 00f1 00       		.byte	0
 2224 00f2 07       		.uleb128 0x7
 2225 00f3 A70B0000 		.4byte	.LASF20
 2226 00f7 04       		.byte	0x4
 2227 00f8 7E       		.byte	0x7e
 2228 00f9 77000000 		.4byte	0x77
 2229 00fd 02       		.byte	0x2
 2230 00fe 07       		.uleb128 0x7
 2231 00ff AE0B0000 		.4byte	.LASF21
 2232 0103 04       		.byte	0x4
 2233 0104 82       		.byte	0x82
 2234 0105 77000000 		.4byte	0x77
 2235 0109 04       		.byte	0x4
 2236 010a 07       		.uleb128 0x7
 2237 010b B50B0000 		.4byte	.LASF22
 2238 010f 04       		.byte	0x4
 2239 0110 86       		.byte	0x86
 2240 0111 77000000 		.4byte	0x77
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 93


 2241 0115 06       		.byte	0x6
 2242 0116 07       		.uleb128 0x7
 2243 0117 BC0B0000 		.4byte	.LASF23
 2244 011b 04       		.byte	0x4
 2245 011c 8A       		.byte	0x8a
 2246 011d 77000000 		.4byte	0x77
 2247 0121 08       		.byte	0x8
 2248 0122 07       		.uleb128 0x7
 2249 0123 C30B0000 		.4byte	.LASF24
 2250 0127 04       		.byte	0x4
 2251 0128 8E       		.byte	0x8e
 2252 0129 6B000000 		.4byte	0x6b
 2253 012d 0A       		.byte	0xa
 2254 012e 07       		.uleb128 0x7
 2255 012f CA0B0000 		.4byte	.LASF25
 2256 0133 04       		.byte	0x4
 2257 0134 92       		.byte	0x92
 2258 0135 6B000000 		.4byte	0x6b
 2259 0139 0B       		.byte	0xb
 2260 013a 00       		.byte	0
 2261 013b 08       		.uleb128 0x8
 2262 013c B5040000 		.4byte	.LASF26
 2263 0140 04       		.byte	0x4
 2264 0141 93       		.byte	0x93
 2265 0142 DE000000 		.4byte	0xde
 2266 0146 09       		.uleb128 0x9
 2267 0147 01       		.byte	0x1
 2268 0148 2C000000 		.4byte	0x2c
 2269 014c 05       		.byte	0x5
 2270 014d 70       		.byte	0x70
 2271 014e 71010000 		.4byte	0x171
 2272 0152 0A       		.uleb128 0xa
 2273 0153 54000000 		.4byte	.LASF27
 2274 0157 00       		.byte	0
 2275 0158 0A       		.uleb128 0xa
 2276 0159 6E090000 		.4byte	.LASF28
 2277 015d 01       		.byte	0x1
 2278 015e 0A       		.uleb128 0xa
 2279 015f CF080000 		.4byte	.LASF29
 2280 0163 02       		.byte	0x2
 2281 0164 0A       		.uleb128 0xa
 2282 0165 A50A0000 		.4byte	.LASF30
 2283 0169 03       		.byte	0x3
 2284 016a 0A       		.uleb128 0xa
 2285 016b 74070000 		.4byte	.LASF31
 2286 016f 04       		.byte	0x4
 2287 0170 00       		.byte	0
 2288 0171 06       		.uleb128 0x6
 2289 0172 14       		.byte	0x14
 2290 0173 05       		.byte	0x5
 2291 0174 AD       		.byte	0xad
 2292 0175 16020000 		.4byte	0x216
 2293 0179 07       		.uleb128 0x7
 2294 017a 56050000 		.4byte	.LASF32
 2295 017e 05       		.byte	0x5
 2296 017f B2       		.byte	0xb2
 2297 0180 77000000 		.4byte	0x77
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 94


 2298 0184 00       		.byte	0
 2299 0185 07       		.uleb128 0x7
 2300 0186 EE090000 		.4byte	.LASF33
 2301 018a 05       		.byte	0x5
 2302 018b B7       		.byte	0xb7
 2303 018c C6000000 		.4byte	0xc6
 2304 0190 02       		.byte	0x2
 2305 0191 07       		.uleb128 0x7
 2306 0192 E4040000 		.4byte	.LASF34
 2307 0196 05       		.byte	0x5
 2308 0197 BC       		.byte	0xbc
 2309 0198 6B000000 		.4byte	0x6b
 2310 019c 04       		.byte	0x4
 2311 019d 07       		.uleb128 0x7
 2312 019e 85060000 		.4byte	.LASF35
 2313 01a2 05       		.byte	0x5
 2314 01a3 C1       		.byte	0xc1
 2315 01a4 6B000000 		.4byte	0x6b
 2316 01a8 05       		.byte	0x5
 2317 01a9 07       		.uleb128 0x7
 2318 01aa 17040000 		.4byte	.LASF36
 2319 01ae 05       		.byte	0x5
 2320 01af C7       		.byte	0xc7
 2321 01b0 6B000000 		.4byte	0x6b
 2322 01b4 06       		.byte	0x6
 2323 01b5 07       		.uleb128 0x7
 2324 01b6 DF050000 		.4byte	.LASF37
 2325 01ba 05       		.byte	0x5
 2326 01bb CD       		.byte	0xcd
 2327 01bc 6B000000 		.4byte	0x6b
 2328 01c0 07       		.byte	0x7
 2329 01c1 07       		.uleb128 0x7
 2330 01c2 5F040000 		.4byte	.LASF38
 2331 01c6 05       		.byte	0x5
 2332 01c7 D4       		.byte	0xd4
 2333 01c8 D2000000 		.4byte	0xd2
 2334 01cc 08       		.byte	0x8
 2335 01cd 07       		.uleb128 0x7
 2336 01ce B9090000 		.4byte	.LASF39
 2337 01d2 05       		.byte	0x5
 2338 01d3 DB       		.byte	0xdb
 2339 01d4 16020000 		.4byte	0x216
 2340 01d8 09       		.byte	0x9
 2341 01d9 07       		.uleb128 0x7
 2342 01da BC010000 		.4byte	.LASF40
 2343 01de 05       		.byte	0x5
 2344 01df E0       		.byte	0xe0
 2345 01e0 6B000000 		.4byte	0x6b
 2346 01e4 0A       		.byte	0xa
 2347 01e5 07       		.uleb128 0x7
 2348 01e6 D80A0000 		.4byte	.LASF41
 2349 01ea 05       		.byte	0x5
 2350 01eb E8       		.byte	0xe8
 2351 01ec 77000000 		.4byte	0x77
 2352 01f0 0C       		.byte	0xc
 2353 01f1 07       		.uleb128 0x7
 2354 01f2 ED070000 		.4byte	.LASF42
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 95


 2355 01f6 05       		.byte	0x5
 2356 01f7 ED       		.byte	0xed
 2357 01f8 6B000000 		.4byte	0x6b
 2358 01fc 0E       		.byte	0xe
 2359 01fd 07       		.uleb128 0x7
 2360 01fe 2E090000 		.4byte	.LASF43
 2361 0202 05       		.byte	0x5
 2362 0203 F3       		.byte	0xf3
 2363 0204 77000000 		.4byte	0x77
 2364 0208 10       		.byte	0x10
 2365 0209 07       		.uleb128 0x7
 2366 020a 10040000 		.4byte	.LASF44
 2367 020e 05       		.byte	0x5
 2368 020f F8       		.byte	0xf8
 2369 0210 77000000 		.4byte	0x77
 2370 0214 12       		.byte	0x12
 2371 0215 00       		.byte	0
 2372 0216 0B       		.uleb128 0xb
 2373 0217 6B000000 		.4byte	0x6b
 2374 021b 26020000 		.4byte	0x226
 2375 021f 0C       		.uleb128 0xc
 2376 0220 26020000 		.4byte	0x226
 2377 0224 00       		.byte	0
 2378 0225 00       		.byte	0
 2379 0226 02       		.uleb128 0x2
 2380 0227 04       		.byte	0x4
 2381 0228 07       		.byte	0x7
 2382 0229 8A090000 		.4byte	.LASF45
 2383 022d 08       		.uleb128 0x8
 2384 022e B6060000 		.4byte	.LASF46
 2385 0232 05       		.byte	0x5
 2386 0233 F9       		.byte	0xf9
 2387 0234 71010000 		.4byte	0x171
 2388 0238 06       		.uleb128 0x6
 2389 0239 14       		.byte	0x14
 2390 023a 05       		.byte	0x5
 2391 023b FE       		.byte	0xfe
 2392 023c EA020000 		.4byte	0x2ea
 2393 0240 0D       		.uleb128 0xd
 2394 0241 56050000 		.4byte	.LASF32
 2395 0245 05       		.byte	0x5
 2396 0246 0301     		.2byte	0x103
 2397 0248 77000000 		.4byte	0x77
 2398 024c 00       		.byte	0
 2399 024d 0D       		.uleb128 0xd
 2400 024e EE090000 		.4byte	.LASF33
 2401 0252 05       		.byte	0x5
 2402 0253 0801     		.2byte	0x108
 2403 0255 C6000000 		.4byte	0xc6
 2404 0259 02       		.byte	0x2
 2405 025a 0D       		.uleb128 0xd
 2406 025b E4040000 		.4byte	.LASF34
 2407 025f 05       		.byte	0x5
 2408 0260 0D01     		.2byte	0x10d
 2409 0262 6B000000 		.4byte	0x6b
 2410 0266 04       		.byte	0x4
 2411 0267 0D       		.uleb128 0xd
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 96


 2412 0268 85060000 		.4byte	.LASF35
 2413 026c 05       		.byte	0x5
 2414 026d 1201     		.2byte	0x112
 2415 026f 6B000000 		.4byte	0x6b
 2416 0273 05       		.byte	0x5
 2417 0274 0D       		.uleb128 0xd
 2418 0275 17040000 		.4byte	.LASF36
 2419 0279 05       		.byte	0x5
 2420 027a 1801     		.2byte	0x118
 2421 027c 6B000000 		.4byte	0x6b
 2422 0280 06       		.byte	0x6
 2423 0281 0D       		.uleb128 0xd
 2424 0282 DF050000 		.4byte	.LASF37
 2425 0286 05       		.byte	0x5
 2426 0287 1E01     		.2byte	0x11e
 2427 0289 6B000000 		.4byte	0x6b
 2428 028d 07       		.byte	0x7
 2429 028e 0D       		.uleb128 0xd
 2430 028f 5F040000 		.4byte	.LASF38
 2431 0293 05       		.byte	0x5
 2432 0294 2501     		.2byte	0x125
 2433 0296 D2000000 		.4byte	0xd2
 2434 029a 08       		.byte	0x8
 2435 029b 0D       		.uleb128 0xd
 2436 029c B9090000 		.4byte	.LASF39
 2437 02a0 05       		.byte	0x5
 2438 02a1 2C01     		.2byte	0x12c
 2439 02a3 16020000 		.4byte	0x216
 2440 02a7 09       		.byte	0x9
 2441 02a8 0D       		.uleb128 0xd
 2442 02a9 BC010000 		.4byte	.LASF40
 2443 02ad 05       		.byte	0x5
 2444 02ae 3101     		.2byte	0x131
 2445 02b0 6B000000 		.4byte	0x6b
 2446 02b4 0A       		.byte	0xa
 2447 02b5 0D       		.uleb128 0xd
 2448 02b6 D80A0000 		.4byte	.LASF41
 2449 02ba 05       		.byte	0x5
 2450 02bb 3901     		.2byte	0x139
 2451 02bd 77000000 		.4byte	0x77
 2452 02c1 0C       		.byte	0xc
 2453 02c2 0D       		.uleb128 0xd
 2454 02c3 ED070000 		.4byte	.LASF42
 2455 02c7 05       		.byte	0x5
 2456 02c8 3E01     		.2byte	0x13e
 2457 02ca 6B000000 		.4byte	0x6b
 2458 02ce 0E       		.byte	0xe
 2459 02cf 0D       		.uleb128 0xd
 2460 02d0 2E090000 		.4byte	.LASF43
 2461 02d4 05       		.byte	0x5
 2462 02d5 4401     		.2byte	0x144
 2463 02d7 77000000 		.4byte	0x77
 2464 02db 10       		.byte	0x10
 2465 02dc 0D       		.uleb128 0xd
 2466 02dd 10040000 		.4byte	.LASF44
 2467 02e1 05       		.byte	0x5
 2468 02e2 4901     		.2byte	0x149
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 97


 2469 02e4 77000000 		.4byte	0x77
 2470 02e8 12       		.byte	0x12
 2471 02e9 00       		.byte	0
 2472 02ea 04       		.uleb128 0x4
 2473 02eb 1F0A0000 		.4byte	.LASF47
 2474 02ef 05       		.byte	0x5
 2475 02f0 4A01     		.2byte	0x14a
 2476 02f2 38020000 		.4byte	0x238
 2477 02f6 0E       		.uleb128 0xe
 2478 02f7 14       		.byte	0x14
 2479 02f8 05       		.byte	0x5
 2480 02f9 5001     		.2byte	0x150
 2481 02fb 0D030000 		.4byte	0x30d
 2482 02ff 0D       		.uleb128 0xd
 2483 0300 F1080000 		.4byte	.LASF48
 2484 0304 05       		.byte	0x5
 2485 0305 5501     		.2byte	0x155
 2486 0307 EA020000 		.4byte	0x2ea
 2487 030b 00       		.byte	0
 2488 030c 00       		.byte	0
 2489 030d 04       		.uleb128 0x4
 2490 030e 8F010000 		.4byte	.LASF49
 2491 0312 05       		.byte	0x5
 2492 0313 5601     		.2byte	0x156
 2493 0315 F6020000 		.4byte	0x2f6
 2494 0319 0E       		.uleb128 0xe
 2495 031a 0A       		.byte	0xa
 2496 031b 05       		.byte	0x5
 2497 031c 5C01     		.2byte	0x15c
 2498 031e 71030000 		.4byte	0x371
 2499 0322 0F       		.uleb128 0xf
 2500 0323 72617700 		.ascii	"raw\000"
 2501 0327 05       		.byte	0x5
 2502 0328 6101     		.2byte	0x161
 2503 032a 71030000 		.4byte	0x371
 2504 032e 00       		.byte	0
 2505 032f 0D       		.uleb128 0xd
 2506 0330 3A0B0000 		.4byte	.LASF50
 2507 0334 05       		.byte	0x5
 2508 0335 6601     		.2byte	0x166
 2509 0337 71030000 		.4byte	0x371
 2510 033b 02       		.byte	0x2
 2511 033c 0D       		.uleb128 0xd
 2512 033d F7090000 		.4byte	.LASF51
 2513 0341 05       		.byte	0x5
 2514 0342 6C01     		.2byte	0x16c
 2515 0344 16020000 		.4byte	0x216
 2516 0348 04       		.byte	0x4
 2517 0349 0D       		.uleb128 0xd
 2518 034a B4080000 		.4byte	.LASF52
 2519 034e 05       		.byte	0x5
 2520 034f 7101     		.2byte	0x171
 2521 0351 C6000000 		.4byte	0xc6
 2522 0355 06       		.byte	0x6
 2523 0356 0D       		.uleb128 0xd
 2524 0357 920B0000 		.4byte	.LASF53
 2525 035b 05       		.byte	0x5
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 98


 2526 035c 7601     		.2byte	0x176
 2527 035e 81030000 		.4byte	0x381
 2528 0362 08       		.byte	0x8
 2529 0363 0D       		.uleb128 0xd
 2530 0364 A1050000 		.4byte	.LASF54
 2531 0368 05       		.byte	0x5
 2532 0369 7B01     		.2byte	0x17b
 2533 036b 16020000 		.4byte	0x216
 2534 036f 09       		.byte	0x9
 2535 0370 00       		.byte	0
 2536 0371 0B       		.uleb128 0xb
 2537 0372 77000000 		.4byte	0x77
 2538 0376 81030000 		.4byte	0x381
 2539 037a 0C       		.uleb128 0xc
 2540 037b 26020000 		.4byte	0x226
 2541 037f 00       		.byte	0
 2542 0380 00       		.byte	0
 2543 0381 0B       		.uleb128 0xb
 2544 0382 D2000000 		.4byte	0xd2
 2545 0386 91030000 		.4byte	0x391
 2546 038a 0C       		.uleb128 0xc
 2547 038b 26020000 		.4byte	0x226
 2548 038f 00       		.byte	0
 2549 0390 00       		.byte	0
 2550 0391 04       		.uleb128 0x4
 2551 0392 C1030000 		.4byte	.LASF55
 2552 0396 05       		.byte	0x5
 2553 0397 7C01     		.2byte	0x17c
 2554 0399 19030000 		.4byte	0x319
 2555 039d 0E       		.uleb128 0xe
 2556 039e 0A       		.byte	0xa
 2557 039f 05       		.byte	0x5
 2558 03a0 8201     		.2byte	0x182
 2559 03a2 B4030000 		.4byte	0x3b4
 2560 03a6 0D       		.uleb128 0xd
 2561 03a7 F1080000 		.4byte	.LASF48
 2562 03ab 05       		.byte	0x5
 2563 03ac 8701     		.2byte	0x187
 2564 03ae B4030000 		.4byte	0x3b4
 2565 03b2 00       		.byte	0
 2566 03b3 00       		.byte	0
 2567 03b4 0B       		.uleb128 0xb
 2568 03b5 91030000 		.4byte	0x391
 2569 03b9 C4030000 		.4byte	0x3c4
 2570 03bd 0C       		.uleb128 0xc
 2571 03be 26020000 		.4byte	0x226
 2572 03c2 00       		.byte	0
 2573 03c3 00       		.byte	0
 2574 03c4 04       		.uleb128 0x4
 2575 03c5 2A0C0000 		.4byte	.LASF56
 2576 03c9 05       		.byte	0x5
 2577 03ca 8801     		.2byte	0x188
 2578 03cc 9D030000 		.4byte	0x39d
 2579 03d0 0E       		.uleb128 0xe
 2580 03d1 44       		.byte	0x44
 2581 03d2 05       		.byte	0x5
 2582 03d3 8E01     		.2byte	0x18e
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 99


 2583 03d5 D1040000 		.4byte	0x4d1
 2584 03d9 0D       		.uleb128 0xd
 2585 03da CF070000 		.4byte	.LASF57
 2586 03de 05       		.byte	0x5
 2587 03df 9501     		.2byte	0x195
 2588 03e1 77000000 		.4byte	0x77
 2589 03e5 00       		.byte	0
 2590 03e6 0D       		.uleb128 0xd
 2591 03e7 F30B0000 		.4byte	.LASF58
 2592 03eb 05       		.byte	0x5
 2593 03ec 9A01     		.2byte	0x19a
 2594 03ee 77000000 		.4byte	0x77
 2595 03f2 02       		.byte	0x2
 2596 03f3 0D       		.uleb128 0xd
 2597 03f4 8D000000 		.4byte	.LASF59
 2598 03f8 05       		.byte	0x5
 2599 03f9 9F01     		.2byte	0x19f
 2600 03fb 77000000 		.4byte	0x77
 2601 03ff 04       		.byte	0x4
 2602 0400 0D       		.uleb128 0xd
 2603 0401 C1080000 		.4byte	.LASF60
 2604 0405 05       		.byte	0x5
 2605 0406 A501     		.2byte	0x1a5
 2606 0408 77000000 		.4byte	0x77
 2607 040c 06       		.byte	0x6
 2608 040d 0D       		.uleb128 0xd
 2609 040e 7B000000 		.4byte	.LASF61
 2610 0412 05       		.byte	0x5
 2611 0413 AA01     		.2byte	0x1aa
 2612 0415 77000000 		.4byte	0x77
 2613 0419 08       		.byte	0x8
 2614 041a 0D       		.uleb128 0xd
 2615 041b 61050000 		.4byte	.LASF62
 2616 041f 05       		.byte	0x5
 2617 0420 AF01     		.2byte	0x1af
 2618 0422 C1000000 		.4byte	0xc1
 2619 0426 0C       		.byte	0xc
 2620 0427 0D       		.uleb128 0xd
 2621 0428 A9080000 		.4byte	.LASF63
 2622 042c 05       		.byte	0x5
 2623 042d B501     		.2byte	0x1b5
 2624 042f D1040000 		.4byte	0x4d1
 2625 0433 10       		.byte	0x10
 2626 0434 0D       		.uleb128 0xd
 2627 0435 4C090000 		.4byte	.LASF64
 2628 0439 05       		.byte	0x5
 2629 043a BC01     		.2byte	0x1bc
 2630 043c D1040000 		.4byte	0x4d1
 2631 0440 14       		.byte	0x14
 2632 0441 0D       		.uleb128 0xd
 2633 0442 E3070000 		.4byte	.LASF65
 2634 0446 05       		.byte	0x5
 2635 0447 CC01     		.2byte	0x1cc
 2636 0449 16020000 		.4byte	0x216
 2637 044d 18       		.byte	0x18
 2638 044e 0D       		.uleb128 0xd
 2639 044f 8E060000 		.4byte	.LASF66
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 100


 2640 0453 05       		.byte	0x5
 2641 0454 D201     		.2byte	0x1d2
 2642 0456 77000000 		.4byte	0x77
 2643 045a 1A       		.byte	0x1a
 2644 045b 0D       		.uleb128 0xd
 2645 045c B7030000 		.4byte	.LASF67
 2646 0460 05       		.byte	0x5
 2647 0461 D701     		.2byte	0x1d7
 2648 0463 6B000000 		.4byte	0x6b
 2649 0467 1C       		.byte	0x1c
 2650 0468 0D       		.uleb128 0xd
 2651 0469 1D060000 		.4byte	.LASF68
 2652 046d 05       		.byte	0x5
 2653 046e DC01     		.2byte	0x1dc
 2654 0470 0D030000 		.4byte	0x30d
 2655 0474 1E       		.byte	0x1e
 2656 0475 0D       		.uleb128 0xd
 2657 0476 4F020000 		.4byte	.LASF69
 2658 047a 05       		.byte	0x5
 2659 047b E101     		.2byte	0x1e1
 2660 047d C4030000 		.4byte	0x3c4
 2661 0481 32       		.byte	0x32
 2662 0482 0D       		.uleb128 0xd
 2663 0483 44000000 		.4byte	.LASF70
 2664 0487 05       		.byte	0x5
 2665 0488 E601     		.2byte	0x1e6
 2666 048a 6B000000 		.4byte	0x6b
 2667 048e 3C       		.byte	0x3c
 2668 048f 0D       		.uleb128 0xd
 2669 0490 B1020000 		.4byte	.LASF71
 2670 0494 05       		.byte	0x5
 2671 0495 EB01     		.2byte	0x1eb
 2672 0497 6B000000 		.4byte	0x6b
 2673 049b 3D       		.byte	0x3d
 2674 049c 0D       		.uleb128 0xd
 2675 049d BC070000 		.4byte	.LASF72
 2676 04a1 05       		.byte	0x5
 2677 04a2 F001     		.2byte	0x1f0
 2678 04a4 77000000 		.4byte	0x77
 2679 04a8 3E       		.byte	0x3e
 2680 04a9 0D       		.uleb128 0xd
 2681 04aa 62060000 		.4byte	.LASF73
 2682 04ae 05       		.byte	0x5
 2683 04af F501     		.2byte	0x1f5
 2684 04b1 71030000 		.4byte	0x371
 2685 04b5 40       		.byte	0x40
 2686 04b6 0D       		.uleb128 0xd
 2687 04b7 D2000000 		.4byte	.LASF74
 2688 04bb 05       		.byte	0x5
 2689 04bc FA01     		.2byte	0x1fa
 2690 04be 6B000000 		.4byte	0x6b
 2691 04c2 42       		.byte	0x42
 2692 04c3 0D       		.uleb128 0xd
 2693 04c4 610A0000 		.4byte	.LASF75
 2694 04c8 05       		.byte	0x5
 2695 04c9 FF01     		.2byte	0x1ff
 2696 04cb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 101


 2697 04cf 43       		.byte	0x43
 2698 04d0 00       		.byte	0
 2699 04d1 0B       		.uleb128 0xb
 2700 04d2 83000000 		.4byte	0x83
 2701 04d6 E1040000 		.4byte	0x4e1
 2702 04da 0C       		.uleb128 0xc
 2703 04db 26020000 		.4byte	0x226
 2704 04df 00       		.byte	0
 2705 04e0 00       		.byte	0
 2706 04e1 04       		.uleb128 0x4
 2707 04e2 32080000 		.4byte	.LASF76
 2708 04e6 05       		.byte	0x5
 2709 04e7 0002     		.2byte	0x200
 2710 04e9 D0030000 		.4byte	0x3d0
 2711 04ed 0E       		.uleb128 0xe
 2712 04ee 1C       		.byte	0x1c
 2713 04ef 05       		.byte	0x5
 2714 04f0 0602     		.2byte	0x206
 2715 04f2 6C050000 		.4byte	0x56c
 2716 04f6 0D       		.uleb128 0xd
 2717 04f7 DE060000 		.4byte	.LASF77
 2718 04fb 05       		.byte	0x5
 2719 04fc 0B02     		.2byte	0x20b
 2720 04fe 6C050000 		.4byte	0x56c
 2721 0502 00       		.byte	0
 2722 0503 0D       		.uleb128 0xd
 2723 0504 AA050000 		.4byte	.LASF78
 2724 0508 05       		.byte	0x5
 2725 0509 1002     		.2byte	0x210
 2726 050b 6C050000 		.4byte	0x56c
 2727 050f 04       		.byte	0x4
 2728 0510 0D       		.uleb128 0xd
 2729 0511 ED030000 		.4byte	.LASF79
 2730 0515 05       		.byte	0x5
 2731 0516 1502     		.2byte	0x215
 2732 0518 6C050000 		.4byte	0x56c
 2733 051c 08       		.byte	0x8
 2734 051d 0D       		.uleb128 0xd
 2735 051e EB080000 		.4byte	.LASF80
 2736 0522 05       		.byte	0x5
 2737 0523 1A02     		.2byte	0x21a
 2738 0525 6C050000 		.4byte	0x56c
 2739 0529 0C       		.byte	0xc
 2740 052a 0D       		.uleb128 0xd
 2741 052b C20A0000 		.4byte	.LASF81
 2742 052f 05       		.byte	0x5
 2743 0530 1F02     		.2byte	0x21f
 2744 0532 83000000 		.4byte	0x83
 2745 0536 10       		.byte	0x10
 2746 0537 0D       		.uleb128 0xd
 2747 0538 1D070000 		.4byte	.LASF82
 2748 053c 05       		.byte	0x5
 2749 053d 2402     		.2byte	0x224
 2750 053f 83000000 		.4byte	0x83
 2751 0543 14       		.byte	0x14
 2752 0544 0D       		.uleb128 0xd
 2753 0545 37050000 		.4byte	.LASF83
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 102


 2754 0549 05       		.byte	0x5
 2755 054a 2902     		.2byte	0x229
 2756 054c 6B000000 		.4byte	0x6b
 2757 0550 18       		.byte	0x18
 2758 0551 0D       		.uleb128 0xd
 2759 0552 93090000 		.4byte	.LASF84
 2760 0556 05       		.byte	0x5
 2761 0557 2E02     		.2byte	0x22e
 2762 0559 6B000000 		.4byte	0x6b
 2763 055d 19       		.byte	0x19
 2764 055e 0D       		.uleb128 0xd
 2765 055f 09020000 		.4byte	.LASF85
 2766 0563 05       		.byte	0x5
 2767 0564 3302     		.2byte	0x233
 2768 0566 6B000000 		.4byte	0x6b
 2769 056a 1A       		.byte	0x1a
 2770 056b 00       		.byte	0
 2771 056c 10       		.uleb128 0x10
 2772 056d 04       		.byte	0x4
 2773 056e B5000000 		.4byte	0xb5
 2774 0572 04       		.uleb128 0x4
 2775 0573 98020000 		.4byte	.LASF86
 2776 0577 05       		.byte	0x5
 2777 0578 3402     		.2byte	0x234
 2778 057a ED040000 		.4byte	0x4ed
 2779 057e 0E       		.uleb128 0xe
 2780 057f 20       		.byte	0x20
 2781 0580 05       		.byte	0x5
 2782 0581 6702     		.2byte	0x267
 2783 0583 0A060000 		.4byte	0x60a
 2784 0587 0D       		.uleb128 0xd
 2785 0588 6C0B0000 		.4byte	.LASF87
 2786 058c 05       		.byte	0x5
 2787 058d 7002     		.2byte	0x270
 2788 058f 0A060000 		.4byte	0x60a
 2789 0593 00       		.byte	0
 2790 0594 0D       		.uleb128 0xd
 2791 0595 700A0000 		.4byte	.LASF88
 2792 0599 05       		.byte	0x5
 2793 059a 7702     		.2byte	0x277
 2794 059c 11060000 		.4byte	0x611
 2795 05a0 04       		.byte	0x4
 2796 05a1 0D       		.uleb128 0xd
 2797 05a2 D8070000 		.4byte	.LASF89
 2798 05a6 05       		.byte	0x5
 2799 05a7 7D02     		.2byte	0x27d
 2800 05a9 13060000 		.4byte	0x613
 2801 05ad 08       		.byte	0x8
 2802 05ae 0D       		.uleb128 0xd
 2803 05af EE060000 		.4byte	.LASF90
 2804 05b3 05       		.byte	0x5
 2805 05b4 8302     		.2byte	0x283
 2806 05b6 11060000 		.4byte	0x611
 2807 05ba 0C       		.byte	0xc
 2808 05bb 0D       		.uleb128 0xd
 2809 05bc DE090000 		.4byte	.LASF91
 2810 05c0 05       		.byte	0x5
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 103


 2811 05c1 8A02     		.2byte	0x28a
 2812 05c3 19060000 		.4byte	0x619
 2813 05c7 10       		.byte	0x10
 2814 05c8 0D       		.uleb128 0xd
 2815 05c9 540A0000 		.4byte	.LASF92
 2816 05cd 05       		.byte	0x5
 2817 05ce 8F02     		.2byte	0x28f
 2818 05d0 83000000 		.4byte	0x83
 2819 05d4 14       		.byte	0x14
 2820 05d5 0D       		.uleb128 0xd
 2821 05d6 8A040000 		.4byte	.LASF93
 2822 05da 05       		.byte	0x5
 2823 05db 9602     		.2byte	0x296
 2824 05dd 77000000 		.4byte	0x77
 2825 05e1 18       		.byte	0x18
 2826 05e2 0D       		.uleb128 0xd
 2827 05e3 D8020000 		.4byte	.LASF94
 2828 05e7 05       		.byte	0x5
 2829 05e8 9D02     		.2byte	0x29d
 2830 05ea 6B000000 		.4byte	0x6b
 2831 05ee 1A       		.byte	0x1a
 2832 05ef 0D       		.uleb128 0xd
 2833 05f0 BE050000 		.4byte	.LASF95
 2834 05f4 05       		.byte	0x5
 2835 05f5 A702     		.2byte	0x2a7
 2836 05f7 6B000000 		.4byte	0x6b
 2837 05fb 1B       		.byte	0x1b
 2838 05fc 0D       		.uleb128 0xd
 2839 05fd C1020000 		.4byte	.LASF96
 2840 0601 05       		.byte	0x5
 2841 0602 AF02     		.2byte	0x2af
 2842 0604 1F060000 		.4byte	0x61f
 2843 0608 1C       		.byte	0x1c
 2844 0609 00       		.byte	0
 2845 060a 10       		.uleb128 0x10
 2846 060b 04       		.byte	0x4
 2847 060c 10060000 		.4byte	0x610
 2848 0610 11       		.uleb128 0x11
 2849 0611 12       		.uleb128 0x12
 2850 0612 04       		.byte	0x4
 2851 0613 10       		.uleb128 0x10
 2852 0614 04       		.byte	0x4
 2853 0615 91030000 		.4byte	0x391
 2854 0619 10       		.uleb128 0x10
 2855 061a 04       		.byte	0x4
 2856 061b 6B000000 		.4byte	0x6b
 2857 061f 10       		.uleb128 0x10
 2858 0620 04       		.byte	0x4
 2859 0621 3B010000 		.4byte	0x13b
 2860 0625 04       		.uleb128 0x4
 2861 0626 46040000 		.4byte	.LASF97
 2862 062a 05       		.byte	0x5
 2863 062b B002     		.2byte	0x2b0
 2864 062d 7E050000 		.4byte	0x57e
 2865 0631 0E       		.uleb128 0xe
 2866 0632 20       		.byte	0x20
 2867 0633 05       		.byte	0x5
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 104


 2868 0634 B602     		.2byte	0x2b6
 2869 0636 48060000 		.4byte	0x648
 2870 063a 0D       		.uleb128 0xd
 2871 063b 470C0000 		.4byte	.LASF98
 2872 063f 05       		.byte	0x5
 2873 0640 BB02     		.2byte	0x2bb
 2874 0642 48060000 		.4byte	0x648
 2875 0646 00       		.byte	0
 2876 0647 00       		.byte	0
 2877 0648 0B       		.uleb128 0xb
 2878 0649 25060000 		.4byte	0x625
 2879 064d 58060000 		.4byte	0x658
 2880 0651 0C       		.uleb128 0xc
 2881 0652 26020000 		.4byte	0x226
 2882 0656 00       		.byte	0
 2883 0657 00       		.byte	0
 2884 0658 04       		.uleb128 0x4
 2885 0659 26060000 		.4byte	.LASF99
 2886 065d 05       		.byte	0x5
 2887 065e BC02     		.2byte	0x2bc
 2888 0660 31060000 		.4byte	0x631
 2889 0664 02       		.uleb128 0x2
 2890 0665 08       		.byte	0x8
 2891 0666 04       		.byte	0x4
 2892 0667 90070000 		.4byte	.LASF100
 2893 066b 06       		.uleb128 0x6
 2894 066c 08       		.byte	0x8
 2895 066d 06       		.byte	0x6
 2896 066e CF       		.byte	0xcf
 2897 066f 8C060000 		.4byte	0x68c
 2898 0673 07       		.uleb128 0x7
 2899 0674 15090000 		.4byte	.LASF101
 2900 0678 06       		.byte	0x6
 2901 0679 D4       		.byte	0xd4
 2902 067a 83000000 		.4byte	0x83
 2903 067e 00       		.byte	0
 2904 067f 07       		.uleb128 0x7
 2905 0680 FE060000 		.4byte	.LASF102
 2906 0684 06       		.byte	0x6
 2907 0685 D9       		.byte	0xd9
 2908 0686 83000000 		.4byte	0x83
 2909 068a 04       		.byte	0x4
 2910 068b 00       		.byte	0
 2911 068c 08       		.uleb128 0x8
 2912 068d FF090000 		.4byte	.LASF103
 2913 0691 06       		.byte	0x6
 2914 0692 DA       		.byte	0xda
 2915 0693 6B060000 		.4byte	0x66b
 2916 0697 13       		.uleb128 0x13
 2917 0698 EF010000 		.4byte	.LASF140
 2918 069c 01       		.byte	0x1
 2919 069d 8B0A     		.2byte	0xa8b
 2920 069f 03       		.byte	0x3
 2921 06a0 14       		.uleb128 0x14
 2922 06a1 EC000000 		.4byte	.LASF188
 2923 06a5 01       		.byte	0x1
 2924 06a6 D601     		.2byte	0x1d6
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 105


 2925 06a8 00000000 		.4byte	.LFB1
 2926 06ac 10000000 		.4byte	.LFE1-.LFB1
 2927 06b0 01       		.uleb128 0x1
 2928 06b1 9C       		.byte	0x9c
 2929 06b2 15       		.uleb128 0x15
 2930 06b3 99060000 		.4byte	.LASF115
 2931 06b7 01       		.byte	0x1
 2932 06b8 3B07     		.2byte	0x73b
 2933 06ba A4000000 		.4byte	0xa4
 2934 06be 00000000 		.4byte	.LFB16
 2935 06c2 98000000 		.4byte	.LFE16-.LFB16
 2936 06c6 01       		.uleb128 0x1
 2937 06c7 9C       		.byte	0x9c
 2938 06c8 7D070000 		.4byte	0x77d
 2939 06cc 16       		.uleb128 0x16
 2940 06cd FC0B0000 		.4byte	.LASF104
 2941 06d1 01       		.byte	0x1
 2942 06d2 3B07     		.2byte	0x73b
 2943 06d4 83000000 		.4byte	0x83
 2944 06d8 00000000 		.4byte	.LLST0
 2945 06dc 16       		.uleb128 0x16
 2946 06dd E6030000 		.4byte	.LASF105
 2947 06e1 01       		.byte	0x1
 2948 06e2 3B07     		.2byte	0x73b
 2949 06e4 83000000 		.4byte	0x83
 2950 06e8 42000000 		.4byte	.LLST1
 2951 06ec 17       		.uleb128 0x17
 2952 06ed 0D060000 		.4byte	.LASF106
 2953 06f1 01       		.byte	0x1
 2954 06f2 3D07     		.2byte	0x73d
 2955 06f4 A4000000 		.4byte	0xa4
 2956 06f8 63000000 		.4byte	.LLST2
 2957 06fc 17       		.uleb128 0x17
 2958 06fd 33010000 		.4byte	.LASF107
 2959 0701 01       		.byte	0x1
 2960 0702 3E07     		.2byte	0x73e
 2961 0704 83000000 		.4byte	0x83
 2962 0708 8F000000 		.4byte	.LLST3
 2963 070c 17       		.uleb128 0x17
 2964 070d 6A010000 		.4byte	.LASF108
 2965 0711 01       		.byte	0x1
 2966 0712 3F07     		.2byte	0x73f
 2967 0714 83000000 		.4byte	0x83
 2968 0718 B8000000 		.4byte	.LLST4
 2969 071c 17       		.uleb128 0x17
 2970 071d D2060000 		.4byte	.LASF109
 2971 0721 01       		.byte	0x1
 2972 0722 4007     		.2byte	0x740
 2973 0724 83000000 		.4byte	0x83
 2974 0728 D7000000 		.4byte	.LLST5
 2975 072c 17       		.uleb128 0x17
 2976 072d EA050000 		.4byte	.LASF110
 2977 0731 01       		.byte	0x1
 2978 0732 4107     		.2byte	0x741
 2979 0734 83000000 		.4byte	0x83
 2980 0738 00010000 		.4byte	.LLST6
 2981 073c 17       		.uleb128 0x17
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 106


 2982 073d 22070000 		.4byte	.LASF111
 2983 0741 01       		.byte	0x1
 2984 0742 4207     		.2byte	0x742
 2985 0744 83000000 		.4byte	0x83
 2986 0748 29010000 		.4byte	.LLST7
 2987 074c 17       		.uleb128 0x17
 2988 074d 06010000 		.4byte	.LASF112
 2989 0751 01       		.byte	0x1
 2990 0752 4407     		.2byte	0x744
 2991 0754 7D070000 		.4byte	0x77d
 2992 0758 75010000 		.4byte	.LLST8
 2993 075c 17       		.uleb128 0x17
 2994 075d D9030000 		.4byte	.LASF113
 2995 0761 01       		.byte	0x1
 2996 0762 4507     		.2byte	0x745
 2997 0764 88070000 		.4byte	0x788
 2998 0768 88010000 		.4byte	.LLST9
 2999 076c 17       		.uleb128 0x17
 3000 076d 49050000 		.4byte	.LASF114
 3001 0771 01       		.byte	0x1
 3002 0772 4607     		.2byte	0x746
 3003 0774 13060000 		.4byte	0x613
 3004 0778 9B010000 		.4byte	.LLST10
 3005 077c 00       		.byte	0
 3006 077d 10       		.uleb128 0x10
 3007 077e 04       		.byte	0x4
 3008 077f 83070000 		.4byte	0x783
 3009 0783 18       		.uleb128 0x18
 3010 0784 25060000 		.4byte	0x625
 3011 0788 10       		.uleb128 0x10
 3012 0789 04       		.byte	0x4
 3013 078a 2D020000 		.4byte	0x22d
 3014 078e 15       		.uleb128 0x15
 3015 078f C1090000 		.4byte	.LASF116
 3016 0793 01       		.byte	0x1
 3017 0794 8007     		.2byte	0x780
 3018 0796 83000000 		.4byte	0x83
 3019 079a 00000000 		.4byte	.LFB17
 3020 079e 9C000000 		.4byte	.LFE17-.LFB17
 3021 07a2 01       		.uleb128 0x1
 3022 07a3 9C       		.byte	0x9c
 3023 07a4 49080000 		.4byte	0x849
 3024 07a8 16       		.uleb128 0x16
 3025 07a9 06010000 		.4byte	.LASF112
 3026 07ad 01       		.byte	0x1
 3027 07ae 8007     		.2byte	0x780
 3028 07b0 7D070000 		.4byte	0x77d
 3029 07b4 AE010000 		.4byte	.LLST11
 3030 07b8 17       		.uleb128 0x17
 3031 07b9 87000000 		.4byte	.LASF117
 3032 07bd 01       		.byte	0x1
 3033 07be 8207     		.2byte	0x782
 3034 07c0 83000000 		.4byte	0x83
 3035 07c4 F3010000 		.4byte	.LLST12
 3036 07c8 17       		.uleb128 0x17
 3037 07c9 2F050000 		.4byte	.LASF118
 3038 07cd 01       		.byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 107


 3039 07ce 8307     		.2byte	0x783
 3040 07d0 83000000 		.4byte	0x83
 3041 07d4 11020000 		.4byte	.LLST13
 3042 07d8 17       		.uleb128 0x17
 3043 07d9 B9080000 		.4byte	.LASF119
 3044 07dd 01       		.byte	0x1
 3045 07de 8407     		.2byte	0x784
 3046 07e0 83000000 		.4byte	0x83
 3047 07e4 30020000 		.4byte	.LLST14
 3048 07e8 17       		.uleb128 0x17
 3049 07e9 61050000 		.4byte	.LASF62
 3050 07ed 01       		.byte	0x1
 3051 07ee 8507     		.2byte	0x785
 3052 07f0 83000000 		.4byte	0x83
 3053 07f4 7C020000 		.4byte	.LLST15
 3054 07f8 17       		.uleb128 0x17
 3055 07f9 D2060000 		.4byte	.LASF109
 3056 07fd 01       		.byte	0x1
 3057 07fe 8607     		.2byte	0x786
 3058 0800 83000000 		.4byte	0x83
 3059 0804 B3020000 		.4byte	.LLST16
 3060 0808 17       		.uleb128 0x17
 3061 0809 DA040000 		.4byte	.LASF120
 3062 080d 01       		.byte	0x1
 3063 080e 8707     		.2byte	0x787
 3064 0810 83000000 		.4byte	0x83
 3065 0814 09030000 		.4byte	.LLST17
 3066 0818 17       		.uleb128 0x17
 3067 0819 D9030000 		.4byte	.LASF113
 3068 081d 01       		.byte	0x1
 3069 081e 8907     		.2byte	0x789
 3070 0820 88070000 		.4byte	0x788
 3071 0824 5E030000 		.4byte	.LLST18
 3072 0828 17       		.uleb128 0x17
 3073 0829 6A010000 		.4byte	.LASF108
 3074 082d 01       		.byte	0x1
 3075 082e 8B07     		.2byte	0x78b
 3076 0830 83000000 		.4byte	0x83
 3077 0834 71030000 		.4byte	.LLST19
 3078 0838 17       		.uleb128 0x17
 3079 0839 49050000 		.4byte	.LASF114
 3080 083d 01       		.byte	0x1
 3081 083e 8C07     		.2byte	0x78c
 3082 0840 13060000 		.4byte	0x613
 3083 0844 8F030000 		.4byte	.LLST20
 3084 0848 00       		.byte	0
 3085 0849 19       		.uleb128 0x19
 3086 084a 73010000 		.4byte	.LASF125
 3087 084e 01       		.byte	0x1
 3088 084f E207     		.2byte	0x7e2
 3089 0851 00000000 		.4byte	.LFB18
 3090 0855 CC000000 		.4byte	.LFE18-.LFB18
 3091 0859 01       		.uleb128 0x1
 3092 085a 9C       		.byte	0x9c
 3093 085b 20090000 		.4byte	0x920
 3094 085f 16       		.uleb128 0x16
 3095 0860 06010000 		.4byte	.LASF112
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 108


 3096 0864 01       		.byte	0x1
 3097 0865 E207     		.2byte	0x7e2
 3098 0867 7D070000 		.4byte	0x77d
 3099 086b A2030000 		.4byte	.LLST21
 3100 086f 16       		.uleb128 0x16
 3101 0870 E6030000 		.4byte	.LASF105
 3102 0874 01       		.byte	0x1
 3103 0875 E207     		.2byte	0x7e2
 3104 0877 83000000 		.4byte	0x83
 3105 087b CE030000 		.4byte	.LLST22
 3106 087f 17       		.uleb128 0x17
 3107 0880 6A010000 		.4byte	.LASF108
 3108 0884 01       		.byte	0x1
 3109 0885 E407     		.2byte	0x7e4
 3110 0887 83000000 		.4byte	0x83
 3111 088b FA030000 		.4byte	.LLST23
 3112 088f 17       		.uleb128 0x17
 3113 0890 D2060000 		.4byte	.LASF109
 3114 0894 01       		.byte	0x1
 3115 0895 E507     		.2byte	0x7e5
 3116 0897 83000000 		.4byte	0x83
 3117 089b 30040000 		.4byte	.LLST24
 3118 089f 17       		.uleb128 0x17
 3119 08a0 2F050000 		.4byte	.LASF118
 3120 08a4 01       		.byte	0x1
 3121 08a5 E607     		.2byte	0x7e6
 3122 08a7 83000000 		.4byte	0x83
 3123 08ab 72040000 		.4byte	.LLST25
 3124 08af 17       		.uleb128 0x17
 3125 08b0 B9080000 		.4byte	.LASF119
 3126 08b4 01       		.byte	0x1
 3127 08b5 E707     		.2byte	0x7e7
 3128 08b7 83000000 		.4byte	0x83
 3129 08bb 90040000 		.4byte	.LLST26
 3130 08bf 17       		.uleb128 0x17
 3131 08c0 6A040000 		.4byte	.LASF121
 3132 08c4 01       		.byte	0x1
 3133 08c5 E807     		.2byte	0x7e8
 3134 08c7 83000000 		.4byte	0x83
 3135 08cb CF040000 		.4byte	.LLST27
 3136 08cf 17       		.uleb128 0x17
 3137 08d0 38070000 		.4byte	.LASF122
 3138 08d4 01       		.byte	0x1
 3139 08d5 E907     		.2byte	0x7e9
 3140 08d7 83000000 		.4byte	0x83
 3141 08db ED040000 		.4byte	.LLST28
 3142 08df 17       		.uleb128 0x17
 3143 08e0 22040000 		.4byte	.LASF123
 3144 08e4 01       		.byte	0x1
 3145 08e5 EA07     		.2byte	0x7ea
 3146 08e7 83000000 		.4byte	0x83
 3147 08eb 0C050000 		.4byte	.LLST29
 3148 08ef 17       		.uleb128 0x17
 3149 08f0 69000000 		.4byte	.LASF124
 3150 08f4 01       		.byte	0x1
 3151 08f5 EB07     		.2byte	0x7eb
 3152 08f7 83000000 		.4byte	0x83
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 109


 3153 08fb 2A050000 		.4byte	.LLST30
 3154 08ff 17       		.uleb128 0x17
 3155 0900 D9030000 		.4byte	.LASF113
 3156 0904 01       		.byte	0x1
 3157 0905 ED07     		.2byte	0x7ed
 3158 0907 88070000 		.4byte	0x788
 3159 090b 74050000 		.4byte	.LLST31
 3160 090f 17       		.uleb128 0x17
 3161 0910 49050000 		.4byte	.LASF114
 3162 0914 01       		.byte	0x1
 3163 0915 EE07     		.2byte	0x7ee
 3164 0917 13060000 		.4byte	0x613
 3165 091b 92050000 		.4byte	.LLST32
 3166 091f 00       		.byte	0
 3167 0920 1A       		.uleb128 0x1a
 3168 0921 60080000 		.4byte	.LASF126
 3169 0925 01       		.byte	0x1
 3170 0926 8D01     		.2byte	0x18d
 3171 0928 00000000 		.4byte	.LFB0
 3172 092c 1C000000 		.4byte	.LFE0-.LFB0
 3173 0930 01       		.uleb128 0x1
 3174 0931 9C       		.byte	0x9c
 3175 0932 68090000 		.4byte	0x968
 3176 0936 16       		.uleb128 0x16
 3177 0937 ED070000 		.4byte	.LASF42
 3178 093b 01       		.byte	0x1
 3179 093c 8D01     		.2byte	0x18d
 3180 093e 83000000 		.4byte	0x83
 3181 0942 B0050000 		.4byte	.LLST33
 3182 0946 16       		.uleb128 0x16
 3183 0947 DC0B0000 		.4byte	.LASF127
 3184 094b 01       		.byte	0x1
 3185 094c 8D01     		.2byte	0x18d
 3186 094e 83000000 		.4byte	0x83
 3187 0952 D1050000 		.4byte	.LLST34
 3188 0956 1B       		.uleb128 0x1b
 3189 0957 14000000 		.4byte	.LVL116
 3190 095b D0110000 		.4byte	0x11d0
 3191 095f 1C       		.uleb128 0x1c
 3192 0960 01       		.uleb128 0x1
 3193 0961 50       		.byte	0x50
 3194 0962 03       		.uleb128 0x3
 3195 0963 F3       		.byte	0xf3
 3196 0964 01       		.uleb128 0x1
 3197 0965 51       		.byte	0x51
 3198 0966 00       		.byte	0
 3199 0967 00       		.byte	0
 3200 0968 1D       		.uleb128 0x1d
 3201 0969 C6050000 		.4byte	.LASF128
 3202 096d 01       		.byte	0x1
 3203 096e 0C02     		.2byte	0x20c
 3204 0970 00000000 		.4byte	.LFB2
 3205 0974 54000000 		.4byte	.LFE2-.LFB2
 3206 0978 01       		.uleb128 0x1
 3207 0979 9C       		.byte	0x9c
 3208 097a B2090000 		.4byte	0x9b2
 3209 097e 1E       		.uleb128 0x1e
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 110


 3210 097f 14000000 		.4byte	.LVL117
 3211 0983 DB110000 		.4byte	0x11db
 3212 0987 1E       		.uleb128 0x1e
 3213 0988 22000000 		.4byte	.LVL118
 3214 098c A0060000 		.4byte	0x6a0
 3215 0990 1B       		.uleb128 0x1b
 3216 0991 30000000 		.4byte	.LVL119
 3217 0995 E6110000 		.4byte	0x11e6
 3218 0999 1C       		.uleb128 0x1c
 3219 099a 01       		.uleb128 0x1
 3220 099b 50       		.byte	0x50
 3221 099c 05       		.uleb128 0x5
 3222 099d 0C       		.byte	0xc
 3223 099e 10000140 		.4byte	0x40010010
 3224 09a2 1C       		.uleb128 0x1c
 3225 09a3 01       		.uleb128 0x1
 3226 09a4 51       		.byte	0x51
 3227 09a5 03       		.uleb128 0x3
 3228 09a6 0A       		.byte	0xa
 3229 09a7 000F     		.2byte	0xf00
 3230 09a9 1C       		.uleb128 0x1c
 3231 09aa 01       		.uleb128 0x1
 3232 09ab 52       		.byte	0x52
 3233 09ac 03       		.uleb128 0x3
 3234 09ad 0A       		.byte	0xa
 3235 09ae 0006     		.2byte	0x600
 3236 09b0 00       		.byte	0
 3237 09b1 00       		.byte	0
 3238 09b2 1D       		.uleb128 0x1d
 3239 09b3 71040000 		.4byte	.LASF129
 3240 09b7 01       		.byte	0x1
 3241 09b8 1E03     		.2byte	0x31e
 3242 09ba 00000000 		.4byte	.LFB4
 3243 09be 50000000 		.4byte	.LFE4-.LFB4
 3244 09c2 01       		.uleb128 0x1
 3245 09c3 9C       		.byte	0x9c
 3246 09c4 2B0A0000 		.4byte	0xa2b
 3247 09c8 16       		.uleb128 0x16
 3248 09c9 B4010000 		.4byte	.LASF130
 3249 09cd 01       		.byte	0x1
 3250 09ce 1E03     		.2byte	0x31e
 3251 09d0 2B0A0000 		.4byte	0xa2b
 3252 09d4 F2050000 		.4byte	.LLST35
 3253 09d8 17       		.uleb128 0x17
 3254 09d9 DD000000 		.4byte	.LASF131
 3255 09dd 01       		.byte	0x1
 3256 09de 2003     		.2byte	0x320
 3257 09e0 6B000000 		.4byte	0x6b
 3258 09e4 2D060000 		.4byte	.LLST36
 3259 09e8 17       		.uleb128 0x17
 3260 09e9 EA0B0000 		.4byte	.LASF132
 3261 09ed 01       		.byte	0x1
 3262 09ee 2103     		.2byte	0x321
 3263 09f0 83000000 		.4byte	0x83
 3264 09f4 40060000 		.4byte	.LLST37
 3265 09f8 17       		.uleb128 0x17
 3266 09f9 790B0000 		.4byte	.LASF133
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 111


 3267 09fd 01       		.byte	0x1
 3268 09fe 5A03     		.2byte	0x35a
 3269 0a00 83000000 		.4byte	0x83
 3270 0a04 53060000 		.4byte	.LLST38
 3271 0a08 17       		.uleb128 0x17
 3272 0a09 D10B0000 		.4byte	.LASF134
 3273 0a0d 01       		.byte	0x1
 3274 0a0e 5B03     		.2byte	0x35b
 3275 0a10 360A0000 		.4byte	0xa36
 3276 0a14 71060000 		.4byte	.LLST39
 3277 0a18 1E       		.uleb128 0x1e
 3278 0a19 12000000 		.4byte	.LVL124
 3279 0a1d F1110000 		.4byte	0x11f1
 3280 0a21 1E       		.uleb128 0x1e
 3281 0a22 3A000000 		.4byte	.LVL132
 3282 0a26 FC110000 		.4byte	0x11fc
 3283 0a2a 00       		.byte	0
 3284 0a2b 10       		.uleb128 0x10
 3285 0a2c 04       		.byte	0x4
 3286 0a2d 310A0000 		.4byte	0xa31
 3287 0a31 18       		.uleb128 0x18
 3288 0a32 2D020000 		.4byte	0x22d
 3289 0a36 10       		.uleb128 0x10
 3290 0a37 04       		.byte	0x4
 3291 0a38 3C0A0000 		.4byte	0xa3c
 3292 0a3c 18       		.uleb128 0x18
 3293 0a3d 6B000000 		.4byte	0x6b
 3294 0a41 1D       		.uleb128 0x1d
 3295 0a42 9C070000 		.4byte	.LASF135
 3296 0a46 01       		.byte	0x1
 3297 0a47 EA03     		.2byte	0x3ea
 3298 0a49 00000000 		.4byte	.LFB5
 3299 0a4d 20000000 		.4byte	.LFE5-.LFB5
 3300 0a51 01       		.uleb128 0x1
 3301 0a52 9C       		.byte	0x9c
 3302 0a53 A10A0000 		.4byte	0xaa1
 3303 0a57 17       		.uleb128 0x17
 3304 0a58 DC0B0000 		.4byte	.LASF127
 3305 0a5c 01       		.byte	0x1
 3306 0a5d EC03     		.2byte	0x3ec
 3307 0a5f 83000000 		.4byte	0x83
 3308 0a63 9F060000 		.4byte	.LLST40
 3309 0a67 17       		.uleb128 0x17
 3310 0a68 0F020000 		.4byte	.LASF136
 3311 0a6c 01       		.byte	0x1
 3312 0a6d ED03     		.2byte	0x3ed
 3313 0a6f 83000000 		.4byte	0x83
 3314 0a73 B2060000 		.4byte	.LLST41
 3315 0a77 17       		.uleb128 0x17
 3316 0a78 790B0000 		.4byte	.LASF133
 3317 0a7c 01       		.byte	0x1
 3318 0a7d EE03     		.2byte	0x3ee
 3319 0a7f 83000000 		.4byte	0x83
 3320 0a83 B2060000 		.4byte	.LLST41
 3321 0a87 17       		.uleb128 0x17
 3322 0a88 B4010000 		.4byte	.LASF130
 3323 0a8c 01       		.byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 112


 3324 0a8d F003     		.2byte	0x3f0
 3325 0a8f 2B0A0000 		.4byte	0xa2b
 3326 0a93 C5060000 		.4byte	.LLST43
 3327 0a97 1E       		.uleb128 0x1e
 3328 0a98 16000000 		.4byte	.LVL136
 3329 0a9c 20090000 		.4byte	0x920
 3330 0aa0 00       		.byte	0
 3331 0aa1 1D       		.uleb128 0x1d
 3332 0aa2 0B000000 		.4byte	.LASF137
 3333 0aa6 01       		.byte	0x1
 3334 0aa7 5104     		.2byte	0x451
 3335 0aa9 00000000 		.4byte	.LFB6
 3336 0aad 14000000 		.4byte	.LFE6-.LFB6
 3337 0ab1 01       		.uleb128 0x1
 3338 0ab2 9C       		.byte	0x9c
 3339 0ab3 C60A0000 		.4byte	0xac6
 3340 0ab7 1F       		.uleb128 0x1f
 3341 0ab8 B4010000 		.4byte	.LASF130
 3342 0abc 01       		.byte	0x1
 3343 0abd 5104     		.2byte	0x451
 3344 0abf 2B0A0000 		.4byte	0xa2b
 3345 0ac3 01       		.uleb128 0x1
 3346 0ac4 50       		.byte	0x50
 3347 0ac5 00       		.byte	0
 3348 0ac6 20       		.uleb128 0x20
 3349 0ac7 FC020000 		.4byte	.LASF189
 3350 0acb 01       		.byte	0x1
 3351 0acc 130A     		.2byte	0xa13
 3352 0ace 03       		.byte	0x3
 3353 0acf F80A0000 		.4byte	0xaf8
 3354 0ad3 21       		.uleb128 0x21
 3355 0ad4 AD090000 		.4byte	.LASF138
 3356 0ad8 01       		.byte	0x1
 3357 0ad9 4A0A     		.2byte	0xa4a
 3358 0adb 83000000 		.4byte	0x83
 3359 0adf 21       		.uleb128 0x21
 3360 0ae0 790B0000 		.4byte	.LASF133
 3361 0ae4 01       		.byte	0x1
 3362 0ae5 4B0A     		.2byte	0xa4b
 3363 0ae7 83000000 		.4byte	0x83
 3364 0aeb 21       		.uleb128 0x21
 3365 0aec 19020000 		.4byte	.LASF139
 3366 0af0 01       		.byte	0x1
 3367 0af1 4C0A     		.2byte	0xa4c
 3368 0af3 83000000 		.4byte	0x83
 3369 0af7 00       		.byte	0
 3370 0af8 13       		.uleb128 0x13
 3371 0af9 85080000 		.4byte	.LASF141
 3372 0afd 01       		.byte	0x1
 3373 0afe C509     		.2byte	0x9c5
 3374 0b00 03       		.byte	0x3
 3375 0b01 1D       		.uleb128 0x1d
 3376 0b02 520B0000 		.4byte	.LASF142
 3377 0b06 01       		.byte	0x1
 3378 0b07 2F05     		.2byte	0x52f
 3379 0b09 00000000 		.4byte	.LFB9
 3380 0b0d AC000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 113


 3381 0b11 01       		.uleb128 0x1
 3382 0b12 9C       		.byte	0x9c
 3383 0b13 E00B0000 		.4byte	0xbe0
 3384 0b17 17       		.uleb128 0x17
 3385 0b18 DD000000 		.4byte	.LASF131
 3386 0b1c 01       		.byte	0x1
 3387 0b1d 3205     		.2byte	0x532
 3388 0b1f 6B000000 		.4byte	0x6b
 3389 0b23 D8060000 		.4byte	.LLST44
 3390 0b27 22       		.uleb128 0x22
 3391 0b28 F80A0000 		.4byte	0xaf8
 3392 0b2c 14000000 		.4byte	.LBB10
 3393 0b30 1C000000 		.4byte	.LBE10-.LBB10
 3394 0b34 01       		.byte	0x1
 3395 0b35 5E05     		.2byte	0x55e
 3396 0b37 450B0000 		.4byte	0xb45
 3397 0b3b 1E       		.uleb128 0x1e
 3398 0b3c 1C000000 		.4byte	.LVL140
 3399 0b40 07120000 		.4byte	0x1207
 3400 0b44 00       		.byte	0
 3401 0b45 22       		.uleb128 0x22
 3402 0b46 C60A0000 		.4byte	0xac6
 3403 0b4a 30000000 		.4byte	.LBB12
 3404 0b4e 3C000000 		.4byte	.LBE12-.LBB12
 3405 0b52 01       		.byte	0x1
 3406 0b53 6105     		.2byte	0x561
 3407 0b55 A20B0000 		.4byte	0xba2
 3408 0b59 23       		.uleb128 0x23
 3409 0b5a 30000000 		.4byte	.LBB13
 3410 0b5e 3C000000 		.4byte	.LBE13-.LBB13
 3411 0b62 24       		.uleb128 0x24
 3412 0b63 D30A0000 		.4byte	0xad3
 3413 0b67 EB060000 		.4byte	.LLST45
 3414 0b6b 24       		.uleb128 0x24
 3415 0b6c DF0A0000 		.4byte	0xadf
 3416 0b70 0A070000 		.4byte	.LLST46
 3417 0b74 24       		.uleb128 0x24
 3418 0b75 EB0A0000 		.4byte	0xaeb
 3419 0b79 5E070000 		.4byte	.LLST47
 3420 0b7d 25       		.uleb128 0x25
 3421 0b7e 3A000000 		.4byte	.LVL142
 3422 0b82 12120000 		.4byte	0x1212
 3423 0b86 910B0000 		.4byte	0xb91
 3424 0b8a 1C       		.uleb128 0x1c
 3425 0b8b 01       		.uleb128 0x1
 3426 0b8c 50       		.byte	0x50
 3427 0b8d 02       		.uleb128 0x2
 3428 0b8e 08       		.byte	0x8
 3429 0b8f 27       		.byte	0x27
 3430 0b90 00       		.byte	0
 3431 0b91 1B       		.uleb128 0x1b
 3432 0b92 6C000000 		.4byte	.LVL152
 3433 0b96 1D120000 		.4byte	0x121d
 3434 0b9a 1C       		.uleb128 0x1c
 3435 0b9b 01       		.uleb128 0x1
 3436 0b9c 50       		.byte	0x50
 3437 0b9d 01       		.uleb128 0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 114


 3438 0b9e 3F       		.byte	0x3f
 3439 0b9f 00       		.byte	0
 3440 0ba0 00       		.byte	0
 3441 0ba1 00       		.byte	0
 3442 0ba2 26       		.uleb128 0x26
 3443 0ba3 97060000 		.4byte	0x697
 3444 0ba7 72000000 		.4byte	.LBB14
 3445 0bab 06000000 		.4byte	.LBE14-.LBB14
 3446 0baf 01       		.byte	0x1
 3447 0bb0 6905     		.2byte	0x569
 3448 0bb2 1E       		.uleb128 0x1e
 3449 0bb3 06000000 		.4byte	.LVL138
 3450 0bb7 F1110000 		.4byte	0x11f1
 3451 0bbb 25       		.uleb128 0x25
 3452 0bbc 72000000 		.4byte	.LVL153
 3453 0bc0 12120000 		.4byte	0x1212
 3454 0bc4 CF0B0000 		.4byte	0xbcf
 3455 0bc8 1C       		.uleb128 0x1c
 3456 0bc9 01       		.uleb128 0x1
 3457 0bca 50       		.byte	0x50
 3458 0bcb 02       		.uleb128 0x2
 3459 0bcc 08       		.byte	0x8
 3460 0bcd 6F       		.byte	0x6f
 3461 0bce 00       		.byte	0
 3462 0bcf 1B       		.uleb128 0x1b
 3463 0bd0 7E000000 		.4byte	.LVL154
 3464 0bd4 FC110000 		.4byte	0x11fc
 3465 0bd8 1C       		.uleb128 0x1c
 3466 0bd9 01       		.uleb128 0x1
 3467 0bda 50       		.byte	0x50
 3468 0bdb 02       		.uleb128 0x2
 3469 0bdc 74       		.byte	0x74
 3470 0bdd 00       		.sleb128 0
 3471 0bde 00       		.byte	0
 3472 0bdf 00       		.byte	0
 3473 0be0 1D       		.uleb128 0x1d
 3474 0be1 38090000 		.4byte	.LASF143
 3475 0be5 01       		.byte	0x1
 3476 0be6 A005     		.2byte	0x5a0
 3477 0be8 00000000 		.4byte	.LFB10
 3478 0bec 1C000000 		.4byte	.LFE10-.LFB10
 3479 0bf0 01       		.uleb128 0x1
 3480 0bf1 9C       		.byte	0x9c
 3481 0bf2 000C0000 		.4byte	0xc00
 3482 0bf6 1E       		.uleb128 0x1e
 3483 0bf7 10000000 		.4byte	.LVL156
 3484 0bfb 010B0000 		.4byte	0xb01
 3485 0bff 00       		.byte	0
 3486 0c00 1D       		.uleb128 0x1d
 3487 0c01 57090000 		.4byte	.LASF144
 3488 0c05 01       		.byte	0x1
 3489 0c06 C506     		.2byte	0x6c5
 3490 0c08 00000000 		.4byte	.LFB14
 3491 0c0c 34000000 		.4byte	.LFE14-.LFB14
 3492 0c10 01       		.uleb128 0x1
 3493 0c11 9C       		.byte	0x9c
 3494 0c12 790C0000 		.4byte	0xc79
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 115


 3495 0c16 16       		.uleb128 0x16
 3496 0c17 00000000 		.4byte	.LASF145
 3497 0c1b 01       		.byte	0x1
 3498 0c1c C506     		.2byte	0x6c5
 3499 0c1e 790C0000 		.4byte	0xc79
 3500 0c22 7E070000 		.4byte	.LLST48
 3501 0c26 17       		.uleb128 0x17
 3502 0c27 A6030000 		.4byte	.LASF146
 3503 0c2b 01       		.byte	0x1
 3504 0c2c C706     		.2byte	0x6c7
 3505 0c2e 83000000 		.4byte	0x83
 3506 0c32 AA070000 		.4byte	.LLST49
 3507 0c36 17       		.uleb128 0x17
 3508 0c37 DD000000 		.4byte	.LASF131
 3509 0c3b 01       		.byte	0x1
 3510 0c3c C806     		.2byte	0x6c8
 3511 0c3e 6B000000 		.4byte	0x6b
 3512 0c42 D3070000 		.4byte	.LLST50
 3513 0c46 17       		.uleb128 0x17
 3514 0c47 5D010000 		.4byte	.LASF147
 3515 0c4b 01       		.byte	0x1
 3516 0c4c C906     		.2byte	0x6c9
 3517 0c4e 83000000 		.4byte	0x83
 3518 0c52 E6070000 		.4byte	.LLST51
 3519 0c56 17       		.uleb128 0x17
 3520 0c57 41020000 		.4byte	.LASF148
 3521 0c5b 01       		.byte	0x1
 3522 0c5c CA06     		.2byte	0x6ca
 3523 0c5e 83000000 		.4byte	0x83
 3524 0c62 F9070000 		.4byte	.LLST52
 3525 0c66 1E       		.uleb128 0x1e
 3526 0c67 0C000000 		.4byte	.LVL160
 3527 0c6b F1110000 		.4byte	0x11f1
 3528 0c6f 1E       		.uleb128 0x1e
 3529 0c70 32000000 		.4byte	.LVL166
 3530 0c74 FC110000 		.4byte	0x11fc
 3531 0c78 00       		.byte	0
 3532 0c79 10       		.uleb128 0x10
 3533 0c7a 04       		.byte	0x4
 3534 0c7b 7F0C0000 		.4byte	0xc7f
 3535 0c7f 18       		.uleb128 0x18
 3536 0c80 72050000 		.4byte	0x572
 3537 0c84 1D       		.uleb128 0x1d
 3538 0c85 940A0000 		.4byte	.LASF149
 3539 0c89 01       		.byte	0x1
 3540 0c8a E305     		.2byte	0x5e3
 3541 0c8c 00000000 		.4byte	.LFB11
 3542 0c90 94000000 		.4byte	.LFE11-.LFB11
 3543 0c94 01       		.uleb128 0x1
 3544 0c95 9C       		.byte	0x9c
 3545 0c96 E30C0000 		.4byte	0xce3
 3546 0c9a 17       		.uleb128 0x17
 3547 0c9b B4010000 		.4byte	.LASF130
 3548 0c9f 01       		.byte	0x1
 3549 0ca0 E505     		.2byte	0x5e5
 3550 0ca2 2B0A0000 		.4byte	0xa2b
 3551 0ca6 0C080000 		.4byte	.LLST53
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 116


 3552 0caa 1E       		.uleb128 0x1e
 3553 0cab 20000000 		.4byte	.LVL170
 3554 0caf DB110000 		.4byte	0x11db
 3555 0cb3 25       		.uleb128 0x25
 3556 0cb4 52000000 		.4byte	.LVL171
 3557 0cb8 B2090000 		.4byte	0x9b2
 3558 0cbc C70C0000 		.4byte	0xcc7
 3559 0cc0 1C       		.uleb128 0x1c
 3560 0cc1 01       		.uleb128 0x1
 3561 0cc2 50       		.byte	0x50
 3562 0cc3 02       		.uleb128 0x2
 3563 0cc4 77       		.byte	0x77
 3564 0cc5 00       		.sleb128 0
 3565 0cc6 00       		.byte	0
 3566 0cc7 1E       		.uleb128 0x1e
 3567 0cc8 6C000000 		.4byte	.LVL172
 3568 0ccc 000C0000 		.4byte	0xc00
 3569 0cd0 1E       		.uleb128 0x1e
 3570 0cd1 72000000 		.4byte	.LVL173
 3571 0cd5 28120000 		.4byte	0x1228
 3572 0cd9 1E       		.uleb128 0x1e
 3573 0cda 76000000 		.4byte	.LVL174
 3574 0cde E00B0000 		.4byte	0xbe0
 3575 0ce2 00       		.byte	0
 3576 0ce3 1D       		.uleb128 0x1d
 3577 0ce4 CA010000 		.4byte	.LASF150
 3578 0ce8 01       		.byte	0x1
 3579 0ce9 3606     		.2byte	0x636
 3580 0ceb 00000000 		.4byte	.LFB12
 3581 0cef 24000000 		.4byte	.LFE12-.LFB12
 3582 0cf3 01       		.uleb128 0x1
 3583 0cf4 9C       		.byte	0x9c
 3584 0cf5 230D0000 		.4byte	0xd23
 3585 0cf9 16       		.uleb128 0x16
 3586 0cfa FC0B0000 		.4byte	.LASF104
 3587 0cfe 01       		.byte	0x1
 3588 0cff 3606     		.2byte	0x636
 3589 0d01 83000000 		.4byte	0x83
 3590 0d05 1F080000 		.4byte	.LLST54
 3591 0d09 16       		.uleb128 0x16
 3592 0d0a AB010000 		.4byte	.LASF151
 3593 0d0e 01       		.byte	0x1
 3594 0d0f 3606     		.2byte	0x636
 3595 0d11 83000000 		.4byte	0x83
 3596 0d15 40080000 		.4byte	.LLST55
 3597 0d19 1E       		.uleb128 0x1e
 3598 0d1a 18000000 		.4byte	.LVL179
 3599 0d1e 000C0000 		.4byte	0xc00
 3600 0d22 00       		.byte	0
 3601 0d23 1D       		.uleb128 0x1d
 3602 0d24 46080000 		.4byte	.LASF152
 3603 0d28 01       		.byte	0x1
 3604 0d29 F906     		.2byte	0x6f9
 3605 0d2b 00000000 		.4byte	.LFB15
 3606 0d2f 64000000 		.4byte	.LFE15-.LFB15
 3607 0d33 01       		.uleb128 0x1
 3608 0d34 9C       		.byte	0x9c
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 117


 3609 0d35 AC0D0000 		.4byte	0xdac
 3610 0d39 16       		.uleb128 0x16
 3611 0d3a 00000000 		.4byte	.LASF145
 3612 0d3e 01       		.byte	0x1
 3613 0d3f F906     		.2byte	0x6f9
 3614 0d41 790C0000 		.4byte	0xc79
 3615 0d45 61080000 		.4byte	.LLST56
 3616 0d49 17       		.uleb128 0x17
 3617 0d4a DD000000 		.4byte	.LASF131
 3618 0d4e 01       		.byte	0x1
 3619 0d4f FB06     		.2byte	0x6fb
 3620 0d51 6B000000 		.4byte	0x6b
 3621 0d55 8D080000 		.4byte	.LLST57
 3622 0d59 17       		.uleb128 0x17
 3623 0d5a 41020000 		.4byte	.LASF148
 3624 0d5e 01       		.byte	0x1
 3625 0d5f FC06     		.2byte	0x6fc
 3626 0d61 83000000 		.4byte	0x83
 3627 0d65 A0080000 		.4byte	.LLST58
 3628 0d69 17       		.uleb128 0x17
 3629 0d6a 5D010000 		.4byte	.LASF147
 3630 0d6e 01       		.byte	0x1
 3631 0d6f FD06     		.2byte	0x6fd
 3632 0d71 83000000 		.4byte	0x83
 3633 0d75 B3080000 		.4byte	.LLST59
 3634 0d79 17       		.uleb128 0x17
 3635 0d7a 050C0000 		.4byte	.LASF153
 3636 0d7e 01       		.byte	0x1
 3637 0d7f FE06     		.2byte	0x6fe
 3638 0d81 83000000 		.4byte	0x83
 3639 0d85 C6080000 		.4byte	.LLST60
 3640 0d89 17       		.uleb128 0x17
 3641 0d8a 21080000 		.4byte	.LASF154
 3642 0d8e 01       		.byte	0x1
 3643 0d8f FF06     		.2byte	0x6ff
 3644 0d91 83000000 		.4byte	0x83
 3645 0d95 D9080000 		.4byte	.LLST61
 3646 0d99 1E       		.uleb128 0x1e
 3647 0d9a 0C000000 		.4byte	.LVL183
 3648 0d9e F1110000 		.4byte	0x11f1
 3649 0da2 1E       		.uleb128 0x1e
 3650 0da3 5C000000 		.4byte	.LVL195
 3651 0da7 FC110000 		.4byte	0x11fc
 3652 0dab 00       		.byte	0
 3653 0dac 1D       		.uleb128 0x1d
 3654 0dad FA070000 		.4byte	.LASF155
 3655 0db1 01       		.byte	0x1
 3656 0db2 E102     		.2byte	0x2e1
 3657 0db4 00000000 		.4byte	.LFB3
 3658 0db8 24000000 		.4byte	.LFE3-.LFB3
 3659 0dbc 01       		.uleb128 0x1
 3660 0dbd 9C       		.byte	0x9c
 3661 0dbe CC0D0000 		.4byte	0xdcc
 3662 0dc2 1E       		.uleb128 0x1e
 3663 0dc3 12000000 		.4byte	.LVL198
 3664 0dc7 230D0000 		.4byte	0xd23
 3665 0dcb 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 118


 3666 0dcc 1D       		.uleb128 0x1d
 3667 0dcd 29020000 		.4byte	.LASF156
 3668 0dd1 01       		.byte	0x1
 3669 0dd2 9B04     		.2byte	0x49b
 3670 0dd4 00000000 		.4byte	.LFB7
 3671 0dd8 54000000 		.4byte	.LFE7-.LFB7
 3672 0ddc 01       		.uleb128 0x1
 3673 0ddd 9C       		.byte	0x9c
 3674 0dde 3C0E0000 		.4byte	0xe3c
 3675 0de2 16       		.uleb128 0x16
 3676 0de3 FC0B0000 		.4byte	.LASF104
 3677 0de7 01       		.byte	0x1
 3678 0de8 9B04     		.2byte	0x49b
 3679 0dea 83000000 		.4byte	0x83
 3680 0dee F7080000 		.4byte	.LLST62
 3681 0df2 17       		.uleb128 0x17
 3682 0df3 B4010000 		.4byte	.LASF130
 3683 0df7 01       		.byte	0x1
 3684 0df8 9D04     		.2byte	0x49d
 3685 0dfa 2B0A0000 		.4byte	0xa2b
 3686 0dfe 18090000 		.4byte	.LLST63
 3687 0e02 25       		.uleb128 0x25
 3688 0e03 16000000 		.4byte	.LVL202
 3689 0e07 33120000 		.4byte	0x1233
 3690 0e0b 150E0000 		.4byte	0xe15
 3691 0e0f 1C       		.uleb128 0x1c
 3692 0e10 01       		.uleb128 0x1
 3693 0e11 50       		.byte	0x50
 3694 0e12 01       		.uleb128 0x1
 3695 0e13 31       		.byte	0x31
 3696 0e14 00       		.byte	0
 3697 0e15 1E       		.uleb128 0x1e
 3698 0e16 1A000000 		.4byte	.LVL203
 3699 0e1a AC0D0000 		.4byte	0xdac
 3700 0e1e 25       		.uleb128 0x25
 3701 0e1f 3C000000 		.4byte	.LVL204
 3702 0e23 A10A0000 		.4byte	0xaa1
 3703 0e27 320E0000 		.4byte	0xe32
 3704 0e2b 1C       		.uleb128 0x1c
 3705 0e2c 01       		.uleb128 0x1
 3706 0e2d 50       		.byte	0x50
 3707 0e2e 02       		.uleb128 0x2
 3708 0e2f 75       		.byte	0x75
 3709 0e30 00       		.sleb128 0
 3710 0e31 00       		.byte	0
 3711 0e32 1E       		.uleb128 0x1e
 3712 0e33 40000000 		.4byte	.LVL205
 3713 0e37 410A0000 		.4byte	0xa41
 3714 0e3b 00       		.byte	0
 3715 0e3c 1D       		.uleb128 0x1d
 3716 0e3d E1020000 		.4byte	.LASF157
 3717 0e41 01       		.byte	0x1
 3718 0e42 F104     		.2byte	0x4f1
 3719 0e44 00000000 		.4byte	.LFB8
 3720 0e48 6C000000 		.4byte	.LFE8-.LFB8
 3721 0e4c 01       		.uleb128 0x1
 3722 0e4d 9C       		.byte	0x9c
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 119


 3723 0e4e BE0E0000 		.4byte	0xebe
 3724 0e52 16       		.uleb128 0x16
 3725 0e53 FC0B0000 		.4byte	.LASF104
 3726 0e57 01       		.byte	0x1
 3727 0e58 F104     		.2byte	0x4f1
 3728 0e5a 83000000 		.4byte	0x83
 3729 0e5e 3F090000 		.4byte	.LLST64
 3730 0e62 16       		.uleb128 0x16
 3731 0e63 AB010000 		.4byte	.LASF151
 3732 0e67 01       		.byte	0x1
 3733 0e68 F104     		.2byte	0x4f1
 3734 0e6a 83000000 		.4byte	0x83
 3735 0e6e 60090000 		.4byte	.LLST65
 3736 0e72 17       		.uleb128 0x17
 3737 0e73 B4010000 		.4byte	.LASF130
 3738 0e77 01       		.byte	0x1
 3739 0e78 F304     		.2byte	0x4f3
 3740 0e7a 2B0A0000 		.4byte	0xa2b
 3741 0e7e 81090000 		.4byte	.LLST66
 3742 0e82 25       		.uleb128 0x25
 3743 0e83 26000000 		.4byte	.LVL211
 3744 0e87 CC0D0000 		.4byte	0xdcc
 3745 0e8b 970E0000 		.4byte	0xe97
 3746 0e8f 1C       		.uleb128 0x1c
 3747 0e90 01       		.uleb128 0x1
 3748 0e91 50       		.byte	0x50
 3749 0e92 03       		.uleb128 0x3
 3750 0e93 F3       		.byte	0xf3
 3751 0e94 01       		.uleb128 0x1
 3752 0e95 50       		.byte	0x50
 3753 0e96 00       		.byte	0
 3754 0e97 25       		.uleb128 0x25
 3755 0e98 2C000000 		.4byte	.LVL212
 3756 0e9c B2090000 		.4byte	0x9b2
 3757 0ea0 AB0E0000 		.4byte	0xeab
 3758 0ea4 1C       		.uleb128 0x1c
 3759 0ea5 01       		.uleb128 0x1
 3760 0ea6 50       		.byte	0x50
 3761 0ea7 02       		.uleb128 0x2
 3762 0ea8 75       		.byte	0x75
 3763 0ea9 00       		.sleb128 0
 3764 0eaa 00       		.byte	0
 3765 0eab 1E       		.uleb128 0x1e
 3766 0eac 44000000 		.4byte	.LVL213
 3767 0eb0 000C0000 		.4byte	0xc00
 3768 0eb4 1E       		.uleb128 0x1e
 3769 0eb5 50000000 		.4byte	.LVL214
 3770 0eb9 28120000 		.4byte	0x1228
 3771 0ebd 00       		.byte	0
 3772 0ebe 19       		.uleb128 0x19
 3773 0ebf F5050000 		.4byte	.LASF158
 3774 0ec3 01       		.byte	0x1
 3775 0ec4 7E08     		.2byte	0x87e
 3776 0ec6 00000000 		.4byte	.LFB19
 3777 0eca 58010000 		.4byte	.LFE19-.LFB19
 3778 0ece 01       		.uleb128 0x1
 3779 0ecf 9C       		.byte	0x9c
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 120


 3780 0ed0 EE0F0000 		.4byte	0xfee
 3781 0ed4 16       		.uleb128 0x16
 3782 0ed5 FC0B0000 		.4byte	.LASF104
 3783 0ed9 01       		.byte	0x1
 3784 0eda 7E08     		.2byte	0x87e
 3785 0edc 83000000 		.4byte	0x83
 3786 0ee0 94090000 		.4byte	.LLST67
 3787 0ee4 16       		.uleb128 0x16
 3788 0ee5 E6030000 		.4byte	.LASF105
 3789 0ee9 01       		.byte	0x1
 3790 0eea 7E08     		.2byte	0x87e
 3791 0eec 83000000 		.4byte	0x83
 3792 0ef0 B3090000 		.4byte	.LLST68
 3793 0ef4 17       		.uleb128 0x17
 3794 0ef5 6A010000 		.4byte	.LASF108
 3795 0ef9 01       		.byte	0x1
 3796 0efa 8008     		.2byte	0x880
 3797 0efc 83000000 		.4byte	0x83
 3798 0f00 D4090000 		.4byte	.LLST69
 3799 0f04 17       		.uleb128 0x17
 3800 0f05 D2060000 		.4byte	.LASF109
 3801 0f09 01       		.byte	0x1
 3802 0f0a 8108     		.2byte	0x881
 3803 0f0c 83000000 		.4byte	0x83
 3804 0f10 0B0A0000 		.4byte	.LLST70
 3805 0f14 17       		.uleb128 0x17
 3806 0f15 D0020000 		.4byte	.LASF159
 3807 0f19 01       		.byte	0x1
 3808 0f1a 8208     		.2byte	0x882
 3809 0f1c 83000000 		.4byte	0x83
 3810 0f20 F20A0000 		.4byte	.LLST71
 3811 0f24 17       		.uleb128 0x17
 3812 0f25 CA080000 		.4byte	.LASF160
 3813 0f29 01       		.byte	0x1
 3814 0f2a 8308     		.2byte	0x883
 3815 0f2c 83000000 		.4byte	0x83
 3816 0f30 120B0000 		.4byte	.LLST72
 3817 0f34 17       		.uleb128 0x17
 3818 0f35 19020000 		.4byte	.LASF139
 3819 0f39 01       		.byte	0x1
 3820 0f3a 8408     		.2byte	0x884
 3821 0f3c 83000000 		.4byte	0x83
 3822 0f40 300B0000 		.4byte	.LLST73
 3823 0f44 17       		.uleb128 0x17
 3824 0f45 D10B0000 		.4byte	.LASF134
 3825 0f49 01       		.byte	0x1
 3826 0f4a 8608     		.2byte	0x886
 3827 0f4c 19060000 		.4byte	0x619
 3828 0f50 860B0000 		.4byte	.LLST74
 3829 0f54 17       		.uleb128 0x17
 3830 0f55 2D070000 		.4byte	.LASF161
 3831 0f59 01       		.byte	0x1
 3832 0f5a 8708     		.2byte	0x887
 3833 0f5c 19060000 		.4byte	0x619
 3834 0f60 A60B0000 		.4byte	.LLST75
 3835 0f64 27       		.uleb128 0x27
 3836 0f65 2F050000 		.4byte	.LASF118
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 121


 3837 0f69 01       		.byte	0x1
 3838 0f6a 8908     		.2byte	0x889
 3839 0f6c 16020000 		.4byte	0x216
 3840 0f70 02       		.uleb128 0x2
 3841 0f71 91       		.byte	0x91
 3842 0f72 64       		.sleb128 -28
 3843 0f73 17       		.uleb128 0x17
 3844 0f74 49050000 		.4byte	.LASF114
 3845 0f78 01       		.byte	0x1
 3846 0f79 9008     		.2byte	0x890
 3847 0f7b 13060000 		.4byte	0x613
 3848 0f7f 030C0000 		.4byte	.LLST76
 3849 0f83 17       		.uleb128 0x17
 3850 0f84 06010000 		.4byte	.LASF112
 3851 0f88 01       		.byte	0x1
 3852 0f89 9108     		.2byte	0x891
 3853 0f8b 7D070000 		.4byte	0x77d
 3854 0f8f 160C0000 		.4byte	.LLST77
 3855 0f93 17       		.uleb128 0x17
 3856 0f94 D9030000 		.4byte	.LASF113
 3857 0f98 01       		.byte	0x1
 3858 0f99 9208     		.2byte	0x892
 3859 0f9b 88070000 		.4byte	0x788
 3860 0f9f 290C0000 		.4byte	.LLST78
 3861 0fa3 25       		.uleb128 0x25
 3862 0fa4 7A000000 		.4byte	.LVL238
 3863 0fa8 3C0E0000 		.4byte	0xe3c
 3864 0fac BF0F0000 		.4byte	0xfbf
 3865 0fb0 1C       		.uleb128 0x1c
 3866 0fb1 01       		.uleb128 0x1
 3867 0fb2 50       		.byte	0x50
 3868 0fb3 03       		.uleb128 0x3
 3869 0fb4 91       		.byte	0x91
 3870 0fb5 5C       		.sleb128 -36
 3871 0fb6 06       		.byte	0x6
 3872 0fb7 1C       		.uleb128 0x1c
 3873 0fb8 01       		.uleb128 0x1
 3874 0fb9 51       		.byte	0x51
 3875 0fba 03       		.uleb128 0x3
 3876 0fbb 7D       		.byte	0x7d
 3877 0fbc 00       		.sleb128 0
 3878 0fbd 06       		.byte	0x6
 3879 0fbe 00       		.byte	0
 3880 0fbf 1E       		.uleb128 0x1e
 3881 0fc0 7E000000 		.4byte	.LVL239
 3882 0fc4 E00B0000 		.4byte	0xbe0
 3883 0fc8 25       		.uleb128 0x25
 3884 0fc9 02010000 		.4byte	.LVL255
 3885 0fcd 3C0E0000 		.4byte	0xe3c
 3886 0fd1 E40F0000 		.4byte	0xfe4
 3887 0fd5 1C       		.uleb128 0x1c
 3888 0fd6 01       		.uleb128 0x1
 3889 0fd7 50       		.byte	0x50
 3890 0fd8 03       		.uleb128 0x3
 3891 0fd9 91       		.byte	0x91
 3892 0fda 5C       		.sleb128 -36
 3893 0fdb 06       		.byte	0x6
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 122


 3894 0fdc 1C       		.uleb128 0x1c
 3895 0fdd 01       		.uleb128 0x1
 3896 0fde 51       		.byte	0x51
 3897 0fdf 03       		.uleb128 0x3
 3898 0fe0 7D       		.byte	0x7d
 3899 0fe1 00       		.sleb128 0
 3900 0fe2 06       		.byte	0x6
 3901 0fe3 00       		.byte	0
 3902 0fe4 1E       		.uleb128 0x1e
 3903 0fe5 06010000 		.4byte	.LVL256
 3904 0fe9 E00B0000 		.4byte	0xbe0
 3905 0fed 00       		.byte	0
 3906 0fee 1D       		.uleb128 0x1d
 3907 0fef 96040000 		.4byte	.LASF162
 3908 0ff3 01       		.byte	0x1
 3909 0ff4 7C06     		.2byte	0x67c
 3910 0ff6 00000000 		.4byte	.LFB13
 3911 0ffa 24000000 		.4byte	.LFE13-.LFB13
 3912 0ffe 01       		.uleb128 0x1
 3913 0fff 9C       		.byte	0x9c
 3914 1000 2E100000 		.4byte	0x102e
 3915 1004 16       		.uleb128 0x16
 3916 1005 FC0B0000 		.4byte	.LASF104
 3917 1009 01       		.byte	0x1
 3918 100a 7C06     		.2byte	0x67c
 3919 100c 83000000 		.4byte	0x83
 3920 1010 470C0000 		.4byte	.LLST79
 3921 1014 16       		.uleb128 0x16
 3922 1015 AB010000 		.4byte	.LASF151
 3923 1019 01       		.byte	0x1
 3924 101a 7C06     		.2byte	0x67c
 3925 101c 83000000 		.4byte	0x83
 3926 1020 680C0000 		.4byte	.LLST80
 3927 1024 1E       		.uleb128 0x1e
 3928 1025 18000000 		.4byte	.LVL273
 3929 1029 230D0000 		.4byte	0xd23
 3930 102d 00       		.byte	0
 3931 102e 28       		.uleb128 0x28
 3932 102f F9080000 		.4byte	.LASF190
 3933 1033 01       		.byte	0x1
 3934 1034 7009     		.2byte	0x970
 3935 1036 A4000000 		.4byte	0xa4
 3936 103a 00000000 		.4byte	.LFB20
 3937 103e 74000000 		.4byte	.LFE20-.LFB20
 3938 1042 01       		.uleb128 0x1
 3939 1043 9C       		.byte	0x9c
 3940 1044 24110000 		.4byte	0x1124
 3941 1048 16       		.uleb128 0x16
 3942 1049 FC0B0000 		.4byte	.LASF104
 3943 104d 01       		.byte	0x1
 3944 104e 7009     		.2byte	0x970
 3945 1050 83000000 		.4byte	0x83
 3946 1054 890C0000 		.4byte	.LLST81
 3947 1058 16       		.uleb128 0x16
 3948 1059 E6030000 		.4byte	.LASF105
 3949 105d 01       		.byte	0x1
 3950 105e 7009     		.2byte	0x970
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 123


 3951 1060 83000000 		.4byte	0x83
 3952 1064 CB0C0000 		.4byte	.LLST82
 3953 1068 17       		.uleb128 0x17
 3954 1069 0D060000 		.4byte	.LASF106
 3955 106d 01       		.byte	0x1
 3956 106e 7209     		.2byte	0x972
 3957 1070 A4000000 		.4byte	0xa4
 3958 1074 0D0D0000 		.4byte	.LLST83
 3959 1078 17       		.uleb128 0x17
 3960 1079 19020000 		.4byte	.LASF139
 3961 107d 01       		.byte	0x1
 3962 107e 7309     		.2byte	0x973
 3963 1080 83000000 		.4byte	0x83
 3964 1084 430D0000 		.4byte	.LLST84
 3965 1088 17       		.uleb128 0x17
 3966 1089 DF0A0000 		.4byte	.LASF163
 3967 108d 01       		.byte	0x1
 3968 108e 7609     		.2byte	0x976
 3969 1090 83000000 		.4byte	0x83
 3970 1094 710D0000 		.4byte	.LLST85
 3971 1098 17       		.uleb128 0x17
 3972 1099 06010000 		.4byte	.LASF112
 3973 109d 01       		.byte	0x1
 3974 109e 7909     		.2byte	0x979
 3975 10a0 7D070000 		.4byte	0x77d
 3976 10a4 840D0000 		.4byte	.LLST86
 3977 10a8 25       		.uleb128 0x25
 3978 10a9 22000000 		.4byte	.LVL278
 3979 10ad BE0E0000 		.4byte	0xebe
 3980 10b1 C2100000 		.4byte	0x10c2
 3981 10b5 1C       		.uleb128 0x1c
 3982 10b6 01       		.uleb128 0x1
 3983 10b7 50       		.byte	0x50
 3984 10b8 02       		.uleb128 0x2
 3985 10b9 74       		.byte	0x74
 3986 10ba 00       		.sleb128 0
 3987 10bb 1C       		.uleb128 0x1c
 3988 10bc 01       		.uleb128 0x1
 3989 10bd 51       		.byte	0x51
 3990 10be 02       		.uleb128 0x2
 3991 10bf 75       		.byte	0x75
 3992 10c0 00       		.sleb128 0
 3993 10c1 00       		.byte	0
 3994 10c2 25       		.uleb128 0x25
 3995 10c3 28000000 		.4byte	.LVL279
 3996 10c7 8E070000 		.4byte	0x78e
 3997 10cb D6100000 		.4byte	0x10d6
 3998 10cf 1C       		.uleb128 0x1c
 3999 10d0 01       		.uleb128 0x1
 4000 10d1 50       		.byte	0x50
 4001 10d2 02       		.uleb128 0x2
 4002 10d3 76       		.byte	0x76
 4003 10d4 00       		.sleb128 0
 4004 10d5 00       		.byte	0
 4005 10d6 25       		.uleb128 0x25
 4006 10d7 34000000 		.4byte	.LVL281
 4007 10db 49080000 		.4byte	0x849
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 124


 4008 10df F0100000 		.4byte	0x10f0
 4009 10e3 1C       		.uleb128 0x1c
 4010 10e4 01       		.uleb128 0x1
 4011 10e5 50       		.byte	0x50
 4012 10e6 02       		.uleb128 0x2
 4013 10e7 76       		.byte	0x76
 4014 10e8 00       		.sleb128 0
 4015 10e9 1C       		.uleb128 0x1c
 4016 10ea 01       		.uleb128 0x1
 4017 10eb 51       		.byte	0x51
 4018 10ec 02       		.uleb128 0x2
 4019 10ed 75       		.byte	0x75
 4020 10ee 00       		.sleb128 0
 4021 10ef 00       		.byte	0
 4022 10f0 25       		.uleb128 0x25
 4023 10f1 3A000000 		.4byte	.LVL282
 4024 10f5 CC0D0000 		.4byte	0xdcc
 4025 10f9 04110000 		.4byte	0x1104
 4026 10fd 1C       		.uleb128 0x1c
 4027 10fe 01       		.uleb128 0x1
 4028 10ff 50       		.byte	0x50
 4029 1100 02       		.uleb128 0x2
 4030 1101 74       		.byte	0x74
 4031 1102 00       		.sleb128 0
 4032 1103 00       		.byte	0
 4033 1104 1E       		.uleb128 0x1e
 4034 1105 3E000000 		.4byte	.LVL283
 4035 1109 840C0000 		.4byte	0xc84
 4036 110d 1B       		.uleb128 0x1b
 4037 110e 5C000000 		.4byte	.LVL286
 4038 1112 B2060000 		.4byte	0x6b2
 4039 1116 1C       		.uleb128 0x1c
 4040 1117 01       		.uleb128 0x1
 4041 1118 50       		.byte	0x50
 4042 1119 02       		.uleb128 0x2
 4043 111a 74       		.byte	0x74
 4044 111b 00       		.sleb128 0
 4045 111c 1C       		.uleb128 0x1c
 4046 111d 01       		.uleb128 0x1
 4047 111e 51       		.byte	0x51
 4048 111f 02       		.uleb128 0x2
 4049 1120 75       		.byte	0x75
 4050 1121 00       		.sleb128 0
 4051 1122 00       		.byte	0
 4052 1123 00       		.byte	0
 4053 1124 29       		.uleb128 0x29
 4054 1125 2B040000 		.4byte	.LASF164
 4055 1129 01       		.byte	0x1
 4056 112a 77       		.byte	0x77
 4057 112b 83000000 		.4byte	0x83
 4058 112f 05       		.uleb128 0x5
 4059 1130 03       		.byte	0x3
 4060 1131 04000000 		.4byte	CapSense_counterResolution
 4061 1135 29       		.uleb128 0x29
 4062 1136 15010000 		.4byte	.LASF165
 4063 113a 01       		.byte	0x1
 4064 113b 7B       		.byte	0x7b
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 125


 4065 113c 6B000000 		.4byte	0x6b
 4066 1140 05       		.uleb128 0x5
 4067 1141 03       		.byte	0x3
 4068 1142 00000000 		.4byte	CapSense_eleCsdDisconnectFlag
 4069 1146 2A       		.uleb128 0x2a
 4070 1147 53060000 		.4byte	.LASF166
 4071 114b 05       		.byte	0x5
 4072 114c 5004     		.2byte	0x450
 4073 114e E1040000 		.4byte	0x4e1
 4074 1152 2A       		.uleb128 0x2a
 4075 1153 1D090000 		.4byte	.LASF167
 4076 1157 05       		.byte	0x5
 4077 1158 5104     		.2byte	0x451
 4078 115a 5E110000 		.4byte	0x115e
 4079 115e 18       		.uleb128 0x18
 4080 115f 58060000 		.4byte	0x658
 4081 1163 2B       		.uleb128 0x2b
 4082 1164 2F000000 		.4byte	.LASF168
 4083 1168 06       		.byte	0x6
 4084 1169 B1       		.byte	0xb1
 4085 116a B0000000 		.4byte	0xb0
 4086 116e 2B       		.uleb128 0x2b
 4087 116f 83020000 		.4byte	.LASF169
 4088 1173 06       		.byte	0x6
 4089 1174 B2       		.byte	0xb2
 4090 1175 B0000000 		.4byte	0xb0
 4091 1179 2B       		.uleb128 0x2b
 4092 117a 010B0000 		.4byte	.LASF170
 4093 117e 06       		.byte	0x6
 4094 117f B5       		.byte	0xb5
 4095 1180 13060000 		.4byte	0x613
 4096 1184 2B       		.uleb128 0x2b
 4097 1185 230B0000 		.4byte	.LASF171
 4098 1189 06       		.byte	0x6
 4099 118a BC       		.byte	0xbc
 4100 118b 3C0A0000 		.4byte	0xa3c
 4101 118f 2B       		.uleb128 0x2b
 4102 1190 08070000 		.4byte	.LASF172
 4103 1194 06       		.byte	0x6
 4104 1195 CA       		.byte	0xca
 4105 1196 790C0000 		.4byte	0xc79
 4106 119a 0B       		.uleb128 0xb
 4107 119b AA110000 		.4byte	0x11aa
 4108 119f AA110000 		.4byte	0x11aa
 4109 11a3 0C       		.uleb128 0xc
 4110 11a4 26020000 		.4byte	0x226
 4111 11a8 01       		.byte	0x1
 4112 11a9 00       		.byte	0
 4113 11aa 18       		.uleb128 0x18
 4114 11ab 8C060000 		.4byte	0x68c
 4115 11af 2B       		.uleb128 0x2b
 4116 11b0 130C0000 		.4byte	.LASF173
 4117 11b4 06       		.byte	0x6
 4118 11b5 F5       		.byte	0xf5
 4119 11b6 BA110000 		.4byte	0x11ba
 4120 11ba 18       		.uleb128 0x18
 4121 11bb 9A110000 		.4byte	0x119a
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 126


 4122 11bf 2C       		.uleb128 0x2c
 4123 11c0 72060000 		.4byte	.LASF174
 4124 11c4 01       		.byte	0x1
 4125 11c5 76       		.byte	0x76
 4126 11c6 83000000 		.4byte	0x83
 4127 11ca 05       		.uleb128 0x5
 4128 11cb 03       		.byte	0x3
 4129 11cc 00000000 		.4byte	CapSense_configCsd
 4130 11d0 2D       		.uleb128 0x2d
 4131 11d1 83050000 		.4byte	.LASF175
 4132 11d5 83050000 		.4byte	.LASF175
 4133 11d9 06       		.byte	0x6
 4134 11da 80       		.byte	0x80
 4135 11db 2D       		.uleb128 0x2d
 4136 11dc F1040000 		.4byte	.LASF176
 4137 11e0 F1040000 		.4byte	.LASF176
 4138 11e4 06       		.byte	0x6
 4139 11e5 84       		.byte	0x84
 4140 11e6 2D       		.uleb128 0x2d
 4141 11e7 3C060000 		.4byte	.LASF177
 4142 11eb 3C060000 		.4byte	.LASF177
 4143 11ef 06       		.byte	0x6
 4144 11f0 A9       		.byte	0xa9
 4145 11f1 2D       		.uleb128 0x2d
 4146 11f2 EA0A0000 		.4byte	.LASF178
 4147 11f6 EA0A0000 		.4byte	.LASF178
 4148 11fa 07       		.byte	0x7
 4149 11fb F8       		.byte	0xf8
 4150 11fc 2D       		.uleb128 0x2d
 4151 11fd 0B050000 		.4byte	.LASF179
 4152 1201 0B050000 		.4byte	.LASF179
 4153 1205 07       		.byte	0x7
 4154 1206 F9       		.byte	0xf9
 4155 1207 2D       		.uleb128 0x2d
 4156 1208 3C010000 		.4byte	.LASF180
 4157 120c 3C010000 		.4byte	.LASF180
 4158 1210 06       		.byte	0x6
 4159 1211 7F       		.byte	0x7f
 4160 1212 2D       		.uleb128 0x2d
 4161 1213 21050000 		.4byte	.LASF181
 4162 1217 21050000 		.4byte	.LASF181
 4163 121b 07       		.byte	0x7
 4164 121c EF       		.byte	0xef
 4165 121d 2D       		.uleb128 0x2d
 4166 121e CC0A0000 		.4byte	.LASF182
 4167 1222 CC0A0000 		.4byte	.LASF182
 4168 1226 07       		.byte	0x7
 4169 1227 D6       		.byte	0xd6
 4170 1228 2D       		.uleb128 0x2d
 4171 1229 57020000 		.4byte	.LASF183
 4172 122d 57020000 		.4byte	.LASF183
 4173 1231 08       		.byte	0x8
 4174 1232 18       		.byte	0x18
 4175 1233 2D       		.uleb128 0x2d
 4176 1234 F3030000 		.4byte	.LASF184
 4177 1238 F3030000 		.4byte	.LASF184
 4178 123c 06       		.byte	0x6
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 127


 4179 123d 85       		.byte	0x85
 4180 123e 00       		.byte	0
 4181              		.section	.debug_abbrev,"",%progbits
 4182              	.Ldebug_abbrev0:
 4183 0000 01       		.uleb128 0x1
 4184 0001 11       		.uleb128 0x11
 4185 0002 01       		.byte	0x1
 4186 0003 25       		.uleb128 0x25
 4187 0004 0E       		.uleb128 0xe
 4188 0005 13       		.uleb128 0x13
 4189 0006 0B       		.uleb128 0xb
 4190 0007 03       		.uleb128 0x3
 4191 0008 0E       		.uleb128 0xe
 4192 0009 1B       		.uleb128 0x1b
 4193 000a 0E       		.uleb128 0xe
 4194 000b 55       		.uleb128 0x55
 4195 000c 17       		.uleb128 0x17
 4196 000d 11       		.uleb128 0x11
 4197 000e 01       		.uleb128 0x1
 4198 000f 10       		.uleb128 0x10
 4199 0010 17       		.uleb128 0x17
 4200 0011 00       		.byte	0
 4201 0012 00       		.byte	0
 4202 0013 02       		.uleb128 0x2
 4203 0014 24       		.uleb128 0x24
 4204 0015 00       		.byte	0
 4205 0016 0B       		.uleb128 0xb
 4206 0017 0B       		.uleb128 0xb
 4207 0018 3E       		.uleb128 0x3e
 4208 0019 0B       		.uleb128 0xb
 4209 001a 03       		.uleb128 0x3
 4210 001b 0E       		.uleb128 0xe
 4211 001c 00       		.byte	0
 4212 001d 00       		.byte	0
 4213 001e 03       		.uleb128 0x3
 4214 001f 24       		.uleb128 0x24
 4215 0020 00       		.byte	0
 4216 0021 0B       		.uleb128 0xb
 4217 0022 0B       		.uleb128 0xb
 4218 0023 3E       		.uleb128 0x3e
 4219 0024 0B       		.uleb128 0xb
 4220 0025 03       		.uleb128 0x3
 4221 0026 08       		.uleb128 0x8
 4222 0027 00       		.byte	0
 4223 0028 00       		.byte	0
 4224 0029 04       		.uleb128 0x4
 4225 002a 16       		.uleb128 0x16
 4226 002b 00       		.byte	0
 4227 002c 03       		.uleb128 0x3
 4228 002d 0E       		.uleb128 0xe
 4229 002e 3A       		.uleb128 0x3a
 4230 002f 0B       		.uleb128 0xb
 4231 0030 3B       		.uleb128 0x3b
 4232 0031 05       		.uleb128 0x5
 4233 0032 49       		.uleb128 0x49
 4234 0033 13       		.uleb128 0x13
 4235 0034 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 128


 4236 0035 00       		.byte	0
 4237 0036 05       		.uleb128 0x5
 4238 0037 35       		.uleb128 0x35
 4239 0038 00       		.byte	0
 4240 0039 49       		.uleb128 0x49
 4241 003a 13       		.uleb128 0x13
 4242 003b 00       		.byte	0
 4243 003c 00       		.byte	0
 4244 003d 06       		.uleb128 0x6
 4245 003e 13       		.uleb128 0x13
 4246 003f 01       		.byte	0x1
 4247 0040 0B       		.uleb128 0xb
 4248 0041 0B       		.uleb128 0xb
 4249 0042 3A       		.uleb128 0x3a
 4250 0043 0B       		.uleb128 0xb
 4251 0044 3B       		.uleb128 0x3b
 4252 0045 0B       		.uleb128 0xb
 4253 0046 01       		.uleb128 0x1
 4254 0047 13       		.uleb128 0x13
 4255 0048 00       		.byte	0
 4256 0049 00       		.byte	0
 4257 004a 07       		.uleb128 0x7
 4258 004b 0D       		.uleb128 0xd
 4259 004c 00       		.byte	0
 4260 004d 03       		.uleb128 0x3
 4261 004e 0E       		.uleb128 0xe
 4262 004f 3A       		.uleb128 0x3a
 4263 0050 0B       		.uleb128 0xb
 4264 0051 3B       		.uleb128 0x3b
 4265 0052 0B       		.uleb128 0xb
 4266 0053 49       		.uleb128 0x49
 4267 0054 13       		.uleb128 0x13
 4268 0055 38       		.uleb128 0x38
 4269 0056 0B       		.uleb128 0xb
 4270 0057 00       		.byte	0
 4271 0058 00       		.byte	0
 4272 0059 08       		.uleb128 0x8
 4273 005a 16       		.uleb128 0x16
 4274 005b 00       		.byte	0
 4275 005c 03       		.uleb128 0x3
 4276 005d 0E       		.uleb128 0xe
 4277 005e 3A       		.uleb128 0x3a
 4278 005f 0B       		.uleb128 0xb
 4279 0060 3B       		.uleb128 0x3b
 4280 0061 0B       		.uleb128 0xb
 4281 0062 49       		.uleb128 0x49
 4282 0063 13       		.uleb128 0x13
 4283 0064 00       		.byte	0
 4284 0065 00       		.byte	0
 4285 0066 09       		.uleb128 0x9
 4286 0067 04       		.uleb128 0x4
 4287 0068 01       		.byte	0x1
 4288 0069 0B       		.uleb128 0xb
 4289 006a 0B       		.uleb128 0xb
 4290 006b 49       		.uleb128 0x49
 4291 006c 13       		.uleb128 0x13
 4292 006d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 129


 4293 006e 0B       		.uleb128 0xb
 4294 006f 3B       		.uleb128 0x3b
 4295 0070 0B       		.uleb128 0xb
 4296 0071 01       		.uleb128 0x1
 4297 0072 13       		.uleb128 0x13
 4298 0073 00       		.byte	0
 4299 0074 00       		.byte	0
 4300 0075 0A       		.uleb128 0xa
 4301 0076 28       		.uleb128 0x28
 4302 0077 00       		.byte	0
 4303 0078 03       		.uleb128 0x3
 4304 0079 0E       		.uleb128 0xe
 4305 007a 1C       		.uleb128 0x1c
 4306 007b 0B       		.uleb128 0xb
 4307 007c 00       		.byte	0
 4308 007d 00       		.byte	0
 4309 007e 0B       		.uleb128 0xb
 4310 007f 01       		.uleb128 0x1
 4311 0080 01       		.byte	0x1
 4312 0081 49       		.uleb128 0x49
 4313 0082 13       		.uleb128 0x13
 4314 0083 01       		.uleb128 0x1
 4315 0084 13       		.uleb128 0x13
 4316 0085 00       		.byte	0
 4317 0086 00       		.byte	0
 4318 0087 0C       		.uleb128 0xc
 4319 0088 21       		.uleb128 0x21
 4320 0089 00       		.byte	0
 4321 008a 49       		.uleb128 0x49
 4322 008b 13       		.uleb128 0x13
 4323 008c 2F       		.uleb128 0x2f
 4324 008d 0B       		.uleb128 0xb
 4325 008e 00       		.byte	0
 4326 008f 00       		.byte	0
 4327 0090 0D       		.uleb128 0xd
 4328 0091 0D       		.uleb128 0xd
 4329 0092 00       		.byte	0
 4330 0093 03       		.uleb128 0x3
 4331 0094 0E       		.uleb128 0xe
 4332 0095 3A       		.uleb128 0x3a
 4333 0096 0B       		.uleb128 0xb
 4334 0097 3B       		.uleb128 0x3b
 4335 0098 05       		.uleb128 0x5
 4336 0099 49       		.uleb128 0x49
 4337 009a 13       		.uleb128 0x13
 4338 009b 38       		.uleb128 0x38
 4339 009c 0B       		.uleb128 0xb
 4340 009d 00       		.byte	0
 4341 009e 00       		.byte	0
 4342 009f 0E       		.uleb128 0xe
 4343 00a0 13       		.uleb128 0x13
 4344 00a1 01       		.byte	0x1
 4345 00a2 0B       		.uleb128 0xb
 4346 00a3 0B       		.uleb128 0xb
 4347 00a4 3A       		.uleb128 0x3a
 4348 00a5 0B       		.uleb128 0xb
 4349 00a6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 130


 4350 00a7 05       		.uleb128 0x5
 4351 00a8 01       		.uleb128 0x1
 4352 00a9 13       		.uleb128 0x13
 4353 00aa 00       		.byte	0
 4354 00ab 00       		.byte	0
 4355 00ac 0F       		.uleb128 0xf
 4356 00ad 0D       		.uleb128 0xd
 4357 00ae 00       		.byte	0
 4358 00af 03       		.uleb128 0x3
 4359 00b0 08       		.uleb128 0x8
 4360 00b1 3A       		.uleb128 0x3a
 4361 00b2 0B       		.uleb128 0xb
 4362 00b3 3B       		.uleb128 0x3b
 4363 00b4 05       		.uleb128 0x5
 4364 00b5 49       		.uleb128 0x49
 4365 00b6 13       		.uleb128 0x13
 4366 00b7 38       		.uleb128 0x38
 4367 00b8 0B       		.uleb128 0xb
 4368 00b9 00       		.byte	0
 4369 00ba 00       		.byte	0
 4370 00bb 10       		.uleb128 0x10
 4371 00bc 0F       		.uleb128 0xf
 4372 00bd 00       		.byte	0
 4373 00be 0B       		.uleb128 0xb
 4374 00bf 0B       		.uleb128 0xb
 4375 00c0 49       		.uleb128 0x49
 4376 00c1 13       		.uleb128 0x13
 4377 00c2 00       		.byte	0
 4378 00c3 00       		.byte	0
 4379 00c4 11       		.uleb128 0x11
 4380 00c5 26       		.uleb128 0x26
 4381 00c6 00       		.byte	0
 4382 00c7 00       		.byte	0
 4383 00c8 00       		.byte	0
 4384 00c9 12       		.uleb128 0x12
 4385 00ca 0F       		.uleb128 0xf
 4386 00cb 00       		.byte	0
 4387 00cc 0B       		.uleb128 0xb
 4388 00cd 0B       		.uleb128 0xb
 4389 00ce 00       		.byte	0
 4390 00cf 00       		.byte	0
 4391 00d0 13       		.uleb128 0x13
 4392 00d1 2E       		.uleb128 0x2e
 4393 00d2 00       		.byte	0
 4394 00d3 03       		.uleb128 0x3
 4395 00d4 0E       		.uleb128 0xe
 4396 00d5 3A       		.uleb128 0x3a
 4397 00d6 0B       		.uleb128 0xb
 4398 00d7 3B       		.uleb128 0x3b
 4399 00d8 05       		.uleb128 0x5
 4400 00d9 27       		.uleb128 0x27
 4401 00da 19       		.uleb128 0x19
 4402 00db 20       		.uleb128 0x20
 4403 00dc 0B       		.uleb128 0xb
 4404 00dd 00       		.byte	0
 4405 00de 00       		.byte	0
 4406 00df 14       		.uleb128 0x14
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 131


 4407 00e0 2E       		.uleb128 0x2e
 4408 00e1 00       		.byte	0
 4409 00e2 03       		.uleb128 0x3
 4410 00e3 0E       		.uleb128 0xe
 4411 00e4 3A       		.uleb128 0x3a
 4412 00e5 0B       		.uleb128 0xb
 4413 00e6 3B       		.uleb128 0x3b
 4414 00e7 05       		.uleb128 0x5
 4415 00e8 27       		.uleb128 0x27
 4416 00e9 19       		.uleb128 0x19
 4417 00ea 11       		.uleb128 0x11
 4418 00eb 01       		.uleb128 0x1
 4419 00ec 12       		.uleb128 0x12
 4420 00ed 06       		.uleb128 0x6
 4421 00ee 40       		.uleb128 0x40
 4422 00ef 18       		.uleb128 0x18
 4423 00f0 9742     		.uleb128 0x2117
 4424 00f2 19       		.uleb128 0x19
 4425 00f3 00       		.byte	0
 4426 00f4 00       		.byte	0
 4427 00f5 15       		.uleb128 0x15
 4428 00f6 2E       		.uleb128 0x2e
 4429 00f7 01       		.byte	0x1
 4430 00f8 03       		.uleb128 0x3
 4431 00f9 0E       		.uleb128 0xe
 4432 00fa 3A       		.uleb128 0x3a
 4433 00fb 0B       		.uleb128 0xb
 4434 00fc 3B       		.uleb128 0x3b
 4435 00fd 05       		.uleb128 0x5
 4436 00fe 27       		.uleb128 0x27
 4437 00ff 19       		.uleb128 0x19
 4438 0100 49       		.uleb128 0x49
 4439 0101 13       		.uleb128 0x13
 4440 0102 11       		.uleb128 0x11
 4441 0103 01       		.uleb128 0x1
 4442 0104 12       		.uleb128 0x12
 4443 0105 06       		.uleb128 0x6
 4444 0106 40       		.uleb128 0x40
 4445 0107 18       		.uleb128 0x18
 4446 0108 9642     		.uleb128 0x2116
 4447 010a 19       		.uleb128 0x19
 4448 010b 01       		.uleb128 0x1
 4449 010c 13       		.uleb128 0x13
 4450 010d 00       		.byte	0
 4451 010e 00       		.byte	0
 4452 010f 16       		.uleb128 0x16
 4453 0110 05       		.uleb128 0x5
 4454 0111 00       		.byte	0
 4455 0112 03       		.uleb128 0x3
 4456 0113 0E       		.uleb128 0xe
 4457 0114 3A       		.uleb128 0x3a
 4458 0115 0B       		.uleb128 0xb
 4459 0116 3B       		.uleb128 0x3b
 4460 0117 05       		.uleb128 0x5
 4461 0118 49       		.uleb128 0x49
 4462 0119 13       		.uleb128 0x13
 4463 011a 02       		.uleb128 0x2
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 132


 4464 011b 17       		.uleb128 0x17
 4465 011c 00       		.byte	0
 4466 011d 00       		.byte	0
 4467 011e 17       		.uleb128 0x17
 4468 011f 34       		.uleb128 0x34
 4469 0120 00       		.byte	0
 4470 0121 03       		.uleb128 0x3
 4471 0122 0E       		.uleb128 0xe
 4472 0123 3A       		.uleb128 0x3a
 4473 0124 0B       		.uleb128 0xb
 4474 0125 3B       		.uleb128 0x3b
 4475 0126 05       		.uleb128 0x5
 4476 0127 49       		.uleb128 0x49
 4477 0128 13       		.uleb128 0x13
 4478 0129 02       		.uleb128 0x2
 4479 012a 17       		.uleb128 0x17
 4480 012b 00       		.byte	0
 4481 012c 00       		.byte	0
 4482 012d 18       		.uleb128 0x18
 4483 012e 26       		.uleb128 0x26
 4484 012f 00       		.byte	0
 4485 0130 49       		.uleb128 0x49
 4486 0131 13       		.uleb128 0x13
 4487 0132 00       		.byte	0
 4488 0133 00       		.byte	0
 4489 0134 19       		.uleb128 0x19
 4490 0135 2E       		.uleb128 0x2e
 4491 0136 01       		.byte	0x1
 4492 0137 03       		.uleb128 0x3
 4493 0138 0E       		.uleb128 0xe
 4494 0139 3A       		.uleb128 0x3a
 4495 013a 0B       		.uleb128 0xb
 4496 013b 3B       		.uleb128 0x3b
 4497 013c 05       		.uleb128 0x5
 4498 013d 27       		.uleb128 0x27
 4499 013e 19       		.uleb128 0x19
 4500 013f 11       		.uleb128 0x11
 4501 0140 01       		.uleb128 0x1
 4502 0141 12       		.uleb128 0x12
 4503 0142 06       		.uleb128 0x6
 4504 0143 40       		.uleb128 0x40
 4505 0144 18       		.uleb128 0x18
 4506 0145 9642     		.uleb128 0x2116
 4507 0147 19       		.uleb128 0x19
 4508 0148 01       		.uleb128 0x1
 4509 0149 13       		.uleb128 0x13
 4510 014a 00       		.byte	0
 4511 014b 00       		.byte	0
 4512 014c 1A       		.uleb128 0x1a
 4513 014d 2E       		.uleb128 0x2e
 4514 014e 01       		.byte	0x1
 4515 014f 03       		.uleb128 0x3
 4516 0150 0E       		.uleb128 0xe
 4517 0151 3A       		.uleb128 0x3a
 4518 0152 0B       		.uleb128 0xb
 4519 0153 3B       		.uleb128 0x3b
 4520 0154 05       		.uleb128 0x5
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 133


 4521 0155 27       		.uleb128 0x27
 4522 0156 19       		.uleb128 0x19
 4523 0157 11       		.uleb128 0x11
 4524 0158 01       		.uleb128 0x1
 4525 0159 12       		.uleb128 0x12
 4526 015a 06       		.uleb128 0x6
 4527 015b 40       		.uleb128 0x40
 4528 015c 18       		.uleb128 0x18
 4529 015d 9742     		.uleb128 0x2117
 4530 015f 19       		.uleb128 0x19
 4531 0160 01       		.uleb128 0x1
 4532 0161 13       		.uleb128 0x13
 4533 0162 00       		.byte	0
 4534 0163 00       		.byte	0
 4535 0164 1B       		.uleb128 0x1b
 4536 0165 898201   		.uleb128 0x4109
 4537 0168 01       		.byte	0x1
 4538 0169 11       		.uleb128 0x11
 4539 016a 01       		.uleb128 0x1
 4540 016b 31       		.uleb128 0x31
 4541 016c 13       		.uleb128 0x13
 4542 016d 00       		.byte	0
 4543 016e 00       		.byte	0
 4544 016f 1C       		.uleb128 0x1c
 4545 0170 8A8201   		.uleb128 0x410a
 4546 0173 00       		.byte	0
 4547 0174 02       		.uleb128 0x2
 4548 0175 18       		.uleb128 0x18
 4549 0176 9142     		.uleb128 0x2111
 4550 0178 18       		.uleb128 0x18
 4551 0179 00       		.byte	0
 4552 017a 00       		.byte	0
 4553 017b 1D       		.uleb128 0x1d
 4554 017c 2E       		.uleb128 0x2e
 4555 017d 01       		.byte	0x1
 4556 017e 3F       		.uleb128 0x3f
 4557 017f 19       		.uleb128 0x19
 4558 0180 03       		.uleb128 0x3
 4559 0181 0E       		.uleb128 0xe
 4560 0182 3A       		.uleb128 0x3a
 4561 0183 0B       		.uleb128 0xb
 4562 0184 3B       		.uleb128 0x3b
 4563 0185 05       		.uleb128 0x5
 4564 0186 27       		.uleb128 0x27
 4565 0187 19       		.uleb128 0x19
 4566 0188 11       		.uleb128 0x11
 4567 0189 01       		.uleb128 0x1
 4568 018a 12       		.uleb128 0x12
 4569 018b 06       		.uleb128 0x6
 4570 018c 40       		.uleb128 0x40
 4571 018d 18       		.uleb128 0x18
 4572 018e 9742     		.uleb128 0x2117
 4573 0190 19       		.uleb128 0x19
 4574 0191 01       		.uleb128 0x1
 4575 0192 13       		.uleb128 0x13
 4576 0193 00       		.byte	0
 4577 0194 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 134


 4578 0195 1E       		.uleb128 0x1e
 4579 0196 898201   		.uleb128 0x4109
 4580 0199 00       		.byte	0
 4581 019a 11       		.uleb128 0x11
 4582 019b 01       		.uleb128 0x1
 4583 019c 31       		.uleb128 0x31
 4584 019d 13       		.uleb128 0x13
 4585 019e 00       		.byte	0
 4586 019f 00       		.byte	0
 4587 01a0 1F       		.uleb128 0x1f
 4588 01a1 05       		.uleb128 0x5
 4589 01a2 00       		.byte	0
 4590 01a3 03       		.uleb128 0x3
 4591 01a4 0E       		.uleb128 0xe
 4592 01a5 3A       		.uleb128 0x3a
 4593 01a6 0B       		.uleb128 0xb
 4594 01a7 3B       		.uleb128 0x3b
 4595 01a8 05       		.uleb128 0x5
 4596 01a9 49       		.uleb128 0x49
 4597 01aa 13       		.uleb128 0x13
 4598 01ab 02       		.uleb128 0x2
 4599 01ac 18       		.uleb128 0x18
 4600 01ad 00       		.byte	0
 4601 01ae 00       		.byte	0
 4602 01af 20       		.uleb128 0x20
 4603 01b0 2E       		.uleb128 0x2e
 4604 01b1 01       		.byte	0x1
 4605 01b2 03       		.uleb128 0x3
 4606 01b3 0E       		.uleb128 0xe
 4607 01b4 3A       		.uleb128 0x3a
 4608 01b5 0B       		.uleb128 0xb
 4609 01b6 3B       		.uleb128 0x3b
 4610 01b7 05       		.uleb128 0x5
 4611 01b8 27       		.uleb128 0x27
 4612 01b9 19       		.uleb128 0x19
 4613 01ba 20       		.uleb128 0x20
 4614 01bb 0B       		.uleb128 0xb
 4615 01bc 01       		.uleb128 0x1
 4616 01bd 13       		.uleb128 0x13
 4617 01be 00       		.byte	0
 4618 01bf 00       		.byte	0
 4619 01c0 21       		.uleb128 0x21
 4620 01c1 34       		.uleb128 0x34
 4621 01c2 00       		.byte	0
 4622 01c3 03       		.uleb128 0x3
 4623 01c4 0E       		.uleb128 0xe
 4624 01c5 3A       		.uleb128 0x3a
 4625 01c6 0B       		.uleb128 0xb
 4626 01c7 3B       		.uleb128 0x3b
 4627 01c8 05       		.uleb128 0x5
 4628 01c9 49       		.uleb128 0x49
 4629 01ca 13       		.uleb128 0x13
 4630 01cb 00       		.byte	0
 4631 01cc 00       		.byte	0
 4632 01cd 22       		.uleb128 0x22
 4633 01ce 1D       		.uleb128 0x1d
 4634 01cf 01       		.byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 135


 4635 01d0 31       		.uleb128 0x31
 4636 01d1 13       		.uleb128 0x13
 4637 01d2 11       		.uleb128 0x11
 4638 01d3 01       		.uleb128 0x1
 4639 01d4 12       		.uleb128 0x12
 4640 01d5 06       		.uleb128 0x6
 4641 01d6 58       		.uleb128 0x58
 4642 01d7 0B       		.uleb128 0xb
 4643 01d8 59       		.uleb128 0x59
 4644 01d9 05       		.uleb128 0x5
 4645 01da 01       		.uleb128 0x1
 4646 01db 13       		.uleb128 0x13
 4647 01dc 00       		.byte	0
 4648 01dd 00       		.byte	0
 4649 01de 23       		.uleb128 0x23
 4650 01df 0B       		.uleb128 0xb
 4651 01e0 01       		.byte	0x1
 4652 01e1 11       		.uleb128 0x11
 4653 01e2 01       		.uleb128 0x1
 4654 01e3 12       		.uleb128 0x12
 4655 01e4 06       		.uleb128 0x6
 4656 01e5 00       		.byte	0
 4657 01e6 00       		.byte	0
 4658 01e7 24       		.uleb128 0x24
 4659 01e8 34       		.uleb128 0x34
 4660 01e9 00       		.byte	0
 4661 01ea 31       		.uleb128 0x31
 4662 01eb 13       		.uleb128 0x13
 4663 01ec 02       		.uleb128 0x2
 4664 01ed 17       		.uleb128 0x17
 4665 01ee 00       		.byte	0
 4666 01ef 00       		.byte	0
 4667 01f0 25       		.uleb128 0x25
 4668 01f1 898201   		.uleb128 0x4109
 4669 01f4 01       		.byte	0x1
 4670 01f5 11       		.uleb128 0x11
 4671 01f6 01       		.uleb128 0x1
 4672 01f7 31       		.uleb128 0x31
 4673 01f8 13       		.uleb128 0x13
 4674 01f9 01       		.uleb128 0x1
 4675 01fa 13       		.uleb128 0x13
 4676 01fb 00       		.byte	0
 4677 01fc 00       		.byte	0
 4678 01fd 26       		.uleb128 0x26
 4679 01fe 1D       		.uleb128 0x1d
 4680 01ff 00       		.byte	0
 4681 0200 31       		.uleb128 0x31
 4682 0201 13       		.uleb128 0x13
 4683 0202 11       		.uleb128 0x11
 4684 0203 01       		.uleb128 0x1
 4685 0204 12       		.uleb128 0x12
 4686 0205 06       		.uleb128 0x6
 4687 0206 58       		.uleb128 0x58
 4688 0207 0B       		.uleb128 0xb
 4689 0208 59       		.uleb128 0x59
 4690 0209 05       		.uleb128 0x5
 4691 020a 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 136


 4692 020b 00       		.byte	0
 4693 020c 27       		.uleb128 0x27
 4694 020d 34       		.uleb128 0x34
 4695 020e 00       		.byte	0
 4696 020f 03       		.uleb128 0x3
 4697 0210 0E       		.uleb128 0xe
 4698 0211 3A       		.uleb128 0x3a
 4699 0212 0B       		.uleb128 0xb
 4700 0213 3B       		.uleb128 0x3b
 4701 0214 05       		.uleb128 0x5
 4702 0215 49       		.uleb128 0x49
 4703 0216 13       		.uleb128 0x13
 4704 0217 02       		.uleb128 0x2
 4705 0218 18       		.uleb128 0x18
 4706 0219 00       		.byte	0
 4707 021a 00       		.byte	0
 4708 021b 28       		.uleb128 0x28
 4709 021c 2E       		.uleb128 0x2e
 4710 021d 01       		.byte	0x1
 4711 021e 3F       		.uleb128 0x3f
 4712 021f 19       		.uleb128 0x19
 4713 0220 03       		.uleb128 0x3
 4714 0221 0E       		.uleb128 0xe
 4715 0222 3A       		.uleb128 0x3a
 4716 0223 0B       		.uleb128 0xb
 4717 0224 3B       		.uleb128 0x3b
 4718 0225 05       		.uleb128 0x5
 4719 0226 27       		.uleb128 0x27
 4720 0227 19       		.uleb128 0x19
 4721 0228 49       		.uleb128 0x49
 4722 0229 13       		.uleb128 0x13
 4723 022a 11       		.uleb128 0x11
 4724 022b 01       		.uleb128 0x1
 4725 022c 12       		.uleb128 0x12
 4726 022d 06       		.uleb128 0x6
 4727 022e 40       		.uleb128 0x40
 4728 022f 18       		.uleb128 0x18
 4729 0230 9742     		.uleb128 0x2117
 4730 0232 19       		.uleb128 0x19
 4731 0233 01       		.uleb128 0x1
 4732 0234 13       		.uleb128 0x13
 4733 0235 00       		.byte	0
 4734 0236 00       		.byte	0
 4735 0237 29       		.uleb128 0x29
 4736 0238 34       		.uleb128 0x34
 4737 0239 00       		.byte	0
 4738 023a 03       		.uleb128 0x3
 4739 023b 0E       		.uleb128 0xe
 4740 023c 3A       		.uleb128 0x3a
 4741 023d 0B       		.uleb128 0xb
 4742 023e 3B       		.uleb128 0x3b
 4743 023f 0B       		.uleb128 0xb
 4744 0240 49       		.uleb128 0x49
 4745 0241 13       		.uleb128 0x13
 4746 0242 02       		.uleb128 0x2
 4747 0243 18       		.uleb128 0x18
 4748 0244 00       		.byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 137


 4749 0245 00       		.byte	0
 4750 0246 2A       		.uleb128 0x2a
 4751 0247 34       		.uleb128 0x34
 4752 0248 00       		.byte	0
 4753 0249 03       		.uleb128 0x3
 4754 024a 0E       		.uleb128 0xe
 4755 024b 3A       		.uleb128 0x3a
 4756 024c 0B       		.uleb128 0xb
 4757 024d 3B       		.uleb128 0x3b
 4758 024e 05       		.uleb128 0x5
 4759 024f 49       		.uleb128 0x49
 4760 0250 13       		.uleb128 0x13
 4761 0251 3F       		.uleb128 0x3f
 4762 0252 19       		.uleb128 0x19
 4763 0253 3C       		.uleb128 0x3c
 4764 0254 19       		.uleb128 0x19
 4765 0255 00       		.byte	0
 4766 0256 00       		.byte	0
 4767 0257 2B       		.uleb128 0x2b
 4768 0258 34       		.uleb128 0x34
 4769 0259 00       		.byte	0
 4770 025a 03       		.uleb128 0x3
 4771 025b 0E       		.uleb128 0xe
 4772 025c 3A       		.uleb128 0x3a
 4773 025d 0B       		.uleb128 0xb
 4774 025e 3B       		.uleb128 0x3b
 4775 025f 0B       		.uleb128 0xb
 4776 0260 49       		.uleb128 0x49
 4777 0261 13       		.uleb128 0x13
 4778 0262 3F       		.uleb128 0x3f
 4779 0263 19       		.uleb128 0x19
 4780 0264 3C       		.uleb128 0x3c
 4781 0265 19       		.uleb128 0x19
 4782 0266 00       		.byte	0
 4783 0267 00       		.byte	0
 4784 0268 2C       		.uleb128 0x2c
 4785 0269 34       		.uleb128 0x34
 4786 026a 00       		.byte	0
 4787 026b 03       		.uleb128 0x3
 4788 026c 0E       		.uleb128 0xe
 4789 026d 3A       		.uleb128 0x3a
 4790 026e 0B       		.uleb128 0xb
 4791 026f 3B       		.uleb128 0x3b
 4792 0270 0B       		.uleb128 0xb
 4793 0271 49       		.uleb128 0x49
 4794 0272 13       		.uleb128 0x13
 4795 0273 3F       		.uleb128 0x3f
 4796 0274 19       		.uleb128 0x19
 4797 0275 02       		.uleb128 0x2
 4798 0276 18       		.uleb128 0x18
 4799 0277 00       		.byte	0
 4800 0278 00       		.byte	0
 4801 0279 2D       		.uleb128 0x2d
 4802 027a 2E       		.uleb128 0x2e
 4803 027b 00       		.byte	0
 4804 027c 3F       		.uleb128 0x3f
 4805 027d 19       		.uleb128 0x19
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 138


 4806 027e 3C       		.uleb128 0x3c
 4807 027f 19       		.uleb128 0x19
 4808 0280 6E       		.uleb128 0x6e
 4809 0281 0E       		.uleb128 0xe
 4810 0282 03       		.uleb128 0x3
 4811 0283 0E       		.uleb128 0xe
 4812 0284 3A       		.uleb128 0x3a
 4813 0285 0B       		.uleb128 0xb
 4814 0286 3B       		.uleb128 0x3b
 4815 0287 0B       		.uleb128 0xb
 4816 0288 00       		.byte	0
 4817 0289 00       		.byte	0
 4818 028a 00       		.byte	0
 4819              		.section	.debug_loc,"",%progbits
 4820              	.Ldebug_loc0:
 4821              	.LLST0:
 4822 0000 00000000 		.4byte	.LVL0
 4823 0004 22000000 		.4byte	.LVL7
 4824 0008 0100     		.2byte	0x1
 4825 000a 50       		.byte	0x50
 4826 000b 22000000 		.4byte	.LVL7
 4827 000f 26000000 		.4byte	.LVL9
 4828 0013 0100     		.2byte	0x1
 4829 0015 55       		.byte	0x55
 4830 0016 26000000 		.4byte	.LVL9
 4831 001a 28000000 		.4byte	.LVL10
 4832 001e 0100     		.2byte	0x1
 4833 0020 50       		.byte	0x50
 4834 0021 28000000 		.4byte	.LVL10
 4835 0025 8E000000 		.4byte	.LVL33
 4836 0029 0100     		.2byte	0x1
 4837 002b 55       		.byte	0x55
 4838 002c 8E000000 		.4byte	.LVL33
 4839 0030 98000000 		.4byte	.LFE16
 4840 0034 0400     		.2byte	0x4
 4841 0036 F3       		.byte	0xf3
 4842 0037 01       		.uleb128 0x1
 4843 0038 50       		.byte	0x50
 4844 0039 9F       		.byte	0x9f
 4845 003a 00000000 		.4byte	0
 4846 003e 00000000 		.4byte	0
 4847              	.LLST1:
 4848 0042 00000000 		.4byte	.LVL0
 4849 0046 3C000000 		.4byte	.LVL14
 4850 004a 0100     		.2byte	0x1
 4851 004c 51       		.byte	0x51
 4852 004d 3C000000 		.4byte	.LVL14
 4853 0051 98000000 		.4byte	.LFE16
 4854 0055 0400     		.2byte	0x4
 4855 0057 F3       		.byte	0xf3
 4856 0058 01       		.uleb128 0x1
 4857 0059 51       		.byte	0x51
 4858 005a 9F       		.byte	0x9f
 4859 005b 00000000 		.4byte	0
 4860 005f 00000000 		.4byte	0
 4861              	.LLST2:
 4862 0063 0A000000 		.4byte	.LVL1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 139


 4863 0067 56000000 		.4byte	.LVL21
 4864 006b 0200     		.2byte	0x2
 4865 006d 30       		.byte	0x30
 4866 006e 9F       		.byte	0x9f
 4867 006f 56000000 		.4byte	.LVL21
 4868 0073 74000000 		.4byte	.LVL27
 4869 0077 0200     		.2byte	0x2
 4870 0079 91       		.byte	0x91
 4871 007a 64       		.sleb128 -28
 4872 007b 76000000 		.4byte	.LVL28
 4873 007f 98000000 		.4byte	.LFE16
 4874 0083 0200     		.2byte	0x2
 4875 0085 91       		.byte	0x91
 4876 0086 64       		.sleb128 -28
 4877 0087 00000000 		.4byte	0
 4878 008b 00000000 		.4byte	0
 4879              	.LLST3:
 4880 008f 1C000000 		.4byte	.LVL6
 4881 0093 50000000 		.4byte	.LVL20
 4882 0097 0100     		.2byte	0x1
 4883 0099 57       		.byte	0x57
 4884 009a 5A000000 		.4byte	.LVL22
 4885 009e 66000000 		.4byte	.LVL23
 4886 00a2 0100     		.2byte	0x1
 4887 00a4 50       		.byte	0x50
 4888 00a5 70000000 		.4byte	.LVL26
 4889 00a9 7A000000 		.4byte	.LVL29
 4890 00ad 0100     		.2byte	0x1
 4891 00af 50       		.byte	0x50
 4892 00b0 00000000 		.4byte	0
 4893 00b4 00000000 		.4byte	0
 4894              	.LLST4:
 4895 00b8 4E000000 		.4byte	.LVL19
 4896 00bc 56000000 		.4byte	.LVL21
 4897 00c0 0200     		.2byte	0x2
 4898 00c2 30       		.byte	0x30
 4899 00c3 9F       		.byte	0x9f
 4900 00c4 56000000 		.4byte	.LVL21
 4901 00c8 8E000000 		.4byte	.LVL35
 4902 00cc 0100     		.2byte	0x1
 4903 00ce 57       		.byte	0x57
 4904 00cf 00000000 		.4byte	0
 4905 00d3 00000000 		.4byte	0
 4906              	.LLST5:
 4907 00d7 56000000 		.4byte	.LVL21
 4908 00db 66000000 		.4byte	.LVL23
 4909 00df 0100     		.2byte	0x1
 4910 00e1 51       		.byte	0x51
 4911 00e2 68000000 		.4byte	.LVL24
 4912 00e6 6A000000 		.4byte	.LVL25
 4913 00ea 0100     		.2byte	0x1
 4914 00ec 53       		.byte	0x53
 4915 00ed 6A000000 		.4byte	.LVL25
 4916 00f1 7E000000 		.4byte	.LVL31
 4917 00f5 0100     		.2byte	0x1
 4918 00f7 51       		.byte	0x51
 4919 00f8 00000000 		.4byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 140


 4920 00fc 00000000 		.4byte	0
 4921              	.LLST6:
 4922 0100 2E000000 		.4byte	.LVL11
 4923 0104 4E000000 		.4byte	.LVL19
 4924 0108 0100     		.2byte	0x1
 4925 010a 58       		.byte	0x58
 4926 010b 4E000000 		.4byte	.LVL19
 4927 010f 56000000 		.4byte	.LVL21
 4928 0113 0100     		.2byte	0x1
 4929 0115 50       		.byte	0x50
 4930 0116 56000000 		.4byte	.LVL21
 4931 011a 98000000 		.4byte	.LFE16
 4932 011e 0100     		.2byte	0x1
 4933 0120 52       		.byte	0x52
 4934 0121 00000000 		.4byte	0
 4935 0125 00000000 		.4byte	0
 4936              	.LLST7:
 4937 0129 1C000000 		.4byte	.LVL6
 4938 012d 24000000 		.4byte	.LVL8
 4939 0131 0200     		.2byte	0x2
 4940 0133 30       		.byte	0x30
 4941 0134 9F       		.byte	0x9f
 4942 0135 24000000 		.4byte	.LVL8
 4943 0139 26000000 		.4byte	.LVL9
 4944 013d 0100     		.2byte	0x1
 4945 013f 50       		.byte	0x50
 4946 0140 26000000 		.4byte	.LVL9
 4947 0144 28000000 		.4byte	.LVL10
 4948 0148 0200     		.2byte	0x2
 4949 014a 30       		.byte	0x30
 4950 014b 9F       		.byte	0x9f
 4951 014c 28000000 		.4byte	.LVL10
 4952 0150 3A000000 		.4byte	.LVL13
 4953 0154 0100     		.2byte	0x1
 4954 0156 50       		.byte	0x50
 4955 0157 42000000 		.4byte	.LVL16
 4956 015b 44000000 		.4byte	.LVL17
 4957 015f 0100     		.2byte	0x1
 4958 0161 50       		.byte	0x50
 4959 0162 44000000 		.4byte	.LVL17
 4960 0166 8E000000 		.4byte	.LVL34
 4961 016a 0100     		.2byte	0x1
 4962 016c 56       		.byte	0x56
 4963 016d 00000000 		.4byte	0
 4964 0171 00000000 		.4byte	0
 4965              	.LLST8:
 4966 0175 10000000 		.4byte	.LVL2
 4967 0179 16000000 		.4byte	.LVL5
 4968 017d 0100     		.2byte	0x1
 4969 017f 53       		.byte	0x53
 4970 0180 00000000 		.4byte	0
 4971 0184 00000000 		.4byte	0
 4972              	.LLST9:
 4973 0188 12000000 		.4byte	.LVL3
 4974 018c 3F000000 		.4byte	.LVL15-1
 4975 0190 0100     		.2byte	0x1
 4976 0192 52       		.byte	0x52
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 141


 4977 0193 00000000 		.4byte	0
 4978 0197 00000000 		.4byte	0
 4979              	.LLST10:
 4980 019b 14000000 		.4byte	.LVL4
 4981 019f 8E000000 		.4byte	.LVL32
 4982 01a3 0100     		.2byte	0x1
 4983 01a5 54       		.byte	0x54
 4984 01a6 00000000 		.4byte	0
 4985 01aa 00000000 		.4byte	0
 4986              	.LLST11:
 4987 01ae 00000000 		.4byte	.LVL36
 4988 01b2 16000000 		.4byte	.LVL41
 4989 01b6 0100     		.2byte	0x1
 4990 01b8 50       		.byte	0x50
 4991 01b9 16000000 		.4byte	.LVL41
 4992 01bd 78000000 		.4byte	.LVL60
 4993 01c1 0100     		.2byte	0x1
 4994 01c3 57       		.byte	0x57
 4995 01c4 78000000 		.4byte	.LVL60
 4996 01c8 86000000 		.4byte	.LVL64
 4997 01cc 0400     		.2byte	0x4
 4998 01ce F3       		.byte	0xf3
 4999 01cf 01       		.uleb128 0x1
 5000 01d0 50       		.byte	0x50
 5001 01d1 9F       		.byte	0x9f
 5002 01d2 86000000 		.4byte	.LVL64
 5003 01d6 8E000000 		.4byte	.LVL68
 5004 01da 0100     		.2byte	0x1
 5005 01dc 57       		.byte	0x57
 5006 01dd 8E000000 		.4byte	.LVL68
 5007 01e1 9C000000 		.4byte	.LFE17
 5008 01e5 0400     		.2byte	0x4
 5009 01e7 F3       		.byte	0xf3
 5010 01e8 01       		.uleb128 0x1
 5011 01e9 50       		.byte	0x50
 5012 01ea 9F       		.byte	0x9f
 5013 01eb 00000000 		.4byte	0
 5014 01ef 00000000 		.4byte	0
 5015              	.LLST12:
 5016 01f3 76000000 		.4byte	.LVL59
 5017 01f7 84000000 		.4byte	.LVL63
 5018 01fb 0100     		.2byte	0x1
 5019 01fd 50       		.byte	0x50
 5020 01fe 8E000000 		.4byte	.LVL68
 5021 0202 90000000 		.4byte	.LVL69
 5022 0206 0100     		.2byte	0x1
 5023 0208 50       		.byte	0x50
 5024 0209 00000000 		.4byte	0
 5025 020d 00000000 		.4byte	0
 5026              	.LLST13:
 5027 0211 12000000 		.4byte	.LVL40
 5028 0215 1C000000 		.4byte	.LVL42
 5029 0219 0200     		.2byte	0x2
 5030 021b 30       		.byte	0x30
 5031 021c 9F       		.byte	0x9f
 5032 021d 1C000000 		.4byte	.LVL42
 5033 0221 90000000 		.4byte	.LVL73
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 142


 5034 0225 0100     		.2byte	0x1
 5035 0227 59       		.byte	0x59
 5036 0228 00000000 		.4byte	0
 5037 022c 00000000 		.4byte	0
 5038              	.LLST14:
 5039 0230 12000000 		.4byte	.LVL40
 5040 0234 1C000000 		.4byte	.LVL42
 5041 0238 0300     		.2byte	0x3
 5042 023a 08       		.byte	0x8
 5043 023b 7F       		.byte	0x7f
 5044 023c 9F       		.byte	0x9f
 5045 023d 1C000000 		.4byte	.LVL42
 5046 0241 2C000000 		.4byte	.LVL44
 5047 0245 0100     		.2byte	0x1
 5048 0247 50       		.byte	0x50
 5049 0248 2E000000 		.4byte	.LVL45
 5050 024c 42000000 		.4byte	.LVL48
 5051 0250 0100     		.2byte	0x1
 5052 0252 50       		.byte	0x50
 5053 0253 46000000 		.4byte	.LVL49
 5054 0257 6A000000 		.4byte	.LVL57
 5055 025b 0100     		.2byte	0x1
 5056 025d 50       		.byte	0x50
 5057 025e 86000000 		.4byte	.LVL64
 5058 0262 88000000 		.4byte	.LVL65
 5059 0266 0100     		.2byte	0x1
 5060 0268 50       		.byte	0x50
 5061 0269 8A000000 		.4byte	.LVL66
 5062 026d 8C000000 		.4byte	.LVL67
 5063 0271 0100     		.2byte	0x1
 5064 0273 50       		.byte	0x50
 5065 0274 00000000 		.4byte	0
 5066 0278 00000000 		.4byte	0
 5067              	.LLST15:
 5068 027c 0A000000 		.4byte	.LVL37
 5069 0280 82000000 		.4byte	.LVL62
 5070 0284 0200     		.2byte	0x2
 5071 0286 30       		.byte	0x30
 5072 0287 9F       		.byte	0x9f
 5073 0288 82000000 		.4byte	.LVL62
 5074 028c 86000000 		.4byte	.LVL64
 5075 0290 0200     		.2byte	0x2
 5076 0292 31       		.byte	0x31
 5077 0293 9F       		.byte	0x9f
 5078 0294 86000000 		.4byte	.LVL64
 5079 0298 90000000 		.4byte	.LVL69
 5080 029c 0200     		.2byte	0x2
 5081 029e 30       		.byte	0x30
 5082 029f 9F       		.byte	0x9f
 5083 02a0 90000000 		.4byte	.LVL69
 5084 02a4 9C000000 		.4byte	.LFE17
 5085 02a8 0100     		.2byte	0x1
 5086 02aa 50       		.byte	0x50
 5087 02ab 00000000 		.4byte	0
 5088 02af 00000000 		.4byte	0
 5089              	.LLST16:
 5090 02b3 12000000 		.4byte	.LVL40
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 143


 5091 02b7 1C000000 		.4byte	.LVL42
 5092 02bb 0200     		.2byte	0x2
 5093 02bd 31       		.byte	0x31
 5094 02be 9F       		.byte	0x9f
 5095 02bf 1C000000 		.4byte	.LVL42
 5096 02c3 2E000000 		.4byte	.LVL45
 5097 02c7 0100     		.2byte	0x1
 5098 02c9 52       		.byte	0x52
 5099 02ca 2E000000 		.4byte	.LVL45
 5100 02ce 30000000 		.4byte	.LVL46
 5101 02d2 0100     		.2byte	0x1
 5102 02d4 53       		.byte	0x53
 5103 02d5 30000000 		.4byte	.LVL46
 5104 02d9 48000000 		.4byte	.LVL50
 5105 02dd 0100     		.2byte	0x1
 5106 02df 52       		.byte	0x52
 5107 02e0 48000000 		.4byte	.LVL50
 5108 02e4 4A000000 		.4byte	.LVL51
 5109 02e8 0100     		.2byte	0x1
 5110 02ea 53       		.byte	0x53
 5111 02eb 4A000000 		.4byte	.LVL51
 5112 02ef 66000000 		.4byte	.LVL56
 5113 02f3 0100     		.2byte	0x1
 5114 02f5 52       		.byte	0x52
 5115 02f6 86000000 		.4byte	.LVL64
 5116 02fa 8E000000 		.4byte	.LVL68
 5117 02fe 0100     		.2byte	0x1
 5118 0300 52       		.byte	0x52
 5119 0301 00000000 		.4byte	0
 5120 0305 00000000 		.4byte	0
 5121              	.LLST17:
 5122 0309 12000000 		.4byte	.LVL40
 5123 030d 5E000000 		.4byte	.LVL54
 5124 0311 0100     		.2byte	0x1
 5125 0313 55       		.byte	0x55
 5126 0314 5E000000 		.4byte	.LVL54
 5127 0318 6C000000 		.4byte	.LVL58
 5128 031c 0100     		.2byte	0x1
 5129 031e 53       		.byte	0x53
 5130 031f 6C000000 		.4byte	.LVL58
 5131 0323 80000000 		.4byte	.LVL61
 5132 0327 0100     		.2byte	0x1
 5133 0329 55       		.byte	0x55
 5134 032a 80000000 		.4byte	.LVL61
 5135 032e 86000000 		.4byte	.LVL64
 5136 0332 0100     		.2byte	0x1
 5137 0334 58       		.byte	0x58
 5138 0335 86000000 		.4byte	.LVL64
 5139 0339 8E000000 		.4byte	.LVL68
 5140 033d 0100     		.2byte	0x1
 5141 033f 53       		.byte	0x53
 5142 0340 8E000000 		.4byte	.LVL68
 5143 0344 90000000 		.4byte	.LVL69
 5144 0348 0100     		.2byte	0x1
 5145 034a 55       		.byte	0x55
 5146 034b 90000000 		.4byte	.LVL69
 5147 034f 90000000 		.4byte	.LVL72
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 144


 5148 0353 0100     		.2byte	0x1
 5149 0355 58       		.byte	0x58
 5150 0356 00000000 		.4byte	0
 5151 035a 00000000 		.4byte	0
 5152              	.LLST18:
 5153 035e 0C000000 		.4byte	.LVL38
 5154 0362 90000000 		.4byte	.LVL71
 5155 0366 0100     		.2byte	0x1
 5156 0368 56       		.byte	0x56
 5157 0369 00000000 		.4byte	0
 5158 036d 00000000 		.4byte	0
 5159              	.LLST19:
 5160 0371 38000000 		.4byte	.LVL47
 5161 0375 64000000 		.4byte	.LVL55
 5162 0379 0100     		.2byte	0x1
 5163 037b 51       		.byte	0x51
 5164 037c 86000000 		.4byte	.LVL64
 5165 0380 8E000000 		.4byte	.LVL68
 5166 0384 0100     		.2byte	0x1
 5167 0386 51       		.byte	0x51
 5168 0387 00000000 		.4byte	0
 5169 038b 00000000 		.4byte	0
 5170              	.LLST20:
 5171 038f 0E000000 		.4byte	.LVL39
 5172 0393 90000000 		.4byte	.LVL70
 5173 0397 0100     		.2byte	0x1
 5174 0399 54       		.byte	0x54
 5175 039a 00000000 		.4byte	0
 5176 039e 00000000 		.4byte	0
 5177              	.LLST21:
 5178 03a2 00000000 		.4byte	.LVL74
 5179 03a6 24000000 		.4byte	.LVL79
 5180 03aa 0100     		.2byte	0x1
 5181 03ac 50       		.byte	0x50
 5182 03ad 24000000 		.4byte	.LVL79
 5183 03b1 C2000000 		.4byte	.LVL111
 5184 03b5 0100     		.2byte	0x1
 5185 03b7 57       		.byte	0x57
 5186 03b8 C2000000 		.4byte	.LVL111
 5187 03bc CC000000 		.4byte	.LFE18
 5188 03c0 0400     		.2byte	0x4
 5189 03c2 F3       		.byte	0xf3
 5190 03c3 01       		.uleb128 0x1
 5191 03c4 50       		.byte	0x50
 5192 03c5 9F       		.byte	0x9f
 5193 03c6 00000000 		.4byte	0
 5194 03ca 00000000 		.4byte	0
 5195              	.LLST22:
 5196 03ce 00000000 		.4byte	.LVL74
 5197 03d2 24000000 		.4byte	.LVL79
 5198 03d6 0100     		.2byte	0x1
 5199 03d8 51       		.byte	0x51
 5200 03d9 24000000 		.4byte	.LVL79
 5201 03dd C2000000 		.4byte	.LVL112
 5202 03e1 0100     		.2byte	0x1
 5203 03e3 5A       		.byte	0x5a
 5204 03e4 C2000000 		.4byte	.LVL112
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 145


 5205 03e8 CC000000 		.4byte	.LFE18
 5206 03ec 0400     		.2byte	0x4
 5207 03ee F3       		.byte	0xf3
 5208 03ef 01       		.uleb128 0x1
 5209 03f0 51       		.byte	0x51
 5210 03f1 9F       		.byte	0x9f
 5211 03f2 00000000 		.4byte	0
 5212 03f6 00000000 		.4byte	0
 5213              	.LLST23:
 5214 03fa 32000000 		.4byte	.LVL82
 5215 03fe 38000000 		.4byte	.LVL83
 5216 0402 0200     		.2byte	0x2
 5217 0404 30       		.byte	0x30
 5218 0405 9F       		.byte	0x9f
 5219 0406 38000000 		.4byte	.LVL83
 5220 040a 59000000 		.4byte	.LVL92-1
 5221 040e 0100     		.2byte	0x1
 5222 0410 52       		.byte	0x52
 5223 0411 74000000 		.4byte	.LVL97
 5224 0415 78000000 		.4byte	.LVL98
 5225 0419 0200     		.2byte	0x2
 5226 041b 30       		.byte	0x30
 5227 041c 9F       		.byte	0x9f
 5228 041d 78000000 		.4byte	.LVL98
 5229 0421 BA000000 		.4byte	.LVL108
 5230 0425 0100     		.2byte	0x1
 5231 0427 56       		.byte	0x56
 5232 0428 00000000 		.4byte	0
 5233 042c 00000000 		.4byte	0
 5234              	.LLST24:
 5235 0430 20000000 		.4byte	.LVL77
 5236 0434 24000000 		.4byte	.LVL79
 5237 0438 0200     		.2byte	0x2
 5238 043a 31       		.byte	0x31
 5239 043b 9F       		.byte	0x9f
 5240 043c 24000000 		.4byte	.LVL79
 5241 0440 BA000000 		.4byte	.LVL108
 5242 0444 0100     		.2byte	0x1
 5243 0446 55       		.byte	0x55
 5244 0447 BA000000 		.4byte	.LVL108
 5245 044b BC000000 		.4byte	.LVL109
 5246 044f 0100     		.2byte	0x1
 5247 0451 53       		.byte	0x53
 5248 0452 BC000000 		.4byte	.LVL109
 5249 0456 C2000000 		.4byte	.LVL110
 5250 045a 0100     		.2byte	0x1
 5251 045c 55       		.byte	0x55
 5252 045d C2000000 		.4byte	.LVL110
 5253 0461 CC000000 		.4byte	.LFE18
 5254 0465 0300     		.2byte	0x3
 5255 0467 73       		.byte	0x73
 5256 0468 7F       		.sleb128 -1
 5257 0469 9F       		.byte	0x9f
 5258 046a 00000000 		.4byte	0
 5259 046e 00000000 		.4byte	0
 5260              	.LLST25:
 5261 0472 2C000000 		.4byte	.LVL80
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 146


 5262 0476 2E000000 		.4byte	.LVL81
 5263 047a 0100     		.2byte	0x1
 5264 047c 53       		.byte	0x53
 5265 047d 2E000000 		.4byte	.LVL81
 5266 0481 6A000000 		.4byte	.LVL96
 5267 0485 0100     		.2byte	0x1
 5268 0487 59       		.byte	0x59
 5269 0488 00000000 		.4byte	0
 5270 048c 00000000 		.4byte	0
 5271              	.LLST26:
 5272 0490 2C000000 		.4byte	.LVL80
 5273 0494 2E000000 		.4byte	.LVL81
 5274 0498 0100     		.2byte	0x1
 5275 049a 53       		.byte	0x53
 5276 049b 2E000000 		.4byte	.LVL81
 5277 049f 38000000 		.4byte	.LVL83
 5278 04a3 0100     		.2byte	0x1
 5279 04a5 59       		.byte	0x59
 5280 04a6 38000000 		.4byte	.LVL83
 5281 04aa 40000000 		.4byte	.LVL84
 5282 04ae 0100     		.2byte	0x1
 5283 04b0 54       		.byte	0x54
 5284 04b1 40000000 		.4byte	.LVL84
 5285 04b5 46000000 		.4byte	.LVL87
 5286 04b9 0100     		.2byte	0x1
 5287 04bb 51       		.byte	0x51
 5288 04bc 46000000 		.4byte	.LVL87
 5289 04c0 74000000 		.4byte	.LVL97
 5290 04c4 0100     		.2byte	0x1
 5291 04c6 54       		.byte	0x54
 5292 04c7 00000000 		.4byte	0
 5293 04cb 00000000 		.4byte	0
 5294              	.LLST27:
 5295 04cf 32000000 		.4byte	.LVL82
 5296 04d3 42000000 		.4byte	.LVL85
 5297 04d7 0100     		.2byte	0x1
 5298 04d9 50       		.byte	0x50
 5299 04da 44000000 		.4byte	.LVL86
 5300 04de 54000000 		.4byte	.LVL91
 5301 04e2 0100     		.2byte	0x1
 5302 04e4 50       		.byte	0x50
 5303 04e5 00000000 		.4byte	0
 5304 04e9 00000000 		.4byte	0
 5305              	.LLST28:
 5306 04ed 20000000 		.4byte	.LVL77
 5307 04f1 22000000 		.4byte	.LVL78
 5308 04f5 0100     		.2byte	0x1
 5309 04f7 53       		.byte	0x53
 5310 04f8 22000000 		.4byte	.LVL78
 5311 04fc CC000000 		.4byte	.LFE18
 5312 0500 0200     		.2byte	0x2
 5313 0502 91       		.byte	0x91
 5314 0503 5C       		.sleb128 -36
 5315 0504 00000000 		.4byte	0
 5316 0508 00000000 		.4byte	0
 5317              	.LLST29:
 5318 050c 5C000000 		.4byte	.LVL93
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 147


 5319 0510 5E000000 		.4byte	.LVL94
 5320 0514 0100     		.2byte	0x1
 5321 0516 50       		.byte	0x50
 5322 0517 8E000000 		.4byte	.LVL100
 5323 051b A2000000 		.4byte	.LVL104
 5324 051f 0100     		.2byte	0x1
 5325 0521 50       		.byte	0x50
 5326 0522 00000000 		.4byte	0
 5327 0526 00000000 		.4byte	0
 5328              	.LLST30:
 5329 052a 64000000 		.4byte	.LVL95
 5330 052e 6A000000 		.4byte	.LVL96
 5331 0532 0100     		.2byte	0x1
 5332 0534 50       		.byte	0x50
 5333 0535 6A000000 		.4byte	.LVL96
 5334 0539 98000000 		.4byte	.LVL101
 5335 053d 0100     		.2byte	0x1
 5336 053f 59       		.byte	0x59
 5337 0540 98000000 		.4byte	.LVL101
 5338 0544 9C000000 		.4byte	.LVL102
 5339 0548 0100     		.2byte	0x1
 5340 054a 52       		.byte	0x52
 5341 054b 9C000000 		.4byte	.LVL102
 5342 054f A0000000 		.4byte	.LVL103
 5343 0553 0100     		.2byte	0x1
 5344 0555 59       		.byte	0x59
 5345 0556 A0000000 		.4byte	.LVL103
 5346 055a A9000000 		.4byte	.LVL105-1
 5347 055e 0100     		.2byte	0x1
 5348 0560 52       		.byte	0x52
 5349 0561 A9000000 		.4byte	.LVL105-1
 5350 0565 BA000000 		.4byte	.LVL108
 5351 0569 0100     		.2byte	0x1
 5352 056b 59       		.byte	0x59
 5353 056c 00000000 		.4byte	0
 5354 0570 00000000 		.4byte	0
 5355              	.LLST31:
 5356 0574 14000000 		.4byte	.LVL75
 5357 0578 16000000 		.4byte	.LVL76
 5358 057c 0100     		.2byte	0x1
 5359 057e 53       		.byte	0x53
 5360 057f 16000000 		.4byte	.LVL76
 5361 0583 C2000000 		.4byte	.LVL113
 5362 0587 0100     		.2byte	0x1
 5363 0589 5B       		.byte	0x5b
 5364 058a 00000000 		.4byte	0
 5365 058e 00000000 		.4byte	0
 5366              	.LLST32:
 5367 0592 2E000000 		.4byte	.LVL81
 5368 0596 52000000 		.4byte	.LVL90
 5369 059a 0100     		.2byte	0x1
 5370 059c 53       		.byte	0x53
 5371 059d 74000000 		.4byte	.LVL97
 5372 05a1 BA000000 		.4byte	.LVL108
 5373 05a5 0100     		.2byte	0x1
 5374 05a7 54       		.byte	0x54
 5375 05a8 00000000 		.4byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 148


 5376 05ac 00000000 		.4byte	0
 5377              	.LLST33:
 5378 05b0 00000000 		.4byte	.LVL114
 5379 05b4 0C000000 		.4byte	.LVL115
 5380 05b8 0100     		.2byte	0x1
 5381 05ba 50       		.byte	0x50
 5382 05bb 0C000000 		.4byte	.LVL115
 5383 05bf 1C000000 		.4byte	.LFE0
 5384 05c3 0400     		.2byte	0x4
 5385 05c5 F3       		.byte	0xf3
 5386 05c6 01       		.uleb128 0x1
 5387 05c7 50       		.byte	0x50
 5388 05c8 9F       		.byte	0x9f
 5389 05c9 00000000 		.4byte	0
 5390 05cd 00000000 		.4byte	0
 5391              	.LLST34:
 5392 05d1 00000000 		.4byte	.LVL114
 5393 05d5 13000000 		.4byte	.LVL116-1
 5394 05d9 0100     		.2byte	0x1
 5395 05db 51       		.byte	0x51
 5396 05dc 13000000 		.4byte	.LVL116-1
 5397 05e0 1C000000 		.4byte	.LFE0
 5398 05e4 0400     		.2byte	0x4
 5399 05e6 F3       		.byte	0xf3
 5400 05e7 01       		.uleb128 0x1
 5401 05e8 51       		.byte	0x51
 5402 05e9 9F       		.byte	0x9f
 5403 05ea 00000000 		.4byte	0
 5404 05ee 00000000 		.4byte	0
 5405              	.LLST35:
 5406 05f2 00000000 		.4byte	.LVL120
 5407 05f6 0C000000 		.4byte	.LVL122
 5408 05fa 0100     		.2byte	0x1
 5409 05fc 50       		.byte	0x50
 5410 05fd 0C000000 		.4byte	.LVL122
 5411 0601 11000000 		.4byte	.LVL124-1
 5412 0605 0300     		.2byte	0x3
 5413 0607 70       		.byte	0x70
 5414 0608 77       		.sleb128 -9
 5415 0609 9F       		.byte	0x9f
 5416 060a 11000000 		.4byte	.LVL124-1
 5417 060e 20000000 		.4byte	.LVL127
 5418 0612 0300     		.2byte	0x3
 5419 0614 75       		.byte	0x75
 5420 0615 77       		.sleb128 -9
 5421 0616 9F       		.byte	0x9f
 5422 0617 20000000 		.4byte	.LVL127
 5423 061b 50000000 		.4byte	.LFE4
 5424 061f 0400     		.2byte	0x4
 5425 0621 F3       		.byte	0xf3
 5426 0622 01       		.uleb128 0x1
 5427 0623 50       		.byte	0x50
 5428 0624 9F       		.byte	0x9f
 5429 0625 00000000 		.4byte	0
 5430 0629 00000000 		.4byte	0
 5431              	.LLST36:
 5432 062d 12000000 		.4byte	.LVL124
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 149


 5433 0631 39000000 		.4byte	.LVL132-1
 5434 0635 0100     		.2byte	0x1
 5435 0637 50       		.byte	0x50
 5436 0638 00000000 		.4byte	0
 5437 063c 00000000 		.4byte	0
 5438              	.LLST37:
 5439 0640 0A000000 		.4byte	.LVL121
 5440 0644 32000000 		.4byte	.LVL130
 5441 0648 0100     		.2byte	0x1
 5442 064a 54       		.byte	0x54
 5443 064b 00000000 		.4byte	0
 5444 064f 00000000 		.4byte	0
 5445              	.LLST38:
 5446 0653 16000000 		.4byte	.LVL125
 5447 0657 1A000000 		.4byte	.LVL126
 5448 065b 0100     		.2byte	0x1
 5449 065d 52       		.byte	0x52
 5450 065e 1A000000 		.4byte	.LVL126
 5451 0662 39000000 		.4byte	.LVL132-1
 5452 0666 0100     		.2byte	0x1
 5453 0668 53       		.byte	0x53
 5454 0669 00000000 		.4byte	0
 5455 066d 00000000 		.4byte	0
 5456              	.LLST39:
 5457 0671 0E000000 		.4byte	.LVL123
 5458 0675 11000000 		.4byte	.LVL124-1
 5459 0679 0100     		.2byte	0x1
 5460 067b 50       		.byte	0x50
 5461 067c 11000000 		.4byte	.LVL124-1
 5462 0680 20000000 		.4byte	.LVL127
 5463 0684 0100     		.2byte	0x1
 5464 0686 55       		.byte	0x55
 5465 0687 20000000 		.4byte	.LVL127
 5466 068b 50000000 		.4byte	.LFE4
 5467 068f 0600     		.2byte	0x6
 5468 0691 F3       		.byte	0xf3
 5469 0692 01       		.uleb128 0x1
 5470 0693 50       		.byte	0x50
 5471 0694 23       		.byte	0x23
 5472 0695 09       		.uleb128 0x9
 5473 0696 9F       		.byte	0x9f
 5474 0697 00000000 		.4byte	0
 5475 069b 00000000 		.4byte	0
 5476              	.LLST40:
 5477 069f 10000000 		.4byte	.LVL134
 5478 06a3 15000000 		.4byte	.LVL136-1
 5479 06a7 0100     		.2byte	0x1
 5480 06a9 51       		.byte	0x51
 5481 06aa 00000000 		.4byte	0
 5482 06ae 00000000 		.4byte	0
 5483              	.LLST41:
 5484 06b2 12000000 		.4byte	.LVL135
 5485 06b6 15000000 		.4byte	.LVL136-1
 5486 06ba 0100     		.2byte	0x1
 5487 06bc 50       		.byte	0x50
 5488 06bd 00000000 		.4byte	0
 5489 06c1 00000000 		.4byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 150


 5490              	.LLST43:
 5491 06c5 0E000000 		.4byte	.LVL133
 5492 06c9 15000000 		.4byte	.LVL136-1
 5493 06cd 0100     		.2byte	0x1
 5494 06cf 53       		.byte	0x53
 5495 06d0 00000000 		.4byte	0
 5496 06d4 00000000 		.4byte	0
 5497              	.LLST44:
 5498 06d8 08000000 		.4byte	.LVL139
 5499 06dc 7E000000 		.4byte	.LVL155
 5500 06e0 0100     		.2byte	0x1
 5501 06e2 54       		.byte	0x54
 5502 06e3 00000000 		.4byte	0
 5503 06e7 00000000 		.4byte	0
 5504              	.LLST45:
 5505 06eb 34000000 		.4byte	.LVL141
 5506 06ef 5C000000 		.4byte	.LVL150
 5507 06f3 0100     		.2byte	0x1
 5508 06f5 55       		.byte	0x55
 5509 06f6 5C000000 		.4byte	.LVL150
 5510 06fa 66000000 		.4byte	.LVL151
 5511 06fe 0200     		.2byte	0x2
 5512 0700 76       		.byte	0x76
 5513 0701 00       		.sleb128 0
 5514 0702 00000000 		.4byte	0
 5515 0706 00000000 		.4byte	0
 5516              	.LLST46:
 5517 070a 42000000 		.4byte	.LVL143
 5518 070e 46000000 		.4byte	.LVL145
 5519 0712 0100     		.2byte	0x1
 5520 0714 53       		.byte	0x53
 5521 0715 46000000 		.4byte	.LVL145
 5522 0719 5A000000 		.4byte	.LVL149
 5523 071d 0200     		.2byte	0x2
 5524 071f 76       		.byte	0x76
 5525 0720 00       		.sleb128 0
 5526 0721 5A000000 		.4byte	.LVL149
 5527 0725 5C000000 		.4byte	.LVL150
 5528 0729 1000     		.2byte	0x10
 5529 072b 75       		.byte	0x75
 5530 072c 00       		.sleb128 0
 5531 072d 11       		.byte	0x11
 5532 072e 80D0FFFF 		.sleb128 -1073747968
 5532      7B
 5533 0733 1A       		.byte	0x1a
 5534 0734 0C       		.byte	0xc
 5535 0735 F0060040 		.4byte	0x400006f0
 5536 0739 21       		.byte	0x21
 5537 073a 9F       		.byte	0x9f
 5538 073b 5C000000 		.4byte	.LVL150
 5539 073f 66000000 		.4byte	.LVL151
 5540 0743 1100     		.2byte	0x11
 5541 0745 76       		.byte	0x76
 5542 0746 00       		.sleb128 0
 5543 0747 06       		.byte	0x6
 5544 0748 11       		.byte	0x11
 5545 0749 80D0FFFF 		.sleb128 -1073747968
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 151


 5545      7B
 5546 074e 1A       		.byte	0x1a
 5547 074f 0C       		.byte	0xc
 5548 0750 F0060040 		.4byte	0x400006f0
 5549 0754 21       		.byte	0x21
 5550 0755 9F       		.byte	0x9f
 5551 0756 00000000 		.4byte	0
 5552 075a 00000000 		.4byte	0
 5553              	.LLST47:
 5554 075e 44000000 		.4byte	.LVL144
 5555 0762 48000000 		.4byte	.LVL146
 5556 0766 0300     		.2byte	0x3
 5557 0768 08       		.byte	0x8
 5558 0769 F0       		.byte	0xf0
 5559 076a 9F       		.byte	0x9f
 5560 076b 48000000 		.4byte	.LVL146
 5561 076f 58000000 		.4byte	.LVL148
 5562 0773 0100     		.2byte	0x1
 5563 0775 53       		.byte	0x53
 5564 0776 00000000 		.4byte	0
 5565 077a 00000000 		.4byte	0
 5566              	.LLST48:
 5567 077e 00000000 		.4byte	.LVL157
 5568 0782 0B000000 		.4byte	.LVL160-1
 5569 0786 0100     		.2byte	0x1
 5570 0788 50       		.byte	0x50
 5571 0789 0B000000 		.4byte	.LVL160-1
 5572 078d 32000000 		.4byte	.LVL167
 5573 0791 0100     		.2byte	0x1
 5574 0793 54       		.byte	0x54
 5575 0794 32000000 		.4byte	.LVL167
 5576 0798 34000000 		.4byte	.LFE14
 5577 079c 0400     		.2byte	0x4
 5578 079e F3       		.byte	0xf3
 5579 079f 01       		.uleb128 0x1
 5580 07a0 50       		.byte	0x50
 5581 07a1 9F       		.byte	0x9f
 5582 07a2 00000000 		.4byte	0
 5583 07a6 00000000 		.4byte	0
 5584              	.LLST49:
 5585 07aa 10000000 		.4byte	.LVL161
 5586 07ae 16000000 		.4byte	.LVL162
 5587 07b2 0100     		.2byte	0x1
 5588 07b4 53       		.byte	0x53
 5589 07b5 18000000 		.4byte	.LVL163
 5590 07b9 1E000000 		.4byte	.LVL164
 5591 07bd 0100     		.2byte	0x1
 5592 07bf 52       		.byte	0x52
 5593 07c0 1E000000 		.4byte	.LVL164
 5594 07c4 31000000 		.4byte	.LVL166-1
 5595 07c8 0100     		.2byte	0x1
 5596 07ca 53       		.byte	0x53
 5597 07cb 00000000 		.4byte	0
 5598 07cf 00000000 		.4byte	0
 5599              	.LLST50:
 5600 07d3 0C000000 		.4byte	.LVL160
 5601 07d7 31000000 		.4byte	.LVL166-1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 152


 5602 07db 0100     		.2byte	0x1
 5603 07dd 50       		.byte	0x50
 5604 07de 00000000 		.4byte	0
 5605 07e2 00000000 		.4byte	0
 5606              	.LLST51:
 5607 07e6 06000000 		.4byte	.LVL158
 5608 07ea 32000000 		.4byte	.LVL168
 5609 07ee 0100     		.2byte	0x1
 5610 07f0 55       		.byte	0x55
 5611 07f1 00000000 		.4byte	0
 5612 07f5 00000000 		.4byte	0
 5613              	.LLST52:
 5614 07f9 08000000 		.4byte	.LVL159
 5615 07fd 20000000 		.4byte	.LVL165
 5616 0801 0100     		.2byte	0x1
 5617 0803 56       		.byte	0x56
 5618 0804 00000000 		.4byte	0
 5619 0808 00000000 		.4byte	0
 5620              	.LLST53:
 5621 080c 0E000000 		.4byte	.LVL169
 5622 0810 76000000 		.4byte	.LVL175
 5623 0814 0100     		.2byte	0x1
 5624 0816 57       		.byte	0x57
 5625 0817 00000000 		.4byte	0
 5626 081b 00000000 		.4byte	0
 5627              	.LLST54:
 5628 081f 00000000 		.4byte	.LVL176
 5629 0823 04000000 		.4byte	.LVL177
 5630 0827 0100     		.2byte	0x1
 5631 0829 50       		.byte	0x50
 5632 082a 04000000 		.4byte	.LVL177
 5633 082e 24000000 		.4byte	.LFE12
 5634 0832 0400     		.2byte	0x4
 5635 0834 F3       		.byte	0xf3
 5636 0835 01       		.uleb128 0x1
 5637 0836 50       		.byte	0x50
 5638 0837 9F       		.byte	0x9f
 5639 0838 00000000 		.4byte	0
 5640 083c 00000000 		.4byte	0
 5641              	.LLST55:
 5642 0840 00000000 		.4byte	.LVL176
 5643 0844 0C000000 		.4byte	.LVL178
 5644 0848 0100     		.2byte	0x1
 5645 084a 51       		.byte	0x51
 5646 084b 0C000000 		.4byte	.LVL178
 5647 084f 24000000 		.4byte	.LFE12
 5648 0853 0400     		.2byte	0x4
 5649 0855 F3       		.byte	0xf3
 5650 0856 01       		.uleb128 0x1
 5651 0857 51       		.byte	0x51
 5652 0858 9F       		.byte	0x9f
 5653 0859 00000000 		.4byte	0
 5654 085d 00000000 		.4byte	0
 5655              	.LLST56:
 5656 0861 00000000 		.4byte	.LVL180
 5657 0865 0B000000 		.4byte	.LVL183-1
 5658 0869 0100     		.2byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 153


 5659 086b 50       		.byte	0x50
 5660 086c 0B000000 		.4byte	.LVL183-1
 5661 0870 50000000 		.4byte	.LVL194
 5662 0874 0100     		.2byte	0x1
 5663 0876 54       		.byte	0x54
 5664 0877 50000000 		.4byte	.LVL194
 5665 087b 64000000 		.4byte	.LFE15
 5666 087f 0400     		.2byte	0x4
 5667 0881 F3       		.byte	0xf3
 5668 0882 01       		.uleb128 0x1
 5669 0883 50       		.byte	0x50
 5670 0884 9F       		.byte	0x9f
 5671 0885 00000000 		.4byte	0
 5672 0889 00000000 		.4byte	0
 5673              	.LLST57:
 5674 088d 0C000000 		.4byte	.LVL183
 5675 0891 5B000000 		.4byte	.LVL195-1
 5676 0895 0100     		.2byte	0x1
 5677 0897 50       		.byte	0x50
 5678 0898 00000000 		.4byte	0
 5679 089c 00000000 		.4byte	0
 5680              	.LLST58:
 5681 08a0 06000000 		.4byte	.LVL181
 5682 08a4 5C000000 		.4byte	.LVL197
 5683 08a8 0100     		.2byte	0x1
 5684 08aa 56       		.byte	0x56
 5685 08ab 00000000 		.4byte	0
 5686 08af 00000000 		.4byte	0
 5687              	.LLST59:
 5688 08b3 08000000 		.4byte	.LVL182
 5689 08b7 5C000000 		.4byte	.LVL196
 5690 08bb 0100     		.2byte	0x1
 5691 08bd 55       		.byte	0x55
 5692 08be 00000000 		.4byte	0
 5693 08c2 00000000 		.4byte	0
 5694              	.LLST60:
 5695 08c6 10000000 		.4byte	.LVL184
 5696 08ca 4C000000 		.4byte	.LVL193
 5697 08ce 0100     		.2byte	0x1
 5698 08d0 51       		.byte	0x51
 5699 08d1 00000000 		.4byte	0
 5700 08d5 00000000 		.4byte	0
 5701              	.LLST61:
 5702 08d9 1A000000 		.4byte	.LVL186
 5703 08dd 2E000000 		.4byte	.LVL188
 5704 08e1 0100     		.2byte	0x1
 5705 08e3 53       		.byte	0x53
 5706 08e4 38000000 		.4byte	.LVL190
 5707 08e8 4A000000 		.4byte	.LVL192
 5708 08ec 0100     		.2byte	0x1
 5709 08ee 53       		.byte	0x53
 5710 08ef 00000000 		.4byte	0
 5711 08f3 00000000 		.4byte	0
 5712              	.LLST62:
 5713 08f7 00000000 		.4byte	.LVL199
 5714 08fb 0C000000 		.4byte	.LVL201
 5715 08ff 0100     		.2byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 154


 5716 0901 50       		.byte	0x50
 5717 0902 0C000000 		.4byte	.LVL201
 5718 0906 54000000 		.4byte	.LFE7
 5719 090a 0400     		.2byte	0x4
 5720 090c F3       		.byte	0xf3
 5721 090d 01       		.uleb128 0x1
 5722 090e 50       		.byte	0x50
 5723 090f 9F       		.byte	0x9f
 5724 0910 00000000 		.4byte	0
 5725 0914 00000000 		.4byte	0
 5726              	.LLST63:
 5727 0918 0A000000 		.4byte	.LVL200
 5728 091c 40000000 		.4byte	.LVL206
 5729 0920 0100     		.2byte	0x1
 5730 0922 55       		.byte	0x55
 5731 0923 40000000 		.4byte	.LVL206
 5732 0927 40000000 		.4byte	.LVL207
 5733 092b 0A00     		.2byte	0xa
 5734 092d F3       		.byte	0xf3
 5735 092e 01       		.uleb128 0x1
 5736 092f 50       		.byte	0x50
 5737 0930 35       		.byte	0x35
 5738 0931 24       		.byte	0x24
 5739 0932 76       		.byte	0x76
 5740 0933 00       		.sleb128 0
 5741 0934 22       		.byte	0x22
 5742 0935 23       		.byte	0x23
 5743 0936 04       		.uleb128 0x4
 5744 0937 00000000 		.4byte	0
 5745 093b 00000000 		.4byte	0
 5746              	.LLST64:
 5747 093f 00000000 		.4byte	.LVL208
 5748 0943 25000000 		.4byte	.LVL211-1
 5749 0947 0100     		.2byte	0x1
 5750 0949 50       		.byte	0x50
 5751 094a 25000000 		.4byte	.LVL211-1
 5752 094e 6C000000 		.4byte	.LFE8
 5753 0952 0400     		.2byte	0x4
 5754 0954 F3       		.byte	0xf3
 5755 0955 01       		.uleb128 0x1
 5756 0956 50       		.byte	0x50
 5757 0957 9F       		.byte	0x9f
 5758 0958 00000000 		.4byte	0
 5759 095c 00000000 		.4byte	0
 5760              	.LLST65:
 5761 0960 00000000 		.4byte	.LVL208
 5762 0964 0C000000 		.4byte	.LVL210
 5763 0968 0100     		.2byte	0x1
 5764 096a 51       		.byte	0x51
 5765 096b 0C000000 		.4byte	.LVL210
 5766 096f 6C000000 		.4byte	.LFE8
 5767 0973 0400     		.2byte	0x4
 5768 0975 F3       		.byte	0xf3
 5769 0976 01       		.uleb128 0x1
 5770 0977 51       		.byte	0x51
 5771 0978 9F       		.byte	0x9f
 5772 0979 00000000 		.4byte	0
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 155


 5773 097d 00000000 		.4byte	0
 5774              	.LLST66:
 5775 0981 0A000000 		.4byte	.LVL209
 5776 0985 50000000 		.4byte	.LVL215
 5777 0989 0100     		.2byte	0x1
 5778 098b 55       		.byte	0x55
 5779 098c 00000000 		.4byte	0
 5780 0990 00000000 		.4byte	0
 5781              	.LLST67:
 5782 0994 00000000 		.4byte	.LVL216
 5783 0998 1C000000 		.4byte	.LVL223
 5784 099c 0100     		.2byte	0x1
 5785 099e 50       		.byte	0x50
 5786 099f 1C000000 		.4byte	.LVL223
 5787 09a3 58010000 		.4byte	.LFE19
 5788 09a7 0200     		.2byte	0x2
 5789 09a9 91       		.byte	0x91
 5790 09aa 5C       		.sleb128 -36
 5791 09ab 00000000 		.4byte	0
 5792 09af 00000000 		.4byte	0
 5793              	.LLST68:
 5794 09b3 00000000 		.4byte	.LVL216
 5795 09b7 36000000 		.4byte	.LVL228
 5796 09bb 0100     		.2byte	0x1
 5797 09bd 51       		.byte	0x51
 5798 09be 36000000 		.4byte	.LVL228
 5799 09c2 58010000 		.4byte	.LFE19
 5800 09c6 0400     		.2byte	0x4
 5801 09c8 F3       		.byte	0xf3
 5802 09c9 01       		.uleb128 0x1
 5803 09ca 51       		.byte	0x51
 5804 09cb 9F       		.byte	0x9f
 5805 09cc 00000000 		.4byte	0
 5806 09d0 00000000 		.4byte	0
 5807              	.LLST69:
 5808 09d4 40000000 		.4byte	.LVL230
 5809 09d8 46000000 		.4byte	.LVL231
 5810 09dc 0200     		.2byte	0x2
 5811 09de 30       		.byte	0x30
 5812 09df 9F       		.byte	0x9f
 5813 09e0 46000000 		.4byte	.LVL231
 5814 09e4 4C000000 		.4byte	.LVL232
 5815 09e8 0100     		.2byte	0x1
 5816 09ea 52       		.byte	0x52
 5817 09eb 4C000000 		.4byte	.LVL232
 5818 09ef 46010000 		.4byte	.LVL266
 5819 09f3 0200     		.2byte	0x2
 5820 09f5 7D       		.byte	0x7d
 5821 09f6 00       		.sleb128 0
 5822 09f7 46010000 		.4byte	.LVL266
 5823 09fb 58010000 		.4byte	.LFE19
 5824 09ff 0200     		.2byte	0x2
 5825 0a01 91       		.byte	0x91
 5826 0a02 58       		.sleb128 -40
 5827 0a03 00000000 		.4byte	0
 5828 0a07 00000000 		.4byte	0
 5829              	.LLST70:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 156


 5830 0a0b 18000000 		.4byte	.LVL221
 5831 0a0f 1C000000 		.4byte	.LVL223
 5832 0a13 0200     		.2byte	0x2
 5833 0a15 31       		.byte	0x31
 5834 0a16 9F       		.byte	0x9f
 5835 0a17 1C000000 		.4byte	.LVL223
 5836 0a1b 24000000 		.4byte	.LVL225
 5837 0a1f 0100     		.2byte	0x1
 5838 0a21 52       		.byte	0x52
 5839 0a22 24000000 		.4byte	.LVL225
 5840 0a26 26000000 		.4byte	.LVL226
 5841 0a2a 0100     		.2byte	0x1
 5842 0a2c 53       		.byte	0x53
 5843 0a2d 26000000 		.4byte	.LVL226
 5844 0a31 2E000000 		.4byte	.LVL227
 5845 0a35 0100     		.2byte	0x1
 5846 0a37 52       		.byte	0x52
 5847 0a38 5C000000 		.4byte	.LVL233
 5848 0a3c 60000000 		.4byte	.LVL234
 5849 0a40 0200     		.2byte	0x2
 5850 0a42 31       		.byte	0x31
 5851 0a43 9F       		.byte	0x9f
 5852 0a44 60000000 		.4byte	.LVL234
 5853 0a48 6A000000 		.4byte	.LVL235
 5854 0a4c 0100     		.2byte	0x1
 5855 0a4e 52       		.byte	0x52
 5856 0a4f 6A000000 		.4byte	.LVL235
 5857 0a53 6C000000 		.4byte	.LVL236
 5858 0a57 0100     		.2byte	0x1
 5859 0a59 53       		.byte	0x53
 5860 0a5a 6C000000 		.4byte	.LVL236
 5861 0a5e 79000000 		.4byte	.LVL238-1
 5862 0a62 0100     		.2byte	0x1
 5863 0a64 52       		.byte	0x52
 5864 0a65 94000000 		.4byte	.LVL243
 5865 0a69 A8000000 		.4byte	.LVL244
 5866 0a6d 0100     		.2byte	0x1
 5867 0a6f 52       		.byte	0x52
 5868 0a70 AA000000 		.4byte	.LVL245
 5869 0a74 AC000000 		.4byte	.LVL246
 5870 0a78 0100     		.2byte	0x1
 5871 0a7a 53       		.byte	0x53
 5872 0a7b AC000000 		.4byte	.LVL246
 5873 0a7f B2000000 		.4byte	.LVL247
 5874 0a83 0100     		.2byte	0x1
 5875 0a85 52       		.byte	0x52
 5876 0a86 B2000000 		.4byte	.LVL247
 5877 0a8a B6000000 		.4byte	.LVL248
 5878 0a8e 0200     		.2byte	0x2
 5879 0a90 31       		.byte	0x31
 5880 0a91 9F       		.byte	0x9f
 5881 0a92 B6000000 		.4byte	.LVL248
 5882 0a96 D6000000 		.4byte	.LVL249
 5883 0a9a 0100     		.2byte	0x1
 5884 0a9c 52       		.byte	0x52
 5885 0a9d D6000000 		.4byte	.LVL249
 5886 0aa1 D8000000 		.4byte	.LVL250
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 157


 5887 0aa5 0100     		.2byte	0x1
 5888 0aa7 53       		.byte	0x53
 5889 0aa8 D8000000 		.4byte	.LVL250
 5890 0aac F4000000 		.4byte	.LVL253
 5891 0ab0 0100     		.2byte	0x1
 5892 0ab2 52       		.byte	0x52
 5893 0ab3 F4000000 		.4byte	.LVL253
 5894 0ab7 F6000000 		.4byte	.LVL254
 5895 0abb 0100     		.2byte	0x1
 5896 0abd 53       		.byte	0x53
 5897 0abe F6000000 		.4byte	.LVL254
 5898 0ac2 01010000 		.4byte	.LVL255-1
 5899 0ac6 0100     		.2byte	0x1
 5900 0ac8 52       		.byte	0x52
 5901 0ac9 32010000 		.4byte	.LVL261
 5902 0acd 3E010000 		.4byte	.LVL264
 5903 0ad1 0100     		.2byte	0x1
 5904 0ad3 52       		.byte	0x52
 5905 0ad4 3E010000 		.4byte	.LVL264
 5906 0ad8 40010000 		.4byte	.LVL265
 5907 0adc 0100     		.2byte	0x1
 5908 0ade 53       		.byte	0x53
 5909 0adf 40010000 		.4byte	.LVL265
 5910 0ae3 58010000 		.4byte	.LFE19
 5911 0ae7 0100     		.2byte	0x1
 5912 0ae9 52       		.byte	0x52
 5913 0aea 00000000 		.4byte	0
 5914 0aee 00000000 		.4byte	0
 5915              	.LLST71:
 5916 0af2 5C000000 		.4byte	.LVL233
 5917 0af6 72000000 		.4byte	.LVL237
 5918 0afa 0300     		.2byte	0x3
 5919 0afc 08       		.byte	0x8
 5920 0afd 40       		.byte	0x40
 5921 0afe 9F       		.byte	0x9f
 5922 0aff 72000000 		.4byte	.LVL237
 5923 0b03 1E010000 		.4byte	.LVL260
 5924 0b07 0100     		.2byte	0x1
 5925 0b09 54       		.byte	0x54
 5926 0b0a 00000000 		.4byte	0
 5927 0b0e 00000000 		.4byte	0
 5928              	.LLST72:
 5929 0b12 40000000 		.4byte	.LVL230
 5930 0b16 46000000 		.4byte	.LVL231
 5931 0b1a 0100     		.2byte	0x1
 5932 0b1c 50       		.byte	0x50
 5933 0b1d 46000000 		.4byte	.LVL231
 5934 0b21 46010000 		.4byte	.LVL268
 5935 0b25 0100     		.2byte	0x1
 5936 0b27 56       		.byte	0x56
 5937 0b28 00000000 		.4byte	0
 5938 0b2c 00000000 		.4byte	0
 5939              	.LLST73:
 5940 0b30 7E000000 		.4byte	.LVL239
 5941 0b34 82000000 		.4byte	.LVL240
 5942 0b38 0600     		.2byte	0x6
 5943 0b3a 0C       		.byte	0xc
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 158


 5944 0b3b 00A60E00 		.4byte	0xea600
 5945 0b3f 9F       		.byte	0x9f
 5946 0b40 82000000 		.4byte	.LVL240
 5947 0b44 92000000 		.4byte	.LVL242
 5948 0b48 0100     		.2byte	0x1
 5949 0b4a 53       		.byte	0x53
 5950 0b4b 92000000 		.4byte	.LVL242
 5951 0b4f 94000000 		.4byte	.LVL243
 5952 0b53 0300     		.2byte	0x3
 5953 0b55 73       		.byte	0x73
 5954 0b56 7F       		.sleb128 -1
 5955 0b57 9F       		.byte	0x9f
 5956 0b58 A8000000 		.4byte	.LVL244
 5957 0b5c AA000000 		.4byte	.LVL245
 5958 0b60 0100     		.2byte	0x1
 5959 0b62 53       		.byte	0x53
 5960 0b63 06010000 		.4byte	.LVL256
 5961 0b67 0A010000 		.4byte	.LVL257
 5962 0b6b 0600     		.2byte	0x6
 5963 0b6d 0C       		.byte	0xc
 5964 0b6e 00A60E00 		.4byte	0xea600
 5965 0b72 9F       		.byte	0x9f
 5966 0b73 0A010000 		.4byte	.LVL257
 5967 0b77 1A010000 		.4byte	.LVL259
 5968 0b7b 0100     		.2byte	0x1
 5969 0b7d 53       		.byte	0x53
 5970 0b7e 00000000 		.4byte	0
 5971 0b82 00000000 		.4byte	0
 5972              	.LLST74:
 5973 0b86 18000000 		.4byte	.LVL221
 5974 0b8a 46010000 		.4byte	.LVL267
 5975 0b8e 0100     		.2byte	0x1
 5976 0b90 55       		.byte	0x55
 5977 0b91 46010000 		.4byte	.LVL267
 5978 0b95 46010000 		.4byte	.LVL269
 5979 0b99 0300     		.2byte	0x3
 5980 0b9b 7A       		.byte	0x7a
 5981 0b9c 09       		.sleb128 9
 5982 0b9d 9F       		.byte	0x9f
 5983 0b9e 00000000 		.4byte	0
 5984 0ba2 00000000 		.4byte	0
 5985              	.LLST75:
 5986 0ba6 18000000 		.4byte	.LVL221
 5987 0baa 20000000 		.4byte	.LVL224
 5988 0bae 0300     		.2byte	0x3
 5989 0bb0 91       		.byte	0x91
 5990 0bb1 64       		.sleb128 -28
 5991 0bb2 9F       		.byte	0x9f
 5992 0bb3 20000000 		.4byte	.LVL224
 5993 0bb7 24000000 		.4byte	.LVL225
 5994 0bbb 0100     		.2byte	0x1
 5995 0bbd 53       		.byte	0x53
 5996 0bbe 24000000 		.4byte	.LVL225
 5997 0bc2 E6000000 		.4byte	.LVL251
 5998 0bc6 0300     		.2byte	0x3
 5999 0bc8 91       		.byte	0x91
 6000 0bc9 64       		.sleb128 -28
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 159


 6001 0bca 9F       		.byte	0x9f
 6002 0bcb E6000000 		.4byte	.LVL251
 6003 0bcf E8000000 		.4byte	.LVL252
 6004 0bd3 0100     		.2byte	0x1
 6005 0bd5 53       		.byte	0x53
 6006 0bd6 E8000000 		.4byte	.LVL252
 6007 0bda 34010000 		.4byte	.LVL262
 6008 0bde 0300     		.2byte	0x3
 6009 0be0 91       		.byte	0x91
 6010 0be1 64       		.sleb128 -28
 6011 0be2 9F       		.byte	0x9f
 6012 0be3 34010000 		.4byte	.LVL262
 6013 0be7 38010000 		.4byte	.LVL263
 6014 0beb 0100     		.2byte	0x1
 6015 0bed 53       		.byte	0x53
 6016 0bee 38010000 		.4byte	.LVL263
 6017 0bf2 58010000 		.4byte	.LFE19
 6018 0bf6 0300     		.2byte	0x3
 6019 0bf8 91       		.byte	0x91
 6020 0bf9 64       		.sleb128 -28
 6021 0bfa 9F       		.byte	0x9f
 6022 0bfb 00000000 		.4byte	0
 6023 0bff 00000000 		.4byte	0
 6024              	.LLST76:
 6025 0c03 5C000000 		.4byte	.LVL233
 6026 0c07 1E010000 		.4byte	.LVL260
 6027 0c0b 0100     		.2byte	0x1
 6028 0c0d 57       		.byte	0x57
 6029 0c0e 00000000 		.4byte	0
 6030 0c12 00000000 		.4byte	0
 6031              	.LLST77:
 6032 0c16 10000000 		.4byte	.LVL218
 6033 0c1a 12000000 		.4byte	.LVL219
 6034 0c1e 0100     		.2byte	0x1
 6035 0c20 53       		.byte	0x53
 6036 0c21 00000000 		.4byte	0
 6037 0c25 00000000 		.4byte	0
 6038              	.LLST78:
 6039 0c29 14000000 		.4byte	.LVL220
 6040 0c2d 1A000000 		.4byte	.LVL222
 6041 0c31 0100     		.2byte	0x1
 6042 0c33 53       		.byte	0x53
 6043 0c34 1A000000 		.4byte	.LVL222
 6044 0c38 46010000 		.4byte	.LVL269
 6045 0c3c 0100     		.2byte	0x1
 6046 0c3e 5A       		.byte	0x5a
 6047 0c3f 00000000 		.4byte	0
 6048 0c43 00000000 		.4byte	0
 6049              	.LLST79:
 6050 0c47 00000000 		.4byte	.LVL270
 6051 0c4b 04000000 		.4byte	.LVL271
 6052 0c4f 0100     		.2byte	0x1
 6053 0c51 50       		.byte	0x50
 6054 0c52 04000000 		.4byte	.LVL271
 6055 0c56 24000000 		.4byte	.LFE13
 6056 0c5a 0400     		.2byte	0x4
 6057 0c5c F3       		.byte	0xf3
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 160


 6058 0c5d 01       		.uleb128 0x1
 6059 0c5e 50       		.byte	0x50
 6060 0c5f 9F       		.byte	0x9f
 6061 0c60 00000000 		.4byte	0
 6062 0c64 00000000 		.4byte	0
 6063              	.LLST80:
 6064 0c68 00000000 		.4byte	.LVL270
 6065 0c6c 0C000000 		.4byte	.LVL272
 6066 0c70 0100     		.2byte	0x1
 6067 0c72 51       		.byte	0x51
 6068 0c73 0C000000 		.4byte	.LVL272
 6069 0c77 24000000 		.4byte	.LFE13
 6070 0c7b 0400     		.2byte	0x4
 6071 0c7d F3       		.byte	0xf3
 6072 0c7e 01       		.uleb128 0x1
 6073 0c7f 51       		.byte	0x51
 6074 0c80 9F       		.byte	0x9f
 6075 0c81 00000000 		.4byte	0
 6076 0c85 00000000 		.4byte	0
 6077              	.LLST81:
 6078 0c89 00000000 		.4byte	.LVL274
 6079 0c8d 1A000000 		.4byte	.LVL277
 6080 0c91 0100     		.2byte	0x1
 6081 0c93 50       		.byte	0x50
 6082 0c94 1A000000 		.4byte	.LVL277
 6083 0c98 5E000000 		.4byte	.LVL287
 6084 0c9c 0100     		.2byte	0x1
 6085 0c9e 54       		.byte	0x54
 6086 0c9f 5E000000 		.4byte	.LVL287
 6087 0ca3 60000000 		.4byte	.LVL288
 6088 0ca7 0100     		.2byte	0x1
 6089 0ca9 50       		.byte	0x50
 6090 0caa 60000000 		.4byte	.LVL288
 6091 0cae 64000000 		.4byte	.LVL291
 6092 0cb2 0100     		.2byte	0x1
 6093 0cb4 54       		.byte	0x54
 6094 0cb5 64000000 		.4byte	.LVL291
 6095 0cb9 74000000 		.4byte	.LFE20
 6096 0cbd 0400     		.2byte	0x4
 6097 0cbf F3       		.byte	0xf3
 6098 0cc0 01       		.uleb128 0x1
 6099 0cc1 50       		.byte	0x50
 6100 0cc2 9F       		.byte	0x9f
 6101 0cc3 00000000 		.4byte	0
 6102 0cc7 00000000 		.4byte	0
 6103              	.LLST82:
 6104 0ccb 00000000 		.4byte	.LVL274
 6105 0ccf 1A000000 		.4byte	.LVL277
 6106 0cd3 0100     		.2byte	0x1
 6107 0cd5 51       		.byte	0x51
 6108 0cd6 1A000000 		.4byte	.LVL277
 6109 0cda 5E000000 		.4byte	.LVL287
 6110 0cde 0100     		.2byte	0x1
 6111 0ce0 55       		.byte	0x55
 6112 0ce1 5E000000 		.4byte	.LVL287
 6113 0ce5 62000000 		.4byte	.LVL289
 6114 0ce9 0100     		.2byte	0x1
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 161


 6115 0ceb 51       		.byte	0x51
 6116 0cec 62000000 		.4byte	.LVL289
 6117 0cf0 64000000 		.4byte	.LVL292
 6118 0cf4 0100     		.2byte	0x1
 6119 0cf6 55       		.byte	0x55
 6120 0cf7 64000000 		.4byte	.LVL292
 6121 0cfb 74000000 		.4byte	.LFE20
 6122 0cff 0400     		.2byte	0x4
 6123 0d01 F3       		.byte	0xf3
 6124 0d02 01       		.uleb128 0x1
 6125 0d03 51       		.byte	0x51
 6126 0d04 9F       		.byte	0x9f
 6127 0d05 00000000 		.4byte	0
 6128 0d09 00000000 		.4byte	0
 6129              	.LLST83:
 6130 0d0d 06000000 		.4byte	.LVL275
 6131 0d11 5C000000 		.4byte	.LVL286
 6132 0d15 0200     		.2byte	0x2
 6133 0d17 30       		.byte	0x30
 6134 0d18 9F       		.byte	0x9f
 6135 0d19 5C000000 		.4byte	.LVL286
 6136 0d1d 5E000000 		.4byte	.LVL287
 6137 0d21 0100     		.2byte	0x1
 6138 0d23 50       		.byte	0x50
 6139 0d24 5E000000 		.4byte	.LVL287
 6140 0d28 64000000 		.4byte	.LVL290
 6141 0d2c 0200     		.2byte	0x2
 6142 0d2e 30       		.byte	0x30
 6143 0d2f 9F       		.byte	0x9f
 6144 0d30 64000000 		.4byte	.LVL290
 6145 0d34 74000000 		.4byte	.LFE20
 6146 0d38 0100     		.2byte	0x1
 6147 0d3a 50       		.byte	0x50
 6148 0d3b 00000000 		.4byte	0
 6149 0d3f 00000000 		.4byte	0
 6150              	.LLST84:
 6151 0d43 3E000000 		.4byte	.LVL283
 6152 0d47 42000000 		.4byte	.LVL284
 6153 0d4b 0600     		.2byte	0x6
 6154 0d4d 0C       		.byte	0xc
 6155 0d4e 00366E01 		.4byte	0x16e3600
 6156 0d52 9F       		.byte	0x9f
 6157 0d53 42000000 		.4byte	.LVL284
 6158 0d57 5B000000 		.4byte	.LVL286-1
 6159 0d5b 0100     		.2byte	0x1
 6160 0d5d 53       		.byte	0x53
 6161 0d5e 62000000 		.4byte	.LVL289
 6162 0d62 64000000 		.4byte	.LVL290
 6163 0d66 0100     		.2byte	0x1
 6164 0d68 53       		.byte	0x53
 6165 0d69 00000000 		.4byte	0
 6166 0d6d 00000000 		.4byte	0
 6167              	.LLST85:
 6168 0d71 28000000 		.4byte	.LVL279
 6169 0d75 30000000 		.4byte	.LVL280
 6170 0d79 0100     		.2byte	0x1
 6171 0d7b 50       		.byte	0x50
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 162


 6172 0d7c 00000000 		.4byte	0
 6173 0d80 00000000 		.4byte	0
 6174              	.LLST86:
 6175 0d84 0C000000 		.4byte	.LVL276
 6176 0d88 64000000 		.4byte	.LVL293
 6177 0d8c 0100     		.2byte	0x1
 6178 0d8e 56       		.byte	0x56
 6179 0d8f 00000000 		.4byte	0
 6180 0d93 00000000 		.4byte	0
 6181              		.section	.debug_aranges,"",%progbits
 6182 0000 BC000000 		.4byte	0xbc
 6183 0004 0200     		.2byte	0x2
 6184 0006 00000000 		.4byte	.Ldebug_info0
 6185 000a 04       		.byte	0x4
 6186 000b 00       		.byte	0
 6187 000c 0000     		.2byte	0
 6188 000e 0000     		.2byte	0
 6189 0010 00000000 		.4byte	.LFB1
 6190 0014 10000000 		.4byte	.LFE1-.LFB1
 6191 0018 00000000 		.4byte	.LFB16
 6192 001c 98000000 		.4byte	.LFE16-.LFB16
 6193 0020 00000000 		.4byte	.LFB17
 6194 0024 9C000000 		.4byte	.LFE17-.LFB17
 6195 0028 00000000 		.4byte	.LFB18
 6196 002c CC000000 		.4byte	.LFE18-.LFB18
 6197 0030 00000000 		.4byte	.LFB0
 6198 0034 1C000000 		.4byte	.LFE0-.LFB0
 6199 0038 00000000 		.4byte	.LFB2
 6200 003c 54000000 		.4byte	.LFE2-.LFB2
 6201 0040 00000000 		.4byte	.LFB4
 6202 0044 50000000 		.4byte	.LFE4-.LFB4
 6203 0048 00000000 		.4byte	.LFB5
 6204 004c 20000000 		.4byte	.LFE5-.LFB5
 6205 0050 00000000 		.4byte	.LFB6
 6206 0054 14000000 		.4byte	.LFE6-.LFB6
 6207 0058 00000000 		.4byte	.LFB9
 6208 005c AC000000 		.4byte	.LFE9-.LFB9
 6209 0060 00000000 		.4byte	.LFB10
 6210 0064 1C000000 		.4byte	.LFE10-.LFB10
 6211 0068 00000000 		.4byte	.LFB14
 6212 006c 34000000 		.4byte	.LFE14-.LFB14
 6213 0070 00000000 		.4byte	.LFB11
 6214 0074 94000000 		.4byte	.LFE11-.LFB11
 6215 0078 00000000 		.4byte	.LFB12
 6216 007c 24000000 		.4byte	.LFE12-.LFB12
 6217 0080 00000000 		.4byte	.LFB15
 6218 0084 64000000 		.4byte	.LFE15-.LFB15
 6219 0088 00000000 		.4byte	.LFB3
 6220 008c 24000000 		.4byte	.LFE3-.LFB3
 6221 0090 00000000 		.4byte	.LFB7
 6222 0094 54000000 		.4byte	.LFE7-.LFB7
 6223 0098 00000000 		.4byte	.LFB8
 6224 009c 6C000000 		.4byte	.LFE8-.LFB8
 6225 00a0 00000000 		.4byte	.LFB19
 6226 00a4 58010000 		.4byte	.LFE19-.LFB19
 6227 00a8 00000000 		.4byte	.LFB13
 6228 00ac 24000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 163


 6229 00b0 00000000 		.4byte	.LFB20
 6230 00b4 74000000 		.4byte	.LFE20-.LFB20
 6231 00b8 00000000 		.4byte	0
 6232 00bc 00000000 		.4byte	0
 6233              		.section	.debug_ranges,"",%progbits
 6234              	.Ldebug_ranges0:
 6235 0000 00000000 		.4byte	.LFB1
 6236 0004 10000000 		.4byte	.LFE1
 6237 0008 00000000 		.4byte	.LFB16
 6238 000c 98000000 		.4byte	.LFE16
 6239 0010 00000000 		.4byte	.LFB17
 6240 0014 9C000000 		.4byte	.LFE17
 6241 0018 00000000 		.4byte	.LFB18
 6242 001c CC000000 		.4byte	.LFE18
 6243 0020 00000000 		.4byte	.LFB0
 6244 0024 1C000000 		.4byte	.LFE0
 6245 0028 00000000 		.4byte	.LFB2
 6246 002c 54000000 		.4byte	.LFE2
 6247 0030 00000000 		.4byte	.LFB4
 6248 0034 50000000 		.4byte	.LFE4
 6249 0038 00000000 		.4byte	.LFB5
 6250 003c 20000000 		.4byte	.LFE5
 6251 0040 00000000 		.4byte	.LFB6
 6252 0044 14000000 		.4byte	.LFE6
 6253 0048 00000000 		.4byte	.LFB9
 6254 004c AC000000 		.4byte	.LFE9
 6255 0050 00000000 		.4byte	.LFB10
 6256 0054 1C000000 		.4byte	.LFE10
 6257 0058 00000000 		.4byte	.LFB14
 6258 005c 34000000 		.4byte	.LFE14
 6259 0060 00000000 		.4byte	.LFB11
 6260 0064 94000000 		.4byte	.LFE11
 6261 0068 00000000 		.4byte	.LFB12
 6262 006c 24000000 		.4byte	.LFE12
 6263 0070 00000000 		.4byte	.LFB15
 6264 0074 64000000 		.4byte	.LFE15
 6265 0078 00000000 		.4byte	.LFB3
 6266 007c 24000000 		.4byte	.LFE3
 6267 0080 00000000 		.4byte	.LFB7
 6268 0084 54000000 		.4byte	.LFE7
 6269 0088 00000000 		.4byte	.LFB8
 6270 008c 6C000000 		.4byte	.LFE8
 6271 0090 00000000 		.4byte	.LFB19
 6272 0094 58010000 		.4byte	.LFE19
 6273 0098 00000000 		.4byte	.LFB13
 6274 009c 24000000 		.4byte	.LFE13
 6275 00a0 00000000 		.4byte	.LFB20
 6276 00a4 74000000 		.4byte	.LFE20
 6277 00a8 00000000 		.4byte	0
 6278 00ac 00000000 		.4byte	0
 6279              		.section	.debug_line,"",%progbits
 6280              	.Ldebug_line0:
 6281 0000 6F040000 		.section	.debug_str,"MS",%progbits,1
 6281      0200D600 
 6281      00000201 
 6281      FB0E0D00 
 6281      01010101 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 164


 6282              	.LASF145:
 6283 0000 736E7341 		.ascii	"snsAddrPtr\000"
 6283      64647250 
 6283      747200
 6284              	.LASF137:
 6285 000b 43617053 		.ascii	"CapSense_SsCSDCalculateScanDuration\000"
 6285      656E7365 
 6285      5F537343 
 6285      53444361 
 6285      6C63756C 
 6286              	.LASF168:
 6287 002f 43617053 		.ascii	"CapSense_widgetIndex\000"
 6287      656E7365 
 6287      5F776964 
 6287      67657449 
 6287      6E646578 
 6288              	.LASF70:
 6289 0044 736E7254 		.ascii	"snrTestWidgetId\000"
 6289      65737457 
 6289      69646765 
 6289      74496400 
 6290              	.LASF27:
 6291 0054 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6291      656E7365 
 6291      5F554E44 
 6291      4546494E 
 6291      45445F45 
 6292              	.LASF124:
 6293 0069 694D6F64 		.ascii	"iMod\000"
 6293      00
 6294              	.LASF8:
 6295 006e 756E7369 		.ascii	"unsigned int\000"
 6295      676E6564 
 6295      20696E74 
 6295      00
 6296              	.LASF61:
 6297 007b 7363616E 		.ascii	"scanCounter\000"
 6297      436F756E 
 6297      74657200 
 6298              	.LASF117:
 6299 0087 72617469 		.ascii	"ratio\000"
 6299      6F00
 6300              	.LASF59:
 6301 008d 6877436C 		.ascii	"hwClock\000"
 6301      6F636B00 
 6302              	.LASF187:
 6303 0095 433A5C55 		.ascii	"C:\\Users\\MIHAILO\\Documents\\PSoC Creator\\PSoC10"
 6303      73657273 
 6303      5C4D4948 
 6303      41494C4F 
 6303      5C446F63 
 6304 00c3 315C4C61 		.ascii	"1\\Lab010.cydsn\000"
 6304      62303130 
 6304      2E637964 
 6304      736E00
 6305              	.LASF74:
 6306 00d2 7363616E 		.ascii	"scanCsdISC\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 165


 6306      43736449 
 6306      534300
 6307              	.LASF131:
 6308 00dd 696E7465 		.ascii	"interruptState\000"
 6308      72727570 
 6308      74537461 
 6308      746500
 6309              	.LASF188:
 6310 00ec 43617053 		.ascii	"CapSense_SsCSDConfigIDACs\000"
 6310      656E7365 
 6310      5F537343 
 6310      5344436F 
 6310      6E666967 
 6311              	.LASF112:
 6312 0106 70747246 		.ascii	"ptrFlashWidget\000"
 6312      6C617368 
 6312      57696467 
 6312      657400
 6313              	.LASF165:
 6314 0115 43617053 		.ascii	"CapSense_eleCsdDisconnectFlag\000"
 6314      656E7365 
 6314      5F656C65 
 6314      43736444 
 6314      6973636F 
 6315              	.LASF107:
 6316 0133 72617763 		.ascii	"rawcount\000"
 6316      6F756E74 
 6316      00
 6317              	.LASF180:
 6318 013c 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6318      656E7365 
 6318      5F537353 
 6318      65744D6F 
 6318      64436C6B 
 6319              	.LASF147:
 6320 015d 70696E4D 		.ascii	"pinModeShift\000"
 6320      6F646553 
 6320      68696674 
 6320      00
 6321              	.LASF108:
 6322 016a 736E7349 		.ascii	"snsIndex\000"
 6322      6E646578 
 6322      00
 6323              	.LASF125:
 6324 0173 43617053 		.ascii	"CapSense_SsCSDNormalizeIdac\000"
 6324      656E7365 
 6324      5F537343 
 6324      53444E6F 
 6324      726D616C 
 6325              	.LASF49:
 6326 018f 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6326      656E7365 
 6326      5F52414D 
 6326      5F57445F 
 6326      4C495354 
 6327              	.LASF151:
 6328 01ab 73656E73 		.ascii	"sensorId\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 166


 6328      6F724964 
 6328      00
 6329              	.LASF130:
 6330 01b4 70747257 		.ascii	"ptrWdgt\000"
 6330      64677400 
 6331              	.LASF40:
 6332 01bc 69646163 		.ascii	"idacGainIndex\000"
 6332      4761696E 
 6332      496E6465 
 6332      7800
 6333              	.LASF150:
 6334 01ca 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 6334      656E7365 
 6334      5F537343 
 6334      5344436F 
 6334      6E6E6563 
 6335              	.LASF12:
 6336 01e9 666C6F61 		.ascii	"float\000"
 6336      7400
 6337              	.LASF140:
 6338 01ef 43617053 		.ascii	"CapSense_SsCSDTriggerScan\000"
 6338      656E7365 
 6338      5F537343 
 6338      53445472 
 6338      69676765 
 6339              	.LASF85:
 6340 0209 73686966 		.ascii	"shift\000"
 6340      7400
 6341              	.LASF136:
 6342 020f 736E7343 		.ascii	"snsClkSrc\000"
 6342      6C6B5372 
 6342      6300
 6343              	.LASF139:
 6344 0219 77617463 		.ascii	"watchdogCounter\000"
 6344      68646F67 
 6344      436F756E 
 6344      74657200 
 6345              	.LASF156:
 6346 0229 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6346      656E7365 
 6346      5F435344 
 6346      53657475 
 6346      70576964 
 6347              	.LASF148:
 6348 0241 70696E48 		.ascii	"pinHSIOMShift\000"
 6348      53494F4D 
 6348      53686966 
 6348      7400
 6349              	.LASF69:
 6350 024f 736E734C 		.ascii	"snsList\000"
 6350      69737400 
 6351              	.LASF183:
 6352 0257 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6352      656E7365 
 6352      5F495352 
 6352      5F537461 
 6352      72744578 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 167


 6353              	.LASF7:
 6354 026c 6C6F6E67 		.ascii	"long long unsigned int\000"
 6354      206C6F6E 
 6354      6720756E 
 6354      7369676E 
 6354      65642069 
 6355              	.LASF169:
 6356 0283 43617053 		.ascii	"CapSense_sensorIndex\000"
 6356      656E7365 
 6356      5F73656E 
 6356      736F7249 
 6356      6E646578 
 6357              	.LASF86:
 6358 0298 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6358      656E7365 
 6358      5F464C41 
 6358      53485F49 
 6358      4F5F5354 
 6359              	.LASF71:
 6360 02b1 736E7254 		.ascii	"snrTestSensorId\000"
 6360      65737453 
 6360      656E736F 
 6360      72496400 
 6361              	.LASF96:
 6362 02c1 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 6362      4E6F6973 
 6362      65456E76 
 6362      6C7000
 6363              	.LASF159:
 6364 02d0 63616C4D 		.ascii	"calMask\000"
 6364      61736B00 
 6365              	.LASF94:
 6366 02d8 77646774 		.ascii	"wdgtType\000"
 6366      54797065 
 6366      00
 6367              	.LASF157:
 6368 02e1 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6368      656E7365 
 6368      5F435344 
 6368      53657475 
 6368      70576964 
 6369              	.LASF189:
 6370 02fc 43617053 		.ascii	"CapSense_SsCSDCmodPrecharge\000"
 6370      656E7365 
 6370      5F537343 
 6370      5344436D 
 6370      6F645072 
 6371              	.LASF185:
 6372 0318 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6372      43313120 
 6372      352E342E 
 6372      31203230 
 6372      31363036 
 6373 034b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6373      20726576 
 6373      6973696F 
 6373      6E203233 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 168


 6373      37373135 
 6374 037e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6374      66756E63 
 6374      74696F6E 
 6374      2D736563 
 6374      74696F6E 
 6375              	.LASF146:
 6376 03a6 6E657752 		.ascii	"newRegisterValue\000"
 6376      65676973 
 6376      74657256 
 6376      616C7565 
 6376      00
 6377              	.LASF67:
 6378 03b7 6D6F6443 		.ascii	"modCsdClk\000"
 6378      7364436C 
 6378      6B00
 6379              	.LASF55:
 6380 03c1 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6380      656E7365 
 6380      5F52414D 
 6380      5F534E53 
 6380      5F535452 
 6381              	.LASF113:
 6382 03d9 70747252 		.ascii	"ptrRamWidget\000"
 6382      616D5769 
 6382      64676574 
 6382      00
 6383              	.LASF105:
 6384 03e6 74617267 		.ascii	"target\000"
 6384      657400
 6385              	.LASF79:
 6386 03ed 64725074 		.ascii	"drPtr\000"
 6386      7200
 6387              	.LASF184:
 6388 03f3 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6388      656E7365 
 6388      5F537353 
 6388      77697463 
 6388      6853656E 
 6389              	.LASF44:
 6390 0410 73696750 		.ascii	"sigPFC\000"
 6390      464300
 6391              	.LASF36:
 6392 0417 68797374 		.ascii	"hysteresis\000"
 6392      65726573 
 6392      697300
 6393              	.LASF123:
 6394 0422 7261774C 		.ascii	"rawLevel\000"
 6394      6576656C 
 6394      00
 6395              	.LASF164:
 6396 042b 43617053 		.ascii	"CapSense_counterResolution\000"
 6396      656E7365 
 6396      5F636F75 
 6396      6E746572 
 6396      5265736F 
 6397              	.LASF97:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 169


 6398 0446 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6398      656E7365 
 6398      5F464C41 
 6398      53485F57 
 6398      445F5354 
 6399              	.LASF38:
 6400 045f 6C6F7742 		.ascii	"lowBslnRst\000"
 6400      736C6E52 
 6400      737400
 6401              	.LASF121:
 6402 046a 6D696E52 		.ascii	"minRaw\000"
 6402      617700
 6403              	.LASF129:
 6404 0471 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 6404      656E7365 
 6404      5F537343 
 6404      53445365 
 6404      74557049 
 6405              	.LASF93:
 6406 048a 746F7461 		.ascii	"totalNumSns\000"
 6406      6C4E756D 
 6406      536E7300 
 6407              	.LASF162:
 6408 0496 43617053 		.ascii	"CapSense_SsCSDDisconnectSnsExt\000"
 6408      656E7365 
 6408      5F537343 
 6408      53444469 
 6408      73636F6E 
 6409              	.LASF26:
 6410 04b5 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 6410      5453454E 
 6410      53455F43 
 6410      53445F4E 
 6410      4F495345 
 6411              	.LASF120:
 6412 04da 6761696E 		.ascii	"gainIndex\000"
 6412      496E6465 
 6412      7800
 6413              	.LASF34:
 6414 04e4 6E6F6973 		.ascii	"noiseTh\000"
 6414      65546800 
 6415              	.LASF14:
 6416 04ec 63686172 		.ascii	"char\000"
 6416      00
 6417              	.LASF176:
 6418 04f1 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6418      656E7365 
 6418      5F537353 
 6418      6574416C 
 6418      6C494F73 
 6419              	.LASF179:
 6420 050b 43794578 		.ascii	"CyExitCriticalSection\000"
 6420      69744372 
 6420      69746963 
 6420      616C5365 
 6420      6374696F 
 6421              	.LASF181:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 170


 6422 0521 43794465 		.ascii	"CyDelayCycles\000"
 6422      6C617943 
 6422      79636C65 
 6422      7300
 6423              	.LASF118:
 6424 052f 6D617849 		.ascii	"maxIdac\000"
 6424      64616300 
 6425              	.LASF83:
 6426 0537 6873696F 		.ascii	"hsiomShift\000"
 6426      6D536869 
 6426      667400
 6427              	.LASF10:
 6428 0542 75696E74 		.ascii	"uint16\000"
 6428      313600
 6429              	.LASF114:
 6430 0549 70747252 		.ascii	"ptrRamSensor\000"
 6430      616D5365 
 6430      6E736F72 
 6430      00
 6431              	.LASF32:
 6432 0556 7265736F 		.ascii	"resolution\000"
 6432      6C757469 
 6432      6F6E00
 6433              	.LASF62:
 6434 0561 73746174 		.ascii	"status\000"
 6434      757300
 6435              	.LASF18:
 6436 0568 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6436      656E7365 
 6436      5F4C4F57 
 6436      5F42534C 
 6436      4E5F5253 
 6437              	.LASF175:
 6438 0583 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6438      656E7365 
 6438      5F537353 
 6438      6574536E 
 6438      73436C6F 
 6439              	.LASF54:
 6440 05a1 69646163 		.ascii	"idacComp\000"
 6440      436F6D70 
 6440      00
 6441              	.LASF78:
 6442 05aa 70635074 		.ascii	"pcPtr\000"
 6442      7200
 6443              	.LASF6:
 6444 05b0 6C6F6E67 		.ascii	"long long int\000"
 6444      206C6F6E 
 6444      6720696E 
 6444      7400
 6445              	.LASF95:
 6446 05be 6E756D43 		.ascii	"numCols\000"
 6446      6F6C7300 
 6447              	.LASF128:
 6448 05c6 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6448      656E7365 
 6448      5F537343 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 171


 6448      5344496E 
 6448      69746961 
 6449              	.LASF37:
 6450 05df 6F6E4465 		.ascii	"onDebounce\000"
 6450      626F756E 
 6450      636500
 6451              	.LASF110:
 6452 05ea 75707065 		.ascii	"upperLimit\000"
 6452      724C696D 
 6452      697400
 6453              	.LASF158:
 6454 05f5 43617053 		.ascii	"CapSense_SsCSDCalibrate\000"
 6454      656E7365 
 6454      5F537343 
 6454      53444361 
 6454      6C696272 
 6455              	.LASF106:
 6456 060d 63616C69 		.ascii	"calibrateStatus\000"
 6456      62726174 
 6456      65537461 
 6456      74757300 
 6457              	.LASF68:
 6458 061d 77646774 		.ascii	"wdgtList\000"
 6458      4C697374 
 6458      00
 6459              	.LASF99:
 6460 0626 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6460      656E7365 
 6460      5F464C41 
 6460      53485F53 
 6460      54525543 
 6461              	.LASF177:
 6462 063c 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 6462      656E7365 
 6462      5F577269 
 6462      74654269 
 6462      74735361 
 6463              	.LASF166:
 6464 0653 43617053 		.ascii	"CapSense_dsRam\000"
 6464      656E7365 
 6464      5F647352 
 6464      616D00
 6465              	.LASF73:
 6466 0662 736E7254 		.ascii	"snrTestRawCount\000"
 6466      65737452 
 6466      6177436F 
 6466      756E7400 
 6467              	.LASF174:
 6468 0672 43617053 		.ascii	"CapSense_configCsd\000"
 6468      656E7365 
 6468      5F636F6E 
 6468      66696743 
 6468      736400
 6469              	.LASF35:
 6470 0685 6E4E6F69 		.ascii	"nNoiseTh\000"
 6470      73655468 
 6470      00
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 172


 6471              	.LASF66:
 6472 068e 63736430 		.ascii	"csd0Config\000"
 6472      436F6E66 
 6472      696700
 6473              	.LASF115:
 6474 0699 43617053 		.ascii	"CapSense_SsCSDCalibrateCheck\000"
 6474      656E7365 
 6474      5F537343 
 6474      53444361 
 6474      6C696272 
 6475              	.LASF46:
 6476 06b6 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6476      656E7365 
 6476      5F52414D 
 6476      5F57445F 
 6476      42415345 
 6477              	.LASF109:
 6478 06d2 66726571 		.ascii	"freqChannel\000"
 6478      4368616E 
 6478      6E656C00 
 6479              	.LASF77:
 6480 06de 6873696F 		.ascii	"hsiomPtr\000"
 6480      6D507472 
 6480      00
 6481              	.LASF11:
 6482 06e7 75696E74 		.ascii	"uint32\000"
 6482      333200
 6483              	.LASF90:
 6484 06ee 70747232 		.ascii	"ptr2FltrHistory\000"
 6484      466C7472 
 6484      48697374 
 6484      6F727900 
 6485              	.LASF102:
 6486 06fe 6761696E 		.ascii	"gainValue\000"
 6486      56616C75 
 6486      6500
 6487              	.LASF172:
 6488 0708 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6488      656E7365 
 6488      5F637572 
 6488      536E7349 
 6488      4F507472 
 6489              	.LASF82:
 6490 071d 6D61736B 		.ascii	"mask\000"
 6490      00
 6491              	.LASF111:
 6492 0722 6C6F7765 		.ascii	"lowerLimit\000"
 6492      724C696D 
 6492      697400
 6493              	.LASF161:
 6494 072d 7074724D 		.ascii	"ptrMaxIdac\000"
 6494      61784964 
 6494      616300
 6495              	.LASF122:
 6496 0738 6D617852 		.ascii	"maxRawLevel\000"
 6496      61774C65 
 6496      76656C00 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 173


 6497              	.LASF186:
 6498 0744 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c\000"
 6498      72617465 
 6498      645F536F 
 6498      75726365 
 6498      5C50536F 
 6499              	.LASF31:
 6500 0774 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6500      656E7365 
 6500      5F53454E 
 6500      53455F4D 
 6500      4554484F 
 6501              	.LASF100:
 6502 0790 6C6F6E67 		.ascii	"long double\000"
 6502      20646F75 
 6502      626C6500 
 6503              	.LASF135:
 6504 079c 43617053 		.ascii	"CapSense_SsCSDConfigClock\000"
 6504      656E7365 
 6504      5F537343 
 6504      5344436F 
 6504      6E666967 
 6505              	.LASF16:
 6506 07b6 72656733 		.ascii	"reg32\000"
 6506      3200
 6507              	.LASF72:
 6508 07bc 736E7254 		.ascii	"snrTestScanCounter\000"
 6508      65737453 
 6508      63616E43 
 6508      6F756E74 
 6508      657200
 6509              	.LASF57:
 6510 07cf 636F6E66 		.ascii	"configId\000"
 6510      69674964 
 6510      00
 6511              	.LASF89:
 6512 07d8 70747232 		.ascii	"ptr2SnsRam\000"
 6512      536E7352 
 6512      616D00
 6513              	.LASF65:
 6514 07e3 736E7353 		.ascii	"snsStatus\000"
 6514      74617475 
 6514      7300
 6515              	.LASF42:
 6516 07ed 736E7343 		.ascii	"snsClkSource\000"
 6516      6C6B536F 
 6516      75726365 
 6516      00
 6517              	.LASF155:
 6518 07fa 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6518      656E7365 
 6518      5F537343 
 6518      5344456C 
 6518      65637472 
 6519              	.LASF2:
 6520 0817 73686F72 		.ascii	"short int\000"
 6520      7420696E 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 174


 6520      7400
 6521              	.LASF154:
 6522 0821 6E657748 		.ascii	"newHsiomRegValue\000"
 6522      73696F6D 
 6522      52656756 
 6522      616C7565 
 6522      00
 6523              	.LASF76:
 6524 0832 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6524      656E7365 
 6524      5F52414D 
 6524      5F535452 
 6524      55435400 
 6525              	.LASF152:
 6526 0846 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 6526      656E7365 
 6526      5F435344 
 6526      44697363 
 6526      6F6E6E65 
 6527              	.LASF126:
 6528 0860 43617053 		.ascii	"CapSense_SsCSDSetModeSnsClockDivider\000"
 6528      656E7365 
 6528      5F537343 
 6528      53445365 
 6528      744D6F64 
 6529              	.LASF141:
 6530 0885 43617053 		.ascii	"CapSense_SsCSDClockRestart\000"
 6530      656E7365 
 6530      5F537343 
 6530      5344436C 
 6530      6F636B52 
 6531              	.LASF4:
 6532 08a0 6C6F6E67 		.ascii	"long int\000"
 6532      20696E74 
 6532      00
 6533              	.LASF63:
 6534 08a9 77646774 		.ascii	"wdgtEnable\000"
 6534      456E6162 
 6534      6C6500
 6535              	.LASF52:
 6536 08b4 64696666 		.ascii	"diff\000"
 6536      00
 6537              	.LASF119:
 6538 08b9 6D696E49 		.ascii	"minIdac\000"
 6538      64616300 
 6539              	.LASF60:
 6540 08c1 74756E65 		.ascii	"tunerCmd\000"
 6540      72436D64 
 6540      00
 6541              	.LASF160:
 6542 08ca 74656D70 		.ascii	"temp\000"
 6542      00
 6543              	.LASF29:
 6544 08cf 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6544      656E7365 
 6544      5F53454E 
 6544      53455F4D 
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 175


 6544      4554484F 
 6545              	.LASF80:
 6546 08eb 70735074 		.ascii	"psPtr\000"
 6546      7200
 6547              	.LASF48:
 6548 08f1 62757474 		.ascii	"button0\000"
 6548      6F6E3000 
 6549              	.LASF190:
 6550 08f9 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6550      656E7365 
 6550      5F435344 
 6550      43616C69 
 6550      62726174 
 6551              	.LASF101:
 6552 0915 6761696E 		.ascii	"gainReg\000"
 6552      52656700 
 6553              	.LASF167:
 6554 091d 43617053 		.ascii	"CapSense_dsFlash\000"
 6554      656E7365 
 6554      5F647346 
 6554      6C617368 
 6554      00
 6555              	.LASF43:
 6556 092e 66696E67 		.ascii	"fingerCap\000"
 6556      65724361 
 6556      7000
 6557              	.LASF143:
 6558 0938 43617053 		.ascii	"CapSense_CSDScanExt\000"
 6558      656E7365 
 6558      5F435344 
 6558      5363616E 
 6558      45787400 
 6559              	.LASF64:
 6560 094c 77646774 		.ascii	"wdgtStatus\000"
 6560      53746174 
 6560      757300
 6561              	.LASF144:
 6562 0957 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 6562      656E7365 
 6562      5F435344 
 6562      436F6E6E 
 6562      65637453 
 6563              	.LASF28:
 6564 096e 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6564      656E7365 
 6564      5F53454E 
 6564      53455F4D 
 6564      4554484F 
 6565              	.LASF45:
 6566 098a 73697A65 		.ascii	"sizetype\000"
 6566      74797065 
 6566      00
 6567              	.LASF84:
 6568 0993 64725368 		.ascii	"drShift\000"
 6568      69667400 
 6569              	.LASF5:
 6570 099b 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 176


 6570      20756E73 
 6570      69676E65 
 6570      6420696E 
 6570      7400
 6571              	.LASF138:
 6572 09ad 746D7052 		.ascii	"tmpRegValue\000"
 6572      65675661 
 6572      6C756500 
 6573              	.LASF39:
 6574 09b9 69646163 		.ascii	"idacMod\000"
 6574      4D6F6400 
 6575              	.LASF116:
 6576 09c1 43617053 		.ascii	"CapSense_SsCSDSwitchIdacGain\000"
 6576      656E7365 
 6576      5F537343 
 6576      53445377 
 6576      69746368 
 6577              	.LASF91:
 6578 09de 70747232 		.ascii	"ptr2DebounceArr\000"
 6578      4465626F 
 6578      756E6365 
 6578      41727200 
 6579              	.LASF33:
 6580 09ee 66696E67 		.ascii	"fingerTh\000"
 6580      65725468 
 6580      00
 6581              	.LASF51:
 6582 09f7 62736C6E 		.ascii	"bslnExt\000"
 6582      45787400 
 6583              	.LASF103:
 6584 09ff 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 6584      656E7365 
 6584      5F494441 
 6584      435F4741 
 6584      494E5F54 
 6585              	.LASF47:
 6586 0a1f 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 6586      656E7365 
 6586      5F52414D 
 6586      5F57445F 
 6586      42555454 
 6587              	.LASF15:
 6588 0a3d 63797374 		.ascii	"cystatus\000"
 6588      61747573 
 6588      00
 6589              	.LASF1:
 6590 0a46 756E7369 		.ascii	"unsigned char\000"
 6590      676E6564 
 6590      20636861 
 6590      7200
 6591              	.LASF92:
 6592 0a54 73746174 		.ascii	"staticConfig\000"
 6592      6963436F 
 6592      6E666967 
 6592      00
 6593              	.LASF75:
 6594 0a61 7363616E 		.ascii	"scanCurrentISC\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 177


 6594      43757272 
 6594      656E7449 
 6594      534300
 6595              	.LASF88:
 6596 0a70 70747232 		.ascii	"ptr2WdgtRam\000"
 6596      57646774 
 6596      52616D00 
 6597              	.LASF17:
 6598 0a7c 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6598      656E7365 
 6598      5F544852 
 6598      4553484F 
 6598      4C445F54 
 6599              	.LASF149:
 6600 0a94 43617053 		.ascii	"CapSense_CSDScan\000"
 6600      656E7365 
 6600      5F435344 
 6600      5363616E 
 6600      00
 6601              	.LASF30:
 6602 0aa5 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6602      656E7365 
 6602      5F53454E 
 6602      53455F4D 
 6602      4554484F 
 6603              	.LASF81:
 6604 0ac2 6873696F 		.ascii	"hsiomMask\000"
 6604      6D4D6173 
 6604      6B00
 6605              	.LASF182:
 6606 0acc 4379496E 		.ascii	"CyIntEnable\000"
 6606      74456E61 
 6606      626C6500 
 6607              	.LASF41:
 6608 0ad8 736E7343 		.ascii	"snsClk\000"
 6608      6C6B00
 6609              	.LASF163:
 6610 0adf 6761696E 		.ascii	"gainSwitch\000"
 6610      53776974 
 6610      636800
 6611              	.LASF178:
 6612 0aea 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6612      74657243 
 6612      72697469 
 6612      63616C53 
 6612      65637469 
 6613              	.LASF170:
 6614 0b01 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6614      656E7365 
 6614      5F637572 
 6614      52616D53 
 6614      6E735074 
 6615              	.LASF0:
 6616 0b17 7369676E 		.ascii	"signed char\000"
 6616      65642063 
 6616      68617200 
 6617              	.LASF171:
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 178


 6618 0b23 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6618      656E7365 
 6618      5F736361 
 6618      6E467265 
 6618      71496E64 
 6619              	.LASF50:
 6620 0b3a 62736C6E 		.ascii	"bsln\000"
 6620      00
 6621              	.LASF3:
 6622 0b3f 73686F72 		.ascii	"short unsigned int\000"
 6622      7420756E 
 6622      7369676E 
 6622      65642069 
 6622      6E7400
 6623              	.LASF142:
 6624 0b52 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 6624      656E7365 
 6624      5F537343 
 6624      53445374 
 6624      61727453 
 6625              	.LASF87:
 6626 0b6c 70747232 		.ascii	"ptr2SnsFlash\000"
 6626      536E7346 
 6626      6C617368 
 6626      00
 6627              	.LASF133:
 6628 0b79 6E657752 		.ascii	"newRegValue\000"
 6628      65675661 
 6628      6C756500 
 6629              	.LASF9:
 6630 0b85 75696E74 		.ascii	"uint8\000"
 6630      3800
 6631              	.LASF13:
 6632 0b8b 646F7562 		.ascii	"double\000"
 6632      6C6500
 6633              	.LASF53:
 6634 0b92 6E656742 		.ascii	"negBslnRstCnt\000"
 6634      736C6E52 
 6634      7374436E 
 6634      7400
 6635              	.LASF19:
 6636 0ba0 70617261 		.ascii	"param0\000"
 6636      6D3000
 6637              	.LASF20:
 6638 0ba7 70617261 		.ascii	"param1\000"
 6638      6D3100
 6639              	.LASF21:
 6640 0bae 70617261 		.ascii	"param2\000"
 6640      6D3200
 6641              	.LASF22:
 6642 0bb5 70617261 		.ascii	"param3\000"
 6642      6D3300
 6643              	.LASF23:
 6644 0bbc 70617261 		.ascii	"param4\000"
 6644      6D3400
 6645              	.LASF24:
 6646 0bc3 70617261 		.ascii	"param5\000"
ARM GAS  C:\Users\MIHAILO\AppData\Local\Temp\ccMk0Kxc.s 			page 179


 6646      6D3500
 6647              	.LASF25:
 6648 0bca 70617261 		.ascii	"param6\000"
 6648      6D3600
 6649              	.LASF134:
 6650 0bd1 70747249 		.ascii	"ptrIdacMod\000"
 6650      6461634D 
 6650      6F6400
 6651              	.LASF127:
 6652 0bdc 736E7343 		.ascii	"snsClkDivider\000"
 6652      6C6B4469 
 6652      76696465 
 6652      7200
 6653              	.LASF132:
 6654 0bea 69646163 		.ascii	"idacGain\000"
 6654      4761696E 
 6654      00
 6655              	.LASF58:
 6656 0bf3 64657669 		.ascii	"deviceId\000"
 6656      63654964 
 6656      00
 6657              	.LASF104:
 6658 0bfc 77696467 		.ascii	"widgetId\000"
 6658      65744964 
 6658      00
 6659              	.LASF153:
 6660 0c05 6E657750 		.ascii	"newPcRegValue\000"
 6660      63526567 
 6660      56616C75 
 6660      6500
 6661              	.LASF173:
 6662 0c13 43617053 		.ascii	"CapSense_idacGainTable\000"
 6662      656E7365 
 6662      5F696461 
 6662      63476169 
 6662      6E546162 
 6663              	.LASF56:
 6664 0c2a 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6664      656E7365 
 6664      5F52414D 
 6664      5F534E53 
 6664      5F4C4953 
 6665              	.LASF98:
 6666 0c47 77646774 		.ascii	"wdgtArray\000"
 6666      41727261 
 6666      7900
 6667              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
